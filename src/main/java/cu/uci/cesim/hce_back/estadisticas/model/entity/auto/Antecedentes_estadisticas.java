package cu.uci.cesim.hce_back.estadisticas.model.entity.auto;

import com.fasterxml.jackson.annotation.JsonIdentityInfo;
import com.fasterxml.jackson.annotation.ObjectIdGenerators;

import javax.persistence.*;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;

// Generated Jan 3, 2013 4:54:45 PM by Hibernate Tools 3.4.0.CR1

/**
 * Antecedentes generated by hbm2java
 */
@Entity
@Table(name = "antecedentes", schema = "hc_local")
@JsonIdentityInfo(generator = ObjectIdGenerators.PropertyGenerator.class, property = "id")
public class Antecedentes_estadisticas implements java.io.Serializable {

    private long id;
    private Integer version;
    private Parentesco_estadisticas parentesco;
    private TipoAntecedente_estadisticas tipoAntecedente;
    private HojaFrontal_estadisticas hojaFrontal;
    private String antecedente;
    private Date fecha;
    private String descripcion;
    private Boolean eliminado;
    private Long cid;
    private String edadPaciente;
    private Date fechaResolucion;
    private Boolean cronico;
    private Set<NotaOperatoria_estadisticas> notaOperatorias = new HashSet<NotaOperatoria_estadisticas>(
            0);

    public Antecedentes_estadisticas() {
    }

    public Antecedentes_estadisticas(long id) {
        this.id = id;
    }

    public Antecedentes_estadisticas(long id,
                                     Parentesco_estadisticas parentesco,
                                     TipoAntecedente_estadisticas tipoAntecedente,
                                     HojaFrontal_estadisticas hojaFrontal, String antecedente,
                                     Date fecha, String descripcion, Boolean eliminado, Long cid,
                                     String edadPaciente, Date fechaResolucion, Boolean cronico,
                                     Set<NotaOperatoria_estadisticas> notaOperatorias) {
        this.id = id;
        this.parentesco = parentesco;
        this.tipoAntecedente = tipoAntecedente;
        this.hojaFrontal = hojaFrontal;
        this.antecedente = antecedente;
        this.fecha = fecha;
        this.descripcion = descripcion;
        this.eliminado = eliminado;
        this.cid = cid;
        this.edadPaciente = edadPaciente;
        this.fechaResolucion = fechaResolucion;
        this.cronico = cronico;
        this.notaOperatorias = notaOperatorias;
    }

    @Id
    @Column(name = "id", unique = true, nullable = false)
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    public long getId() {
        return this.id;
    }

    public void setId(long id) {
        this.id = id;
    }

    @Version
    @Column(name = "version")
    public Integer getVersion() {
        return this.version;
    }

    public void setVersion(Integer version) {
        this.version = version;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "id_parentesco")
    public Parentesco_estadisticas getParentesco() {
        return this.parentesco;
    }

    public void setParentesco(Parentesco_estadisticas parentesco) {
        this.parentesco = parentesco;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "id_tipo_antecedente")
    public TipoAntecedente_estadisticas getTipoAntecedente() {
        return this.tipoAntecedente;
    }

    public void setTipoAntecedente(TipoAntecedente_estadisticas tipoAntecedente) {
        this.tipoAntecedente = tipoAntecedente;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "id_hoja_frontal")
    public HojaFrontal_estadisticas getHojaFrontal() {
        return this.hojaFrontal;
    }

    public void setHojaFrontal(HojaFrontal_estadisticas hojaFrontal) {
        this.hojaFrontal = hojaFrontal;
    }

    @Column(name = "antecedente")
    public String getAntecedente() {
        return this.antecedente;
    }

    public void setAntecedente(String antecedente) {
        if (antecedente != null)
            antecedente = antecedente.trim();
        this.antecedente = antecedente;
    }

    @Temporal(TemporalType.DATE)
    @Column(name = "fecha", length = 13)
    public Date getFecha() {
        return this.fecha;
    }

    public void setFecha(Date fecha) {
        this.fecha = fecha;
    }

    @Column(name = "descripcion")
    public String getDescripcion() {
        return this.descripcion;
    }

    public void setDescripcion(String descripcion) {
        if (descripcion != null)
            descripcion = descripcion.trim();
        this.descripcion = descripcion;
    }

    @Column(name = "eliminado")
    public Boolean getEliminado() {
        return this.eliminado;
    }

    public void setEliminado(Boolean eliminado) {
        this.eliminado = eliminado;
    }

    @Column(name = "cid")
    public Long getCid() {
        return this.cid;
    }

    public void setCid(Long cid) {
        this.cid = cid;
    }

    @Column(name = "edad_paciente")
    public String getEdadPaciente() {
        return this.edadPaciente;
    }

    public void setEdadPaciente(String edadPaciente) {
        if (edadPaciente != null)
            edadPaciente = edadPaciente.trim();
        this.edadPaciente = edadPaciente;
    }

    @Temporal(TemporalType.DATE)
    @Column(name = "fecha_resolucion", length = 13)
    public Date getFechaResolucion() {
        return this.fechaResolucion;
    }

    public void setFechaResolucion(Date fechaResolucion) {
        this.fechaResolucion = fechaResolucion;
    }

    @Column(name = "cronico")
    public Boolean getCronico() {
        return this.cronico;
    }

    public void setCronico(Boolean cronico) {
        this.cronico = cronico;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "antecedentes")
    public Set<NotaOperatoria_estadisticas> getNotaOperatorias() {
        return this.notaOperatorias;
    }

    public void setNotaOperatorias(
            Set<NotaOperatoria_estadisticas> notaOperatorias) {
        this.notaOperatorias = notaOperatorias;
    }

}
