package cu.uci.cesim.hce_back.estadisticas.model.entity.auto;

import com.fasterxml.jackson.annotation.JsonIdentityInfo;
import com.fasterxml.jackson.annotation.ObjectIdGenerators;
import org.hibernate.validator.constraints.Length;

import javax.persistence.*;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;

// Generated 31-ene-2009 13:29:41 by Hibernate Tools 3.2.2.GA


/**
 * Usuario generated by hbm2java
 */
@Entity
@Table(name = "usuario", schema = "comun", uniqueConstraints = {
        @UniqueConstraint(columnNames = "username"),
        @UniqueConstraint(columnNames = "nombre")})
@JsonIdentityInfo(generator = ObjectIdGenerators.PropertyGenerator.class, property = "id")
public class Usuario_estadisticas implements java.io.Serializable {

    private Long id;
    private Integer version;
    private Profile_estadisticas profile;
    private String nombre;
    private String username;
    private String password;
    private Date fechaNacimiento;
    private Boolean eliminado;
    private Long cid;
    private Boolean cuentaHabilitada;
    private String primerApellido;
    private String segundoApellido;
    private String direccionParticular;
    private String cedula;
    private String pasaporte;
    private String telefono;
    private Long idTipoIdentidad;
    private Medico_estadisticas medico;

    private Set<Role_estadisticas> roles = new HashSet<Role_estadisticas>(0);

    private Set<ServicioInEntidad_estadisticas> servicioInEntidads = new HashSet<ServicioInEntidad_estadisticas>(
            0);

    public Usuario_estadisticas() {
    }

    public Usuario_estadisticas(Long id, Profile_estadisticas profile, String nombre, String username,
                                String password) {
        this.id = id;
        this.profile = profile;
        this.nombre = nombre;
        this.username = username;
        this.password = password;
    }

    public Usuario_estadisticas(Long id, Profile_estadisticas profile, String nombre, String username,
                                String password, Date fechaNacimiento, Boolean eliminado,
                                Long cid, Boolean cuentaHabilitada, String primerApellido,
                                String segundoApellido, String direccionParticular, String cedula,
                                String pasaporte, String telefono, Long idTipoIdentidad,
                                Set<Servicio_estadisticas> servicios, Set<Role_estadisticas> roles) {
        this.id = id;
        this.profile = profile;
        this.nombre = nombre;
        this.username = username;
        this.password = password;
        this.fechaNacimiento = fechaNacimiento;
        this.eliminado = eliminado;
        this.cid = cid;
        this.cuentaHabilitada = cuentaHabilitada;
        this.primerApellido = primerApellido;
        this.segundoApellido = segundoApellido;
        this.direccionParticular = direccionParticular;
        this.cedula = cedula;
        this.pasaporte = pasaporte;
        this.telefono = telefono;
        this.idTipoIdentidad = idTipoIdentidad;

        this.roles = roles;
    }

    @Id
    @Column(name = "id", unique = true, nullable = false)

    @GeneratedValue(strategy = GenerationType.IDENTITY)
    public Long getId() {
        return this.id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    @Version
    @Column(name = "version")
    public Integer getVersion() {
        return this.version;
    }

    public void setVersion(Integer version) {
        this.version = version;
    }


    @OneToOne(fetch = FetchType.EAGER, mappedBy = "usuario")
    public Profile_estadisticas getProfile() {
        return this.profile;
    }

    public void setProfile(Profile_estadisticas profile) {
        this.profile = profile;
    }

    @Column(name = "nombre", unique = true, nullable = false, length = 150)

    @Length(max = 150)
    public String getNombre() {
        return this.nombre;
    }

    public void setNombre(String nombre) {
        this.nombre = nombre;
    }

    @Column(name = "username", unique = true, nullable = false, length = 150)

    @Length(max = 150)
    public String getUsername() {
        return this.username;
    }

    public void setUsername(String username) {
        this.username = username;
    }

    @Column(name = "password", nullable = false, length = 150)

    @Length(max = 150)
    public String getPassword() {
        return this.password;
    }

    public void setPassword(String password) {
        this.password = password;
    }

    @Temporal(TemporalType.DATE)
    @Column(name = "fecha_nacimiento", length = 13)
    public Date getFechaNacimiento() {
        return this.fechaNacimiento;
    }

    public void setFechaNacimiento(Date fechaNacimiento) {
        this.fechaNacimiento = fechaNacimiento;
    }

    @Column(name = "eliminado")
    public Boolean getEliminado() {
        return this.eliminado;
    }

    public void setEliminado(Boolean eliminado) {
        this.eliminado = eliminado;
    }

    @Column(name = "cid")
    public Long getCid() {
        return this.cid;
    }

    public void setCid(Long cid) {
        this.cid = cid;
    }

    @Column(name = "cuenta_habilitada")
    public Boolean getCuentaHabilitada() {
        return this.cuentaHabilitada;
    }

    public void setCuentaHabilitada(Boolean cuentaHabilitada) {
        this.cuentaHabilitada = cuentaHabilitada;
    }

    @Column(name = "primer_apellido")
    public String getPrimerApellido() {
        return this.primerApellido;
    }

    public void setPrimerApellido(String primerApellido) {
        this.primerApellido = primerApellido;
    }

    @Column(name = "segundo_apellido")
    public String getSegundoApellido() {
        return this.segundoApellido;
    }

    public void setSegundoApellido(String segundoApellido) {
        this.segundoApellido = segundoApellido;
    }

    @Column(name = "direccion_particular")
    public String getDireccionParticular() {
        return this.direccionParticular;
    }

    public void setDireccionParticular(String direccionParticular) {
        this.direccionParticular = direccionParticular;
    }

    @Column(name = "cedula")
    public String getCedula() {
        return this.cedula;
    }

    public void setCedula(String cedula) {
        this.cedula = cedula;
    }

    @Column(name = "pasaporte")
    public String getPasaporte() {
        return this.pasaporte;
    }

    public void setPasaporte(String pasaporte) {
        this.pasaporte = pasaporte;
    }

    @Column(name = "telefono")
    public String getTelefono() {
        return this.telefono;
    }

    public void setTelefono(String telefono) {
        this.telefono = telefono;
    }

    @Column(name = "id_tipo_identidad")
    public Long getIdTipoIdentidad() {
        return this.idTipoIdentidad;
    }

    public void setIdTipoIdentidad(Long idTipoIdentidad) {
        this.idTipoIdentidad = idTipoIdentidad;
    }

    @ManyToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY)
    @JoinTable(name = "user_in_role", schema = "seguridad", joinColumns = {@JoinColumn(name = "id_user", nullable = false, updatable = false)}, inverseJoinColumns = {@JoinColumn(name = "id_role", nullable = false, updatable = false)})
    public Set<Role_estadisticas> getRoles() {
        return this.roles;
    }

    public void setRoles(Set<Role_estadisticas> roles) {
        this.roles = roles;
    }

    @OneToOne(fetch = FetchType.LAZY, mappedBy = "usuario")
    public Medico_estadisticas getMedico() {
        return this.medico;
    }

    public void setMedico(Medico_estadisticas medico) {
        this.medico = medico;
    }

    @ManyToMany(fetch = FetchType.LAZY)
    @JoinTable(name = "usuario_in_servicio", schema = "comun", joinColumns = {@JoinColumn(name = "id_usuario", nullable = false, updatable = false)}, inverseJoinColumns = {@JoinColumn(name = "id_servicio", nullable = false, updatable = false)})
    public Set<ServicioInEntidad_estadisticas> getServicioInEntidads() {
        return this.servicioInEntidads;
    }

    public void setServicioInEntidads(
            Set<ServicioInEntidad_estadisticas> servicioInEntidads) {
        this.servicioInEntidads = servicioInEntidads;
    }

}
