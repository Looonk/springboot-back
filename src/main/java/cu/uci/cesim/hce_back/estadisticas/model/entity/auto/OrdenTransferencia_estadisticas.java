package cu.uci.cesim.hce_back.estadisticas.model.entity.auto;

import com.fasterxml.jackson.annotation.JsonIdentityInfo;
import com.fasterxml.jackson.annotation.ObjectIdGenerators;

import javax.persistence.*;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;

// Generated Apr 18, 2012 10:46:48 AM by Hibernate Tools 3.4.0.CR1


/**
 * OrdenTransferencia generated by hbm2java
 */
@Entity
@Table(name = "orden_transferencia", schema = "publico")
@JsonIdentityInfo(generator = ObjectIdGenerators.PropertyGenerator.class, property = "id")
public class OrdenTransferencia_estadisticas implements java.io.Serializable {

    private long id;
    private Integer version;
    private Funcionalidad_estadisticas funcionalidad;
    private Cama_estadisticas camaByCamaFutura;
    private Admision_estadisticas admision;
    private ServicioInEntidad_estadisticas servicioInEntidadByIdServicioEmisor;
    private Cama_estadisticas camaByCamaEstaba;
    private Medico_estadisticas medico;
    private Servicio_estadisticas servicioByIdServicioReceptorUbicacion;
    private Servicio_estadisticas servicioByIdServicioEmisorUbicacion;
    private ServicioInEntidad_estadisticas servicioInEntidadByIdServicioReceptor;
    private String motivoTransferencia;
    private Date fechaElaboracion;
    private Boolean eliminado;
    private Long cid;
    private Date fecha;
    private Boolean anulada;
    private Boolean transferenciaRealizada;
    private Boolean rechazada;
    private String motivoRechazo;
    private Set<Transferencia_estadisticas> transferencias = new HashSet<Transferencia_estadisticas>(
            0);

    public OrdenTransferencia_estadisticas() {
    }

    public OrdenTransferencia_estadisticas(
            long id,
            Funcionalidad_estadisticas funcionalidad,
            Cama_estadisticas camaByCamaFutura,
            Admision_estadisticas admision,
            ServicioInEntidad_estadisticas servicioInEntidadByIdServicioEmisor,
            Cama_estadisticas camaByCamaEstaba,
            Medico_estadisticas medico,
            ServicioInEntidad_estadisticas servicioInEntidadByIdServicioReceptor,
            String motivoTransferencia, Date fecha) {
        this.id = id;
        this.funcionalidad = funcionalidad;
        this.camaByCamaFutura = camaByCamaFutura;
        this.admision = admision;
        this.servicioInEntidadByIdServicioEmisor = servicioInEntidadByIdServicioEmisor;
        this.camaByCamaEstaba = camaByCamaEstaba;
        this.medico = medico;
        this.servicioInEntidadByIdServicioReceptor = servicioInEntidadByIdServicioReceptor;
        this.motivoTransferencia = motivoTransferencia;
        this.fecha = fecha;
    }

    public OrdenTransferencia_estadisticas(
            long id,
            Funcionalidad_estadisticas funcionalidad,
            Cama_estadisticas camaByCamaFutura,
            Admision_estadisticas admision,
            ServicioInEntidad_estadisticas servicioInEntidadByIdServicioEmisor,
            Cama_estadisticas camaByCamaEstaba,
            Medico_estadisticas medico,
            Servicio_estadisticas servicioByIdServicioReceptorUbicacion,
            Servicio_estadisticas servicioByIdServicioEmisorUbicacion,
            ServicioInEntidad_estadisticas servicioInEntidadByIdServicioReceptor,
            String motivoTransferencia, Date fechaElaboracion,
            Boolean eliminado, Long cid, Date fecha, Boolean anulada,
            Boolean transferenciaRealizada, Boolean rechazada,
            String motivoRechazo, Set<Transferencia_estadisticas> transferencias) {
        this.id = id;
        this.funcionalidad = funcionalidad;
        this.camaByCamaFutura = camaByCamaFutura;
        this.admision = admision;
        this.servicioInEntidadByIdServicioEmisor = servicioInEntidadByIdServicioEmisor;
        this.camaByCamaEstaba = camaByCamaEstaba;
        this.medico = medico;
        this.servicioByIdServicioReceptorUbicacion = servicioByIdServicioReceptorUbicacion;
        this.servicioByIdServicioEmisorUbicacion = servicioByIdServicioEmisorUbicacion;
        this.servicioInEntidadByIdServicioReceptor = servicioInEntidadByIdServicioReceptor;
        this.motivoTransferencia = motivoTransferencia;
        this.fechaElaboracion = fechaElaboracion;
        this.eliminado = eliminado;
        this.cid = cid;
        this.fecha = fecha;
        this.anulada = anulada;
        this.transferenciaRealizada = transferenciaRealizada;
        this.rechazada = rechazada;
        this.motivoRechazo = motivoRechazo;
        this.transferencias = transferencias;
    }

    @Id
    @Column(name = "id", unique = true, nullable = false)
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    public long getId() {
        return this.id;
    }

    public void setId(long id) {
        this.id = id;
    }

    @Version
    @Column(name = "version")
    public Integer getVersion() {
        return this.version;
    }

    public void setVersion(Integer version) {
        this.version = version;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "id_entidad", nullable = false)

    public Funcionalidad_estadisticas getFuncionalidad() {
        return this.funcionalidad;
    }

    public void setFuncionalidad(Funcionalidad_estadisticas funcionalidad) {
        this.funcionalidad = funcionalidad;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "cama_futura", nullable = false)

    public Cama_estadisticas getCamaByCamaFutura() {
        return this.camaByCamaFutura;
    }

    public void setCamaByCamaFutura(Cama_estadisticas camaByCamaFutura) {
        this.camaByCamaFutura = camaByCamaFutura;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "id_admision", nullable = false)

    public Admision_estadisticas getAdmision() {
        return this.admision;
    }

    public void setAdmision(Admision_estadisticas admision) {
        this.admision = admision;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "id_servicio_emisor", nullable = false)

    public ServicioInEntidad_estadisticas getServicioInEntidadByIdServicioEmisor() {
        return this.servicioInEntidadByIdServicioEmisor;
    }

    public void setServicioInEntidadByIdServicioEmisor(
            ServicioInEntidad_estadisticas servicioInEntidadByIdServicioEmisor) {
        this.servicioInEntidadByIdServicioEmisor = servicioInEntidadByIdServicioEmisor;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "cama_estaba", nullable = false)

    public Cama_estadisticas getCamaByCamaEstaba() {
        return this.camaByCamaEstaba;
    }

    public void setCamaByCamaEstaba(Cama_estadisticas camaByCamaEstaba) {
        this.camaByCamaEstaba = camaByCamaEstaba;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "id_medico", nullable = false)

    public Medico_estadisticas getMedico() {
        return this.medico;
    }

    public void setMedico(Medico_estadisticas medico) {
        this.medico = medico;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "id_servicio_receptor_ubicacion")
    public Servicio_estadisticas getServicioByIdServicioReceptorUbicacion() {
        return this.servicioByIdServicioReceptorUbicacion;
    }

    public void setServicioByIdServicioReceptorUbicacion(
            Servicio_estadisticas servicioByIdServicioReceptorUbicacion) {
        this.servicioByIdServicioReceptorUbicacion = servicioByIdServicioReceptorUbicacion;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "id_servicio_emisor_ubicacion")
    public Servicio_estadisticas getServicioByIdServicioEmisorUbicacion() {
        return this.servicioByIdServicioEmisorUbicacion;
    }

    public void setServicioByIdServicioEmisorUbicacion(
            Servicio_estadisticas servicioByIdServicioEmisorUbicacion) {
        this.servicioByIdServicioEmisorUbicacion = servicioByIdServicioEmisorUbicacion;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "id_servicio_receptor", nullable = false)

    public ServicioInEntidad_estadisticas getServicioInEntidadByIdServicioReceptor() {
        return this.servicioInEntidadByIdServicioReceptor;
    }

    public void setServicioInEntidadByIdServicioReceptor(
            ServicioInEntidad_estadisticas servicioInEntidadByIdServicioReceptor) {
        this.servicioInEntidadByIdServicioReceptor = servicioInEntidadByIdServicioReceptor;
    }

    @Column(name = "motivo_transferencia", nullable = false)

    public String getMotivoTransferencia() {
        return this.motivoTransferencia;
    }

    public void setMotivoTransferencia(String motivoTransferencia) {
        if (motivoTransferencia != null)
            motivoTransferencia = motivoTransferencia.trim();
        this.motivoTransferencia = motivoTransferencia;
    }

    @Temporal(TemporalType.DATE)
    @Column(name = "fecha_elaboracion", length = 13)
    public Date getFechaElaboracion() {
        return this.fechaElaboracion;
    }

    public void setFechaElaboracion(Date fechaElaboracion) {
        this.fechaElaboracion = fechaElaboracion;
    }

    @Column(name = "eliminado")
    public Boolean getEliminado() {
        return this.eliminado;
    }

    public void setEliminado(Boolean eliminado) {
        this.eliminado = eliminado;
    }

    @Column(name = "cid")
    public Long getCid() {
        return this.cid;
    }

    public void setCid(Long cid) {
        this.cid = cid;
    }

    @Temporal(TemporalType.DATE)
    @Column(name = "fecha", nullable = false, length = 13)

    public Date getFecha() {
        return this.fecha;
    }

    public void setFecha(Date fecha) {
        this.fecha = fecha;
    }

    @Column(name = "anulada")
    public Boolean getAnulada() {
        return this.anulada;
    }

    public void setAnulada(Boolean anulada) {
        this.anulada = anulada;
    }

    @Column(name = "transferencia_realizada")
    public Boolean getTransferenciaRealizada() {
        return this.transferenciaRealizada;
    }

    public void setTransferenciaRealizada(Boolean transferenciaRealizada) {
        this.transferenciaRealizada = transferenciaRealizada;
    }

    @Column(name = "rechazada")
    public Boolean getRechazada() {
        return this.rechazada;
    }

    public void setRechazada(Boolean rechazada) {
        this.rechazada = rechazada;
    }

    @Column(name = "motivo_rechazo")
    public String getMotivoRechazo() {
        return this.motivoRechazo;
    }

    public void setMotivoRechazo(String motivoRechazo) {
        if (motivoRechazo != null)
            motivoRechazo = motivoRechazo.trim();
        this.motivoRechazo = motivoRechazo;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "ordenTransferencia")
    public Set<Transferencia_estadisticas> getTransferencias() {
        return this.transferencias;
    }

    public void setTransferencias(Set<Transferencia_estadisticas> transferencias) {
        this.transferencias = transferencias;
    }

}
