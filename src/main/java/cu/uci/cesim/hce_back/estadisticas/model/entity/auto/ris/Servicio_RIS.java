package cu.uci.cesim.hce_back.estadisticas.model.entity.auto.ris;

import com.fasterxml.jackson.annotation.JsonIdentityInfo;
import com.fasterxml.jackson.annotation.ObjectIdGenerators;

// Generated May 21, 2012 5:42:06 PM by Hibernate Tools 3.4.0.CR1

import javax.persistence.*;
import java.util.HashSet;
import java.util.Set;


/**
 * Servicio generated by hbm2java
 */
@Entity
@Table(name = "servicio", schema = "comun", uniqueConstraints = @UniqueConstraint(columnNames = "nombre"))
@JsonIdentityInfo(generator = ObjectIdGenerators.PropertyGenerator.class, property = "id")
public class Servicio_RIS implements java.io.Serializable {

    private long id;
    private Integer version;
    private Servicio_RIS servicio;
    private String nombre;
    private long idDepartamento;
    private Boolean eliminado;
    private Long cid;
    private String codigo;
    private Boolean servicioFisico;
    private Set<Servicio_RIS> servicios = new HashSet<Servicio_RIS>(
            0);
    private Set<ServicioInEntidad_RIS> servicioInEntidads = new HashSet<ServicioInEntidad_RIS>(
            0);
    private Set<ServicioInEntidad_RIS> servicioInEntidads_1 = new HashSet<ServicioInEntidad_RIS>(
            0);

    public Servicio_RIS() {
    }

    public Servicio_RIS(long id, String nombre, long idDepartamento) {
        this.id = id;
        this.nombre = nombre;
        this.idDepartamento = idDepartamento;
    }

    public Servicio_RIS(long id, Servicio_RIS servicio,
                        String nombre, long idDepartamento, Boolean eliminado, Long cid,
                        String codigo, Boolean servicioFisico,
                        Set<Servicio_RIS> servicios,
                        Set<ServicioInEntidad_RIS> servicioInEntidads,
                        Set<ServicioInEntidad_RIS> servicioInEntidads_1) {
        this.id = id;
        this.servicio = servicio;
        this.nombre = nombre;
        this.idDepartamento = idDepartamento;
        this.eliminado = eliminado;
        this.cid = cid;
        this.codigo = codigo;
        this.servicioFisico = servicioFisico;
        this.servicios = servicios;
        this.servicioInEntidads = servicioInEntidads;
        this.servicioInEntidads_1 = servicioInEntidads_1;
    }

    @Id
    @Column(name = "id", unique = true, nullable = false)
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    public long getId() {
        return this.id;
    }

    public void setId(long id) {
        this.id = id;
    }

    @Version
    @Column(name = "version")
    public Integer getVersion() {
        return this.version;
    }

    public void setVersion(Integer version) {
        this.version = version;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "id_servicio_padre")
    public Servicio_RIS getServicio() {
        return this.servicio;
    }

    public void setServicio(Servicio_RIS servicio) {
        this.servicio = servicio;
    }

    @Column(name = "nombre", unique = true, nullable = false)

    public String getNombre() {
        return this.nombre;
    }

    public void setNombre(String nombre) {
        if (nombre != null)
            nombre = nombre.trim();
        this.nombre = nombre;
    }

    @Column(name = "id_departamento", nullable = false)

    public long getIdDepartamento() {
        return this.idDepartamento;
    }

    public void setIdDepartamento(long idDepartamento) {
        this.idDepartamento = idDepartamento;
    }

    @Column(name = "eliminado")
    public Boolean getEliminado() {
        return this.eliminado;
    }

    public void setEliminado(Boolean eliminado) {
        this.eliminado = eliminado;
    }

    @Column(name = "cid")
    public Long getCid() {
        return this.cid;
    }

    public void setCid(Long cid) {
        this.cid = cid;
    }

    @Column(name = "codigo")
    public String getCodigo() {
        return this.codigo;
    }

    public void setCodigo(String codigo) {
        if (codigo != null)
            codigo = codigo.trim();
        this.codigo = codigo;
    }

    @Column(name = "servicio_fisico")
    public Boolean getServicioFisico() {
        return this.servicioFisico;
    }

    public void setServicioFisico(Boolean servicioFisico) {
        this.servicioFisico = servicioFisico;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "servicio")
    public Set<Servicio_RIS> getServicios() {
        return this.servicios;
    }

    public void setServicios(Set<Servicio_RIS> servicios) {
        this.servicios = servicios;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "servicio")
    public Set<ServicioInEntidad_RIS> getServicioInEntidads() {
        return this.servicioInEntidads;
    }

    public void setServicioInEntidads(
            Set<ServicioInEntidad_RIS> servicioInEntidads) {
        this.servicioInEntidads = servicioInEntidads;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "servicio")
    public Set<ServicioInEntidad_RIS> getServicioInEntidads_1() {
        return this.servicioInEntidads_1;
    }

    public void setServicioInEntidads_1(
            Set<ServicioInEntidad_RIS> servicioInEntidads_1) {
        this.servicioInEntidads_1 = servicioInEntidads_1;
    }

}
