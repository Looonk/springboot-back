package cu.uci.cesim.hce_back.estadisticas.model.entity.auto;

import com.fasterxml.jackson.annotation.JsonIdentityInfo;
import com.fasterxml.jackson.annotation.ObjectIdGenerators;

import javax.persistence.*;
import java.util.HashSet;
import java.util.Set;

// Generated Apr 18, 2012 10:46:48 AM by Hibernate Tools 3.4.0.CR1

/**
 * ExamenLab generated by hbm2java
 */
@Entity
@Table(name = "examen_lab", schema = "publico")
@JsonIdentityInfo(generator = ObjectIdGenerators.PropertyGenerator.class, property = "id")
public class ExamenLab_estadisticas implements java.io.Serializable {

    private long id;
    private Integer version;
    private SeccionLaboratorio_estadisticas seccionLaboratorio;
    private String nombre;
    private String requisitos;
    private Long cid;
    private Boolean eliminado;
    private Set<SolicitudInExamenLab_estadisticas> solicitudInExamenLabs = new HashSet<SolicitudInExamenLab_estadisticas>(
            0);

    public ExamenLab_estadisticas() {
    }

    public ExamenLab_estadisticas(long id) {
        this.id = id;
    }

    public ExamenLab_estadisticas(long id,
                                  SeccionLaboratorio_estadisticas seccionLaboratorio, String nombre,
                                  String requisitos, Long cid, Boolean eliminado,
                                  Set<SolicitudInExamenLab_estadisticas> solicitudInExamenLabs) {
        this.id = id;
        this.seccionLaboratorio = seccionLaboratorio;
        this.nombre = nombre;
        this.requisitos = requisitos;
        this.cid = cid;
        this.eliminado = eliminado;
        this.solicitudInExamenLabs = solicitudInExamenLabs;
    }

    @Id
    @Column(name = "id", unique = true, nullable = false)
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    public long getId() {
        return this.id;
    }

    public void setId(long id) {
        this.id = id;
    }

    @Version
    @Column(name = "version")
    public Integer getVersion() {
        return this.version;
    }

    public void setVersion(Integer version) {
        this.version = version;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "id_seccion_laboratorio")
    public SeccionLaboratorio_estadisticas getSeccionLaboratorio() {
        return this.seccionLaboratorio;
    }

    public void setSeccionLaboratorio(
            SeccionLaboratorio_estadisticas seccionLaboratorio) {
        this.seccionLaboratorio = seccionLaboratorio;
    }

    @Column(name = "nombre")
    public String getNombre() {
        return this.nombre;
    }

    public void setNombre(String nombre) {
        if (nombre != null)
            nombre = nombre.trim();
        this.nombre = nombre;
    }

    @Column(name = "requisitos")
    public String getRequisitos() {
        return this.requisitos;
    }

    public void setRequisitos(String requisitos) {
        if (requisitos != null)
            requisitos = requisitos.trim();
        this.requisitos = requisitos;
    }

    @Column(name = "cid")
    public Long getCid() {
        return this.cid;
    }

    public void setCid(Long cid) {
        this.cid = cid;
    }

    @Column(name = "eliminado")
    public Boolean getEliminado() {
        return this.eliminado;
    }

    public void setEliminado(Boolean eliminado) {
        this.eliminado = eliminado;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "examenLab")
    public Set<SolicitudInExamenLab_estadisticas> getSolicitudInExamenLabs() {
        return this.solicitudInExamenLabs;
    }

    public void setSolicitudInExamenLabs(
            Set<SolicitudInExamenLab_estadisticas> solicitudInExamenLabs) {
        this.solicitudInExamenLabs = solicitudInExamenLabs;
    }

}
