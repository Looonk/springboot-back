package cu.uci.cesim.hce_back.estadisticas.model.entity.auto;

import com.fasterxml.jackson.annotation.JsonIdentityInfo;
import com.fasterxml.jackson.annotation.ObjectIdGenerators;

import javax.persistence.*;
import java.util.Date;

// Generated Jan 3, 2013 4:54:45 PM by Hibernate Tools 3.4.0.CR1

/**
 * NotaOperatoria generated by hbm2java
 */
@Entity
@Table(name = "nota_operatoria", schema = "publico")
@JsonIdentityInfo(generator = ObjectIdGenerators.PropertyGenerator.class, property = "id")
public class NotaOperatoria_estadisticas implements java.io.Serializable {

    private long id;
    private Integer version;
    private CipProcedimiento_estadisticas cipProcedimiento;
    private DiagnosticoMedico_estadisticas diagnosticoMedicoByIdDiagnosticoPreoperatorio;
    private Antecedentes_estadisticas antecedentes;
    private Medico_estadisticas medico;
    private SolicitudIntervencion_estadisticas solicitudIntervencion;
    private DiagnosticoMedico_estadisticas diagnosticoMedicoByIdDiagnosticoPosoperatorio;
    private Date fecha;
    private String hallazgos;
    private String procedimiento;
    private Long cid;
    private Boolean eliminado;
    private Boolean biopsia;
    private Boolean extra;


    public NotaOperatoria_estadisticas() {
    }

    public NotaOperatoria_estadisticas(long id) {
        this.id = id;
    }

    public NotaOperatoria_estadisticas(
            long id,
            CipProcedimiento_estadisticas cipProcedimiento,
            DiagnosticoMedico_estadisticas diagnosticoMedicoByIdDiagnosticoPreoperatorio,
            Antecedentes_estadisticas antecedentes,
            Medico_estadisticas medico,
            SolicitudIntervencion_estadisticas solicitudIntervencion,
            DiagnosticoMedico_estadisticas diagnosticoMedicoByIdDiagnosticoPosoperatorio,
            Date fecha, String hallazgos, String procedimiento, Long cid,
            Boolean eliminado, Boolean biopsia, Boolean extra) {
        this.id = id;
        this.cipProcedimiento = cipProcedimiento;
        this.diagnosticoMedicoByIdDiagnosticoPreoperatorio = diagnosticoMedicoByIdDiagnosticoPreoperatorio;
        this.antecedentes = antecedentes;
        this.medico = medico;
        this.solicitudIntervencion = solicitudIntervencion;
        this.diagnosticoMedicoByIdDiagnosticoPosoperatorio = diagnosticoMedicoByIdDiagnosticoPosoperatorio;
        this.fecha = fecha;
        this.hallazgos = hallazgos;
        this.procedimiento = procedimiento;
        this.cid = cid;
        this.eliminado = eliminado;
        this.biopsia = biopsia;
        this.extra = extra;
    }

    @Id
    @Column(name = "id", unique = true, nullable = false)
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    public long getId() {
        return this.id;
    }

    public void setId(long id) {
        this.id = id;
    }

    @Version
    @Column(name = "version")
    public Integer getVersion() {
        return this.version;
    }

    public void setVersion(Integer version) {
        this.version = version;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "id_procedimiento")
    public CipProcedimiento_estadisticas getCipProcedimiento() {
        return this.cipProcedimiento;
    }

    public void setCipProcedimiento(
            CipProcedimiento_estadisticas cipProcedimiento) {
        this.cipProcedimiento = cipProcedimiento;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "id_diagnostico_preoperatorio")
    public DiagnosticoMedico_estadisticas getDiagnosticoMedicoByIdDiagnosticoPreoperatorio() {
        return this.diagnosticoMedicoByIdDiagnosticoPreoperatorio;
    }

    public void setDiagnosticoMedicoByIdDiagnosticoPreoperatorio(
            DiagnosticoMedico_estadisticas diagnosticoMedicoByIdDiagnosticoPreoperatorio) {
        this.diagnosticoMedicoByIdDiagnosticoPreoperatorio = diagnosticoMedicoByIdDiagnosticoPreoperatorio;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "id_antecedente_qx")
    public Antecedentes_estadisticas getAntecedentes() {
        return this.antecedentes;
    }

    public void setAntecedentes(Antecedentes_estadisticas antecedentes) {
        this.antecedentes = antecedentes;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "id_cirujano")
    public Medico_estadisticas getMedico() {
        return this.medico;
    }

    public void setMedico(Medico_estadisticas medico) {
        this.medico = medico;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "id_solicitud_intervencion")
    public SolicitudIntervencion_estadisticas getSolicitudIntervencion() {
        return this.solicitudIntervencion;
    }

    public void setSolicitudIntervencion(
            SolicitudIntervencion_estadisticas solicitudIntervencion) {
        this.solicitudIntervencion = solicitudIntervencion;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "id_diagnostico_posoperatorio")
    public DiagnosticoMedico_estadisticas getDiagnosticoMedicoByIdDiagnosticoPosoperatorio() {
        return this.diagnosticoMedicoByIdDiagnosticoPosoperatorio;
    }

    public void setDiagnosticoMedicoByIdDiagnosticoPosoperatorio(
            DiagnosticoMedico_estadisticas diagnosticoMedicoByIdDiagnosticoPosoperatorio) {
        this.diagnosticoMedicoByIdDiagnosticoPosoperatorio = diagnosticoMedicoByIdDiagnosticoPosoperatorio;
    }

    @Temporal(TemporalType.DATE)
    @Column(name = "fecha", length = 13)
    public Date getFecha() {
        return this.fecha;
    }

    public void setFecha(Date fecha) {
        this.fecha = fecha;
    }

    @Column(name = "hallazgos")
    public String getHallazgos() {
        return this.hallazgos;
    }

    public void setHallazgos(String hallazgos) {
        if (hallazgos != null)
            hallazgos = hallazgos.trim();
        this.hallazgos = hallazgos;
    }

    @Column(name = "procedimiento")
    public String getProcedimiento() {
        return this.procedimiento;
    }

    public void setProcedimiento(String procedimiento) {
        if (procedimiento != null)
            procedimiento = procedimiento.trim();
        this.procedimiento = procedimiento;
    }

    @Column(name = "cid")
    public Long getCid() {
        return this.cid;
    }

    public void setCid(Long cid) {
        this.cid = cid;
    }

    @Column(name = "eliminado")
    public Boolean getEliminado() {
        return this.eliminado;
    }

    public void setEliminado(Boolean eliminado) {
        this.eliminado = eliminado;
    }

    @Column(name = "biopsia")
    public Boolean getBiopsia() {
        return this.biopsia;
    }

    public void setBiopsia(Boolean biopsia) {
        this.biopsia = biopsia;
    }

    @Column(name = "extra")
    public Boolean getExtra() {
        return this.extra;
    }

    public void setExtra(Boolean extra) {
        this.extra = extra;
    }

}
