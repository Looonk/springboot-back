package cu.uci.cesim.hce_back.estadisticas.model.entity.auto;

import com.fasterxml.jackson.annotation.JsonIdentityInfo;
import com.fasterxml.jackson.annotation.ObjectIdGenerators;
import org.hibernate.validator.constraints.Length;

import javax.persistence.*;

// Generated Apr 18, 2012 10:46:48 AM by Hibernate Tools 3.4.0.CR1


/**
 * DiagnosticoMedicoEnfermedad generated by hbm2java
 */
@Entity
@Table(name = "diagnostico_medico_enfermedad", schema = "hc_local")
@JsonIdentityInfo(generator = ObjectIdGenerators.PropertyGenerator.class, property = "id")
public class DiagnosticoMedicoEnfermedad_estadisticas implements
        java.io.Serializable {

    private long id;
    private Integer version;
    private DiagnosticoMedico_estadisticas diagnosticoMedico;
    private TipoDiagnosticoEnfermedad_estadisticas tipoDiagnosticoEnfermedad;
    private String codigoEnfermedad;
    private String descripcionEnfermedad;
    private Boolean eliminado;
    private Long cid;

    public DiagnosticoMedicoEnfermedad_estadisticas() {
    }

    public DiagnosticoMedicoEnfermedad_estadisticas(long id,
                                                    DiagnosticoMedico_estadisticas diagnosticoMedico,
                                                    String codigoEnfermedad, String descripcionEnfermedad) {
        this.id = id;
        this.diagnosticoMedico = diagnosticoMedico;
        this.codigoEnfermedad = codigoEnfermedad;
        this.descripcionEnfermedad = descripcionEnfermedad;
    }

    public DiagnosticoMedicoEnfermedad_estadisticas(long id,
                                                    DiagnosticoMedico_estadisticas diagnosticoMedico,
                                                    TipoDiagnosticoEnfermedad_estadisticas tipoDiagnosticoEnfermedad,
                                                    String codigoEnfermedad, String descripcionEnfermedad,
                                                    Boolean eliminado, Long cid) {
        this.id = id;
        this.diagnosticoMedico = diagnosticoMedico;
        this.tipoDiagnosticoEnfermedad = tipoDiagnosticoEnfermedad;
        this.codigoEnfermedad = codigoEnfermedad;
        this.descripcionEnfermedad = descripcionEnfermedad;
        this.eliminado = eliminado;
        this.cid = cid;
    }

    @Id
    @Column(name = "id", unique = true, nullable = false)
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    public long getId() {
        return this.id;
    }

    public void setId(long id) {
        this.id = id;
    }

    @Version
    @Column(name = "version")
    public Integer getVersion() {
        return this.version;
    }

    public void setVersion(Integer version) {
        this.version = version;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "id_diagnostico", nullable = false)

    public DiagnosticoMedico_estadisticas getDiagnosticoMedico() {
        return this.diagnosticoMedico;
    }

    public void setDiagnosticoMedico(
            DiagnosticoMedico_estadisticas diagnosticoMedico) {
        this.diagnosticoMedico = diagnosticoMedico;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "id_tipo_diagnostico_enfermedad")
    public TipoDiagnosticoEnfermedad_estadisticas getTipoDiagnosticoEnfermedad() {
        return this.tipoDiagnosticoEnfermedad;
    }

    public void setTipoDiagnosticoEnfermedad(
            TipoDiagnosticoEnfermedad_estadisticas tipoDiagnosticoEnfermedad) {
        this.tipoDiagnosticoEnfermedad = tipoDiagnosticoEnfermedad;
    }

    @Column(name = "codigo_enfermedad", nullable = false, length = 10)

    @Length(max = 10)
    public String getCodigoEnfermedad() {
        return this.codigoEnfermedad;
    }

    public void setCodigoEnfermedad(String codigoEnfermedad) {
        if (codigoEnfermedad != null)
            codigoEnfermedad = codigoEnfermedad.trim();
        this.codigoEnfermedad = codigoEnfermedad;
    }

    @Column(name = "descripcion_enfermedad", nullable = false)

    public String getDescripcionEnfermedad() {
        return this.descripcionEnfermedad;
    }

    public void setDescripcionEnfermedad(String descripcionEnfermedad) {
        if (descripcionEnfermedad != null)
            descripcionEnfermedad = descripcionEnfermedad.trim();
        this.descripcionEnfermedad = descripcionEnfermedad;
    }

    @Column(name = "eliminado")
    public Boolean getEliminado() {
        return this.eliminado;
    }

    public void setEliminado(Boolean eliminado) {
        this.eliminado = eliminado;
    }

    @Column(name = "cid")
    public Long getCid() {
        return this.cid;
    }

    public void setCid(Long cid) {
        this.cid = cid;
    }

}
