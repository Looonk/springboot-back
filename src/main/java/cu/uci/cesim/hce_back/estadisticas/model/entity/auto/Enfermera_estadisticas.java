package cu.uci.cesim.hce_back.estadisticas.model.entity.auto;

import com.fasterxml.jackson.annotation.JsonIdentityInfo;
import com.fasterxml.jackson.annotation.ObjectIdGenerators;
import org.hibernate.validator.constraints.Length;

import javax.persistence.*;
import java.util.HashSet;
import java.util.Set;

// Generated Apr 18, 2012 10:46:48 AM by Hibernate Tools 3.4.0.CR1


/**
 * Enfermera generated by hbm2java
 */
@Entity
@Table(name = "enfermera", schema = "comun")
@JsonIdentityInfo(generator = ObjectIdGenerators.PropertyGenerator.class, property = "id")
public class Enfermera_estadisticas implements java.io.Serializable {

    private long id;
    private Integer version;
    private String matriculaColegioEnfermeria;
    private Boolean eliminado;
    private Long cid;
    private Set<EntregaSangre_estadisticas> entregaSangresForIdEnfermeraEntrega = new HashSet<EntregaSangre_estadisticas>(
            0);
    private Set<EntregaSangre_estadisticas> entregaSangresForIdEnfermeraRecibe = new HashSet<EntregaSangre_estadisticas>(
            0);
    private Set<TratamientoTerapeutico_estadisticas> tratamientoTerapeuticos = new HashSet<TratamientoTerapeutico_estadisticas>(
            0);
    private Set<DesechoSangre_estadisticas> desechoSangres = new HashSet<DesechoSangre_estadisticas>(
            0);
    private Set<EnfermeraInEntidad_estadisticas> enfermeraInEntidads = new HashSet<EnfermeraInEntidad_estadisticas>(
            0);

    public Enfermera_estadisticas() {
    }

    public Enfermera_estadisticas(long id, String matriculaColegioEnfermeria) {
        this.id = id;
        this.matriculaColegioEnfermeria = matriculaColegioEnfermeria;
    }

    public Enfermera_estadisticas(
            long id,
            String matriculaColegioEnfermeria,
            Boolean eliminado,
            Long cid,
            Set<EntregaSangre_estadisticas> entregaSangresForIdEnfermeraEntrega,
            Set<EntregaSangre_estadisticas> entregaSangresForIdEnfermeraRecibe,
            Set<TratamientoTerapeutico_estadisticas> tratamientoTerapeuticos,
            Set<DesechoSangre_estadisticas> desechoSangres,
            Set<EnfermeraInEntidad_estadisticas> enfermeraInEntidads) {
        this.id = id;
        this.matriculaColegioEnfermeria = matriculaColegioEnfermeria;
        this.eliminado = eliminado;
        this.cid = cid;
        this.entregaSangresForIdEnfermeraEntrega = entregaSangresForIdEnfermeraEntrega;
        this.entregaSangresForIdEnfermeraRecibe = entregaSangresForIdEnfermeraRecibe;
        this.tratamientoTerapeuticos = tratamientoTerapeuticos;
        this.desechoSangres = desechoSangres;
        this.enfermeraInEntidads = enfermeraInEntidads;
    }

    @Id
    @Column(name = "id", unique = true, nullable = false)
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    public long getId() {
        return this.id;
    }

    public void setId(long id) {
        this.id = id;
    }

    @Version
    @Column(name = "version")
    public Integer getVersion() {
        return this.version;
    }

    public void setVersion(Integer version) {
        this.version = version;
    }

    @Column(name = "matricula_colegio_enfermeria", nullable = false, length = 20)

    @Length(max = 20)
    public String getMatriculaColegioEnfermeria() {
        return this.matriculaColegioEnfermeria;
    }

    public void setMatriculaColegioEnfermeria(String matriculaColegioEnfermeria) {
        if (matriculaColegioEnfermeria != null)
            matriculaColegioEnfermeria = matriculaColegioEnfermeria.trim();
        this.matriculaColegioEnfermeria = matriculaColegioEnfermeria;
    }

    @Column(name = "eliminado")
    public Boolean getEliminado() {
        return this.eliminado;
    }

    public void setEliminado(Boolean eliminado) {
        this.eliminado = eliminado;
    }

    @Column(name = "cid")
    public Long getCid() {
        return this.cid;
    }

    public void setCid(Long cid) {
        this.cid = cid;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "enfermeraByIdEnfermeraEntrega")
    public Set<EntregaSangre_estadisticas> getEntregaSangresForIdEnfermeraEntrega() {
        return this.entregaSangresForIdEnfermeraEntrega;
    }

    public void setEntregaSangresForIdEnfermeraEntrega(
            Set<EntregaSangre_estadisticas> entregaSangresForIdEnfermeraEntrega) {
        this.entregaSangresForIdEnfermeraEntrega = entregaSangresForIdEnfermeraEntrega;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "enfermeraByIdEnfermeraRecibe")
    public Set<EntregaSangre_estadisticas> getEntregaSangresForIdEnfermeraRecibe() {
        return this.entregaSangresForIdEnfermeraRecibe;
    }

    public void setEntregaSangresForIdEnfermeraRecibe(
            Set<EntregaSangre_estadisticas> entregaSangresForIdEnfermeraRecibe) {
        this.entregaSangresForIdEnfermeraRecibe = entregaSangresForIdEnfermeraRecibe;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "enfermera")
    public Set<TratamientoTerapeutico_estadisticas> getTratamientoTerapeuticos() {
        return this.tratamientoTerapeuticos;
    }

    public void setTratamientoTerapeuticos(
            Set<TratamientoTerapeutico_estadisticas> tratamientoTerapeuticos) {
        this.tratamientoTerapeuticos = tratamientoTerapeuticos;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "enfermera")
    public Set<DesechoSangre_estadisticas> getDesechoSangres() {
        return this.desechoSangres;
    }

    public void setDesechoSangres(Set<DesechoSangre_estadisticas> desechoSangres) {
        this.desechoSangres = desechoSangres;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "enfermera")
    public Set<EnfermeraInEntidad_estadisticas> getEnfermeraInEntidads() {
        return this.enfermeraInEntidads;
    }

    public void setEnfermeraInEntidads(
            Set<EnfermeraInEntidad_estadisticas> enfermeraInEntidads) {
        this.enfermeraInEntidads = enfermeraInEntidads;
    }

}
