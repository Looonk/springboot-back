package cu.uci.cesim.hce_back.estadisticas.model.entity.auto;

import com.fasterxml.jackson.annotation.JsonIdentityInfo;
import com.fasterxml.jackson.annotation.ObjectIdGenerators;

import javax.persistence.*;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;

// Generated Apr 18, 2012 10:46:48 AM by Hibernate Tools 3.4.0.CR1


/**
 * SolicitudAnalisisLab generated by hbm2java
 */
@Entity
@Table(name = "solicitud_analisis_lab", schema = "publico")
@JsonIdentityInfo(generator = ObjectIdGenerators.PropertyGenerator.class, property = "id")
public class SolicitudAnalisisLab_estadisticas implements java.io.Serializable {

    private long id;
    private Integer version;
    private Funcionalidad_estadisticas funcionalidad;
    private Medico_estadisticas medico;
    private ServicioInEntidad_estadisticas servicioInEntidad;
    private HojaFrontal_estadisticas hojaFrontal;
    private String numero;
    private Date fecha;
    private String area;
    private Long cid;
    private Boolean eliminado;
    private Boolean revisada;
    private int identificador;
    private Long idMedicoExterno;
    private String servicioExterno;
    private Set<Entidad_estadisticas> entidads = new HashSet<Entidad_estadisticas>(
            0);
    private Set<HojaConsulta_estadisticas> hojaConsultas = new HashSet<HojaConsulta_estadisticas>(
            0);
    private Set<SolicitudInExamenLab_estadisticas> solicitudInExamenLabs = new HashSet<SolicitudInExamenLab_estadisticas>(
            0);

    public SolicitudAnalisisLab_estadisticas() {
    }

    public SolicitudAnalisisLab_estadisticas(long id, int identificador) {
        this.id = id;
        this.identificador = identificador;
    }

    public SolicitudAnalisisLab_estadisticas(long id,
                                             Funcionalidad_estadisticas funcionalidad,
                                             Medico_estadisticas medico,
                                             ServicioInEntidad_estadisticas servicioInEntidad,
                                             HojaFrontal_estadisticas hojaFrontal, String numero, Date fecha,
                                             String area, Long cid, Boolean eliminado, Boolean revisada,
                                             int identificador, Long idMedicoExterno, String servicioExterno,
                                             Set<Entidad_estadisticas> entidads,
                                             Set<HojaConsulta_estadisticas> hojaConsultas,
                                             Set<SolicitudInExamenLab_estadisticas> solicitudInExamenLabs) {
        this.id = id;
        this.funcionalidad = funcionalidad;
        this.medico = medico;
        this.servicioInEntidad = servicioInEntidad;
        this.hojaFrontal = hojaFrontal;
        this.numero = numero;
        this.fecha = fecha;
        this.area = area;
        this.cid = cid;
        this.eliminado = eliminado;
        this.revisada = revisada;
        this.identificador = identificador;
        this.idMedicoExterno = idMedicoExterno;
        this.servicioExterno = servicioExterno;
        this.entidads = entidads;
        this.hojaConsultas = hojaConsultas;
        this.solicitudInExamenLabs = solicitudInExamenLabs;
    }

    @Id
    @Column(name = "id", unique = true, nullable = false)
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    public long getId() {
        return this.id;
    }

    public void setId(long id) {
        this.id = id;
    }

    @Version
    @Column(name = "version")
    public Integer getVersion() {
        return this.version;
    }

    public void setVersion(Integer version) {
        this.version = version;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "id_entidad")
    public Funcionalidad_estadisticas getFuncionalidad() {
        return this.funcionalidad;
    }

    public void setFuncionalidad(Funcionalidad_estadisticas funcionalidad) {
        this.funcionalidad = funcionalidad;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "id_medico")
    public Medico_estadisticas getMedico() {
        return this.medico;
    }

    public void setMedico(Medico_estadisticas medico) {
        this.medico = medico;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "id_servicio")
    public ServicioInEntidad_estadisticas getServicioInEntidad() {
        return this.servicioInEntidad;
    }

    public void setServicioInEntidad(
            ServicioInEntidad_estadisticas servicioInEntidad) {
        this.servicioInEntidad = servicioInEntidad;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "id_hoja_frontal")
    public HojaFrontal_estadisticas getHojaFrontal() {
        return this.hojaFrontal;
    }

    public void setHojaFrontal(HojaFrontal_estadisticas hojaFrontal) {
        this.hojaFrontal = hojaFrontal;
    }

    @Column(name = "numero")
    public String getNumero() {
        return this.numero;
    }

    public void setNumero(String numero) {
        if (numero != null)
            numero = numero.trim();
        this.numero = numero;
    }

    @Temporal(TemporalType.DATE)
    @Column(name = "fecha", length = 13)
    public Date getFecha() {
        return this.fecha;
    }

    public void setFecha(Date fecha) {
        this.fecha = fecha;
    }

    @Column(name = "area")
    public String getArea() {
        return this.area;
    }

    public void setArea(String area) {
        if (area != null)
            area = area.trim();
        this.area = area;
    }

    @Column(name = "cid")
    public Long getCid() {
        return this.cid;
    }

    public void setCid(Long cid) {
        this.cid = cid;
    }

    @Column(name = "eliminado")
    public Boolean getEliminado() {
        return this.eliminado;
    }

    public void setEliminado(Boolean eliminado) {
        this.eliminado = eliminado;
    }

    @Column(name = "revisada")
    public Boolean getRevisada() {
        return this.revisada;
    }

    public void setRevisada(Boolean revisada) {
        this.revisada = revisada;
    }

    @Column(name = "identificador", nullable = false)

    public int getIdentificador() {
        return this.identificador;
    }

    public void setIdentificador(int identificador) {
        this.identificador = identificador;
    }

    @Column(name = "id_medico_externo")
    public Long getIdMedicoExterno() {
        return this.idMedicoExterno;
    }

    public void setIdMedicoExterno(Long idMedicoExterno) {
        this.idMedicoExterno = idMedicoExterno;
    }

    @Column(name = "servicio_externo")
    public String getServicioExterno() {
        return this.servicioExterno;
    }

    public void setServicioExterno(String servicioExterno) {
        if (servicioExterno != null)
            servicioExterno = servicioExterno.trim();
        this.servicioExterno = servicioExterno;
    }

    @ManyToMany(fetch = FetchType.LAZY)
    @JoinTable(name = "solicitud_analisis_lab_in_entidad", schema = "publico", joinColumns = {@JoinColumn(name = "id_solicitud_analisis_lab", nullable = false, updatable = false)}, inverseJoinColumns = {@JoinColumn(name = "id_entidad", nullable = false, updatable = false)})
    public Set<Entidad_estadisticas> getEntidads() {
        return this.entidads;
    }

    public void setEntidads(Set<Entidad_estadisticas> entidads) {
        this.entidads = entidads;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "solicitudAnalisisLab")
    public Set<HojaConsulta_estadisticas> getHojaConsultas() {
        return this.hojaConsultas;
    }

    public void setHojaConsultas(Set<HojaConsulta_estadisticas> hojaConsultas) {
        this.hojaConsultas = hojaConsultas;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "solicitudAnalisisLab")
    public Set<SolicitudInExamenLab_estadisticas> getSolicitudInExamenLabs() {
        return this.solicitudInExamenLabs;
    }

    public void setSolicitudInExamenLabs(
            Set<SolicitudInExamenLab_estadisticas> solicitudInExamenLabs) {
        this.solicitudInExamenLabs = solicitudInExamenLabs;
    }

}
