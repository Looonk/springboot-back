package cu.uci.cesim.hce_back.estadisticas.model.entity.auto;

import com.fasterxml.jackson.annotation.JsonIdentityInfo;
import com.fasterxml.jackson.annotation.ObjectIdGenerators;

import javax.persistence.*;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;

// Generated Apr 18, 2012 10:46:48 AM by Hibernate Tools 3.4.0.CR1

/**
 * SolicitudInExamenLab generated by hbm2java
 */
@Entity
@Table(name = "solicitud_in_examen_lab", schema = "publico")
@JsonIdentityInfo(generator = ObjectIdGenerators.PropertyGenerator.class, property = "id")
public class SolicitudInExamenLab_estadisticas implements java.io.Serializable {

    private long id;
    private Integer version;
    private SolicitudAnalisisLab_estadisticas solicitudAnalisisLab;
    private ExamenLab_estadisticas examenLab;
    private EstadoExamenLab_estadisticas estadoExamenLab;
    private Cita_estadisticas cita;
    private Boolean urgente;
    private Date fechaEntregado;
    private Boolean antibiograma;
    private Boolean microorganismo;
    private Boolean eliminado;
    private Long cid;
    private String cedula;
    private String nombres;
    private String apellido1;
    private String apellido2;
    private Long idMuestraSolicitudLab;
    private Set<ResultadoUsuarioLab_estadisticas> resultadoUsuarioLabs = new HashSet<ResultadoUsuarioLab_estadisticas>(
            0);

    public SolicitudInExamenLab_estadisticas() {
    }

    public SolicitudInExamenLab_estadisticas(long id) {
        this.id = id;
    }

    public SolicitudInExamenLab_estadisticas(long id,
                                             SolicitudAnalisisLab_estadisticas solicitudAnalisisLab,
                                             ExamenLab_estadisticas examenLab,
                                             EstadoExamenLab_estadisticas estadoExamenLab,
                                             Cita_estadisticas cita, Boolean urgente, Date fechaEntregado,
                                             Boolean antibiograma, Boolean microorganismo, Boolean eliminado,
                                             Long cid, String cedula, String nombres, String apellido1,
                                             String apellido2, Long idMuestraSolicitudLab,
                                             Set<ResultadoUsuarioLab_estadisticas> resultadoUsuarioLabs) {
        this.id = id;
        this.solicitudAnalisisLab = solicitudAnalisisLab;
        this.examenLab = examenLab;
        this.estadoExamenLab = estadoExamenLab;
        this.cita = cita;
        this.urgente = urgente;
        this.fechaEntregado = fechaEntregado;
        this.antibiograma = antibiograma;
        this.microorganismo = microorganismo;
        this.eliminado = eliminado;
        this.cid = cid;
        this.cedula = cedula;
        this.nombres = nombres;
        this.apellido1 = apellido1;
        this.apellido2 = apellido2;
        this.idMuestraSolicitudLab = idMuestraSolicitudLab;
        this.resultadoUsuarioLabs = resultadoUsuarioLabs;
    }

    @Id
    @Column(name = "id", unique = true, nullable = false)
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    public long getId() {
        return this.id;
    }

    public void setId(long id) {
        this.id = id;
    }

    @Version
    @Column(name = "version")
    public Integer getVersion() {
        return this.version;
    }

    public void setVersion(Integer version) {
        this.version = version;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "id_solicitud_analisis_lab")
    public SolicitudAnalisisLab_estadisticas getSolicitudAnalisisLab() {
        return this.solicitudAnalisisLab;
    }

    public void setSolicitudAnalisisLab(
            SolicitudAnalisisLab_estadisticas solicitudAnalisisLab) {
        this.solicitudAnalisisLab = solicitudAnalisisLab;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "id_examen_lab")
    public ExamenLab_estadisticas getExamenLab() {
        return this.examenLab;
    }

    public void setExamenLab(ExamenLab_estadisticas examenLab) {
        this.examenLab = examenLab;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "id_estado_examen_lab")
    public EstadoExamenLab_estadisticas getEstadoExamenLab() {
        return this.estadoExamenLab;
    }

    public void setEstadoExamenLab(EstadoExamenLab_estadisticas estadoExamenLab) {
        this.estadoExamenLab = estadoExamenLab;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "id_cita")
    public Cita_estadisticas getCita() {
        return this.cita;
    }

    public void setCita(Cita_estadisticas cita) {
        this.cita = cita;
    }

    @Column(name = "urgente")
    public Boolean getUrgente() {
        return this.urgente;
    }

    public void setUrgente(Boolean urgente) {
        this.urgente = urgente;
    }

    @Temporal(TemporalType.DATE)
    @Column(name = "fecha_entregado", length = 13)
    public Date getFechaEntregado() {
        return this.fechaEntregado;
    }

    public void setFechaEntregado(Date fechaEntregado) {
        this.fechaEntregado = fechaEntregado;
    }

    @Column(name = "antibiograma")
    public Boolean getAntibiograma() {
        return this.antibiograma;
    }

    public void setAntibiograma(Boolean antibiograma) {
        this.antibiograma = antibiograma;
    }

    @Column(name = "microorganismo")
    public Boolean getMicroorganismo() {
        return this.microorganismo;
    }

    public void setMicroorganismo(Boolean microorganismo) {
        this.microorganismo = microorganismo;
    }

    @Column(name = "eliminado")
    public Boolean getEliminado() {
        return this.eliminado;
    }

    public void setEliminado(Boolean eliminado) {
        this.eliminado = eliminado;
    }

    @Column(name = "cid")
    public Long getCid() {
        return this.cid;
    }

    public void setCid(Long cid) {
        this.cid = cid;
    }

    @Column(name = "cedula")
    public String getCedula() {
        return this.cedula;
    }

    public void setCedula(String cedula) {
        if (cedula != null)
            cedula = cedula.trim();
        this.cedula = cedula;
    }

    @Column(name = "nombres")
    public String getNombres() {
        return this.nombres;
    }

    public void setNombres(String nombres) {
        if (nombres != null)
            nombres = nombres.trim();
        this.nombres = nombres;
    }

    @Column(name = "apellido1")
    public String getApellido1() {
        return this.apellido1;
    }

    public void setApellido1(String apellido1) {
        if (apellido1 != null)
            apellido1 = apellido1.trim();
        this.apellido1 = apellido1;
    }

    @Column(name = "apellido2")
    public String getApellido2() {
        return this.apellido2;
    }

    public void setApellido2(String apellido2) {
        if (apellido2 != null)
            apellido2 = apellido2.trim();
        this.apellido2 = apellido2;
    }

    @Column(name = "id_muestra_solicitud_lab")
    public Long getIdMuestraSolicitudLab() {
        return this.idMuestraSolicitudLab;
    }

    public void setIdMuestraSolicitudLab(Long idMuestraSolicitudLab) {
        this.idMuestraSolicitudLab = idMuestraSolicitudLab;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "solicitudInExamenLab")
    public Set<ResultadoUsuarioLab_estadisticas> getResultadoUsuarioLabs() {
        return this.resultadoUsuarioLabs;
    }

    public void setResultadoUsuarioLabs(
            Set<ResultadoUsuarioLab_estadisticas> resultadoUsuarioLabs) {
        this.resultadoUsuarioLabs = resultadoUsuarioLabs;
    }

}
