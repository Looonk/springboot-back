package cu.uci.cesim.hce_back.estadisticas.model.entity.auto;

import com.fasterxml.jackson.annotation.JsonIdentityInfo;
import com.fasterxml.jackson.annotation.ObjectIdGenerators;
import org.hibernate.validator.constraints.Length;

import javax.persistence.*;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;

// Generated Apr 18, 2012 10:46:48 AM by Hibernate Tools 3.4.0.CR1


/**
 * SolicitudAutopsia generated by hbm2java
 */
@Entity
@Table(name = "solicitud_autopsia", schema = "publico")
@JsonIdentityInfo(generator = ObjectIdGenerators.PropertyGenerator.class, property = "id")
public class SolicitudAutopsia_estadisticas implements java.io.Serializable {

    private long id;
    private Integer version;
    private HojaFrontal_estadisticas hojaFrontal;
    private DiagnosticoMedico_estadisticas diagnosticoMedico;
    private EstadoSolicitudAnatomia_estadisticas estadoSolicitudAnatomia;
    private OrigenSolicitudAnatomia_estadisticas origenSolicitudAnatomia;
    private Entidad_estadisticas entidad;
    private long realizadoPorUsuarioId;
    private Date fechaCreada;
    private Date horaCreada;
    private String personaAutorizaNombreApellidos;
    private String personaAutorizaNumeroIdentidad;
    private Date fechaMuerte;
    private Date horaMuerte;
    private String resumenHistoriaMedica;
    private Boolean eliminado;
    private Long cid;
    private int numero;
    private Date fechaLiberada;
    private Date horaLiberada;
    private Date fechaRechazada;
    private Date horaRechazada;
    private Boolean forense;
    private long personaAutorizaParentescoId;
    private Date fechaAceptada;
    private Date horaAceptada;
    private Set<EgresoEmergencia_estadisticas> egresoEmergencias = new HashSet<EgresoEmergencia_estadisticas>(
            0);
    private Set<Egreso_estadisticas> egresos = new HashSet<Egreso_estadisticas>(
            0);
    private Set<CertificadoDefuncion_estadisticas> certificadoDefuncions = new HashSet<CertificadoDefuncion_estadisticas>(
            0);

    public SolicitudAutopsia_estadisticas() {
    }

    public SolicitudAutopsia_estadisticas(long id,
                                          HojaFrontal_estadisticas hojaFrontal,
                                          EstadoSolicitudAnatomia_estadisticas estadoSolicitudAnatomia,
                                          OrigenSolicitudAnatomia_estadisticas origenSolicitudAnatomia,
                                          long realizadoPorUsuarioId, Date fechaCreada, Date horaCreada,
                                          String personaAutorizaNombreApellidos,
                                          String personaAutorizaNumeroIdentidad, Date fechaMuerte,
                                          Date horaMuerte, int numero, long personaAutorizaParentescoId) {
        this.id = id;
        this.hojaFrontal = hojaFrontal;
        this.estadoSolicitudAnatomia = estadoSolicitudAnatomia;
        this.origenSolicitudAnatomia = origenSolicitudAnatomia;
        this.realizadoPorUsuarioId = realizadoPorUsuarioId;
        this.fechaCreada = fechaCreada;
        this.horaCreada = horaCreada;
        this.personaAutorizaNombreApellidos = personaAutorizaNombreApellidos;
        this.personaAutorizaNumeroIdentidad = personaAutorizaNumeroIdentidad;
        this.fechaMuerte = fechaMuerte;
        this.horaMuerte = horaMuerte;
        this.numero = numero;
        this.personaAutorizaParentescoId = personaAutorizaParentescoId;
    }

    public SolicitudAutopsia_estadisticas(long id,
                                          HojaFrontal_estadisticas hojaFrontal,
                                          DiagnosticoMedico_estadisticas diagnosticoMedico,
                                          EstadoSolicitudAnatomia_estadisticas estadoSolicitudAnatomia,
                                          OrigenSolicitudAnatomia_estadisticas origenSolicitudAnatomia,
                                          Entidad_estadisticas entidad, long realizadoPorUsuarioId,
                                          Date fechaCreada, Date horaCreada,
                                          String personaAutorizaNombreApellidos,
                                          String personaAutorizaNumeroIdentidad, Date fechaMuerte,
                                          Date horaMuerte, String resumenHistoriaMedica, Boolean eliminado,
                                          Long cid, int numero, Date fechaLiberada, Date horaLiberada,
                                          Date fechaRechazada, Date horaRechazada, Boolean forense,
                                          long personaAutorizaParentescoId, Date fechaAceptada,
                                          Date horaAceptada,
                                          Set<EgresoEmergencia_estadisticas> egresoEmergencias,
                                          Set<Egreso_estadisticas> egresos,
                                          Set<CertificadoDefuncion_estadisticas> certificadoDefuncions) {
        this.id = id;
        this.hojaFrontal = hojaFrontal;
        this.diagnosticoMedico = diagnosticoMedico;
        this.estadoSolicitudAnatomia = estadoSolicitudAnatomia;
        this.origenSolicitudAnatomia = origenSolicitudAnatomia;
        this.entidad = entidad;
        this.realizadoPorUsuarioId = realizadoPorUsuarioId;
        this.fechaCreada = fechaCreada;
        this.horaCreada = horaCreada;
        this.personaAutorizaNombreApellidos = personaAutorizaNombreApellidos;
        this.personaAutorizaNumeroIdentidad = personaAutorizaNumeroIdentidad;
        this.fechaMuerte = fechaMuerte;
        this.horaMuerte = horaMuerte;
        this.resumenHistoriaMedica = resumenHistoriaMedica;
        this.eliminado = eliminado;
        this.cid = cid;
        this.numero = numero;
        this.fechaLiberada = fechaLiberada;
        this.horaLiberada = horaLiberada;
        this.fechaRechazada = fechaRechazada;
        this.horaRechazada = horaRechazada;
        this.forense = forense;
        this.personaAutorizaParentescoId = personaAutorizaParentescoId;
        this.fechaAceptada = fechaAceptada;
        this.horaAceptada = horaAceptada;
        this.egresoEmergencias = egresoEmergencias;
        this.egresos = egresos;
        this.certificadoDefuncions = certificadoDefuncions;
    }

    @Id
    @Column(name = "id", unique = true, nullable = false)
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    public long getId() {
        return this.id;
    }

    public void setId(long id) {
        this.id = id;
    }

    @Version
    @Column(name = "version")
    public Integer getVersion() {
        return this.version;
    }

    public void setVersion(Integer version) {
        this.version = version;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "hoja_frontal_id", nullable = false)

    public HojaFrontal_estadisticas getHojaFrontal() {
        return this.hojaFrontal;
    }

    public void setHojaFrontal(HojaFrontal_estadisticas hojaFrontal) {
        this.hojaFrontal = hojaFrontal;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "diagnostico_id")
    public DiagnosticoMedico_estadisticas getDiagnosticoMedico() {
        return this.diagnosticoMedico;
    }

    public void setDiagnosticoMedico(
            DiagnosticoMedico_estadisticas diagnosticoMedico) {
        this.diagnosticoMedico = diagnosticoMedico;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "estado_solicitud_id", nullable = false)

    public EstadoSolicitudAnatomia_estadisticas getEstadoSolicitudAnatomia() {
        return this.estadoSolicitudAnatomia;
    }

    public void setEstadoSolicitudAnatomia(
            EstadoSolicitudAnatomia_estadisticas estadoSolicitudAnatomia) {
        this.estadoSolicitudAnatomia = estadoSolicitudAnatomia;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "origen_id", nullable = false)

    public OrigenSolicitudAnatomia_estadisticas getOrigenSolicitudAnatomia() {
        return this.origenSolicitudAnatomia;
    }

    public void setOrigenSolicitudAnatomia(
            OrigenSolicitudAnatomia_estadisticas origenSolicitudAnatomia) {
        this.origenSolicitudAnatomia = origenSolicitudAnatomia;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "entidad_id")
    public Entidad_estadisticas getEntidad() {
        return this.entidad;
    }

    public void setEntidad(Entidad_estadisticas entidad) {
        this.entidad = entidad;
    }

    @Column(name = "realizado_por_usuario_id", nullable = false)

    public long getRealizadoPorUsuarioId() {
        return this.realizadoPorUsuarioId;
    }

    public void setRealizadoPorUsuarioId(long realizadoPorUsuarioId) {
        this.realizadoPorUsuarioId = realizadoPorUsuarioId;
    }

    @Temporal(TemporalType.DATE)
    @Column(name = "fecha_creada", nullable = false, length = 13)

    public Date getFechaCreada() {
        return this.fechaCreada;
    }

    public void setFechaCreada(Date fechaCreada) {
        this.fechaCreada = fechaCreada;
    }

    @Temporal(TemporalType.TIME)
    @Column(name = "hora_creada", nullable = false, length = 8)

    public Date getHoraCreada() {
        return this.horaCreada;
    }

    public void setHoraCreada(Date horaCreada) {
        this.horaCreada = horaCreada;
    }

    @Column(name = "persona_autoriza_nombre_apellidos", nullable = false, length = 100)

    @Length(max = 100)
    public String getPersonaAutorizaNombreApellidos() {
        return this.personaAutorizaNombreApellidos;
    }

    public void setPersonaAutorizaNombreApellidos(
            String personaAutorizaNombreApellidos) {
        if (personaAutorizaNombreApellidos != null)
            personaAutorizaNombreApellidos = personaAutorizaNombreApellidos
                    .trim();
        this.personaAutorizaNombreApellidos = personaAutorizaNombreApellidos;
    }

    @Column(name = "persona_autoriza_numero_identidad", nullable = false, length = 15)

    @Length(max = 15)
    public String getPersonaAutorizaNumeroIdentidad() {
        return this.personaAutorizaNumeroIdentidad;
    }

    public void setPersonaAutorizaNumeroIdentidad(
            String personaAutorizaNumeroIdentidad) {
        if (personaAutorizaNumeroIdentidad != null)
            personaAutorizaNumeroIdentidad = personaAutorizaNumeroIdentidad
                    .trim();
        this.personaAutorizaNumeroIdentidad = personaAutorizaNumeroIdentidad;
    }

    @Temporal(TemporalType.DATE)
    @Column(name = "fecha_muerte", nullable = false, length = 13)

    public Date getFechaMuerte() {
        return this.fechaMuerte;
    }

    public void setFechaMuerte(Date fechaMuerte) {
        this.fechaMuerte = fechaMuerte;
    }

    @Temporal(TemporalType.TIME)
    @Column(name = "hora_muerte", nullable = false, length = 8)

    public Date getHoraMuerte() {
        return this.horaMuerte;
    }

    public void setHoraMuerte(Date horaMuerte) {
        this.horaMuerte = horaMuerte;
    }

    @Column(name = "resumen_historia_medica")
    public String getResumenHistoriaMedica() {
        return this.resumenHistoriaMedica;
    }

    public void setResumenHistoriaMedica(String resumenHistoriaMedica) {
        if (resumenHistoriaMedica != null)
            resumenHistoriaMedica = resumenHistoriaMedica.trim();
        this.resumenHistoriaMedica = resumenHistoriaMedica;
    }

    @Column(name = "eliminado")
    public Boolean getEliminado() {
        return this.eliminado;
    }

    public void setEliminado(Boolean eliminado) {
        this.eliminado = eliminado;
    }

    @Column(name = "cid")
    public Long getCid() {
        return this.cid;
    }

    public void setCid(Long cid) {
        this.cid = cid;
    }

    @Column(name = "numero", nullable = false)

    public int getNumero() {
        return this.numero;
    }

    public void setNumero(int numero) {
        this.numero = numero;
    }

    @Temporal(TemporalType.DATE)
    @Column(name = "fecha_liberada", length = 13)
    public Date getFechaLiberada() {
        return this.fechaLiberada;
    }

    public void setFechaLiberada(Date fechaLiberada) {
        this.fechaLiberada = fechaLiberada;
    }

    @Temporal(TemporalType.TIME)
    @Column(name = "hora_liberada", length = 8)
    public Date getHoraLiberada() {
        return this.horaLiberada;
    }

    public void setHoraLiberada(Date horaLiberada) {
        this.horaLiberada = horaLiberada;
    }

    @Temporal(TemporalType.DATE)
    @Column(name = "fecha_rechazada", length = 13)
    public Date getFechaRechazada() {
        return this.fechaRechazada;
    }

    public void setFechaRechazada(Date fechaRechazada) {
        this.fechaRechazada = fechaRechazada;
    }

    @Temporal(TemporalType.TIME)
    @Column(name = "hora_rechazada", length = 8)
    public Date getHoraRechazada() {
        return this.horaRechazada;
    }

    public void setHoraRechazada(Date horaRechazada) {
        this.horaRechazada = horaRechazada;
    }

    @Column(name = "forense")
    public Boolean getForense() {
        return this.forense;
    }

    public void setForense(Boolean forense) {
        this.forense = forense;
    }

    @Column(name = "persona_autoriza_parentesco_id", nullable = false)

    public long getPersonaAutorizaParentescoId() {
        return this.personaAutorizaParentescoId;
    }

    public void setPersonaAutorizaParentescoId(long personaAutorizaParentescoId) {
        this.personaAutorizaParentescoId = personaAutorizaParentescoId;
    }

    @Temporal(TemporalType.DATE)
    @Column(name = "fecha_aceptada", length = 13)
    public Date getFechaAceptada() {
        return this.fechaAceptada;
    }

    public void setFechaAceptada(Date fechaAceptada) {
        this.fechaAceptada = fechaAceptada;
    }

    @Temporal(TemporalType.TIME)
    @Column(name = "hora_aceptada", length = 8)
    public Date getHoraAceptada() {
        return this.horaAceptada;
    }

    public void setHoraAceptada(Date horaAceptada) {
        this.horaAceptada = horaAceptada;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "solicitudAutopsia")
    public Set<EgresoEmergencia_estadisticas> getEgresoEmergencias() {
        return this.egresoEmergencias;
    }

    public void setEgresoEmergencias(
            Set<EgresoEmergencia_estadisticas> egresoEmergencias) {
        this.egresoEmergencias = egresoEmergencias;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "solicitudAutopsia")
    public Set<Egreso_estadisticas> getEgresos() {
        return this.egresos;
    }

    public void setEgresos(Set<Egreso_estadisticas> egresos) {
        this.egresos = egresos;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "solicitudAutopsia")
    public Set<CertificadoDefuncion_estadisticas> getCertificadoDefuncions() {
        return this.certificadoDefuncions;
    }

    public void setCertificadoDefuncions(
            Set<CertificadoDefuncion_estadisticas> certificadoDefuncions) {
        this.certificadoDefuncions = certificadoDefuncions;
    }

}
