package cu.uci.cesim.hce_back.estadisticas.model.entity.auto;

import com.fasterxml.jackson.annotation.JsonIdentityInfo;
import com.fasterxml.jackson.annotation.ObjectIdGenerators;
import org.hibernate.validator.constraints.Length;

import javax.persistence.*;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;

// Generated Apr 18, 2012 10:46:48 AM by Hibernate Tools 3.4.0.CR1

/**
 * Referencias generated by hbm2java
 */
@Entity
@Table(name = "referencias", schema = "hc_local")
@JsonIdentityInfo(generator = ObjectIdGenerators.PropertyGenerator.class, property = "id")
public class Referencias_estadisticas implements java.io.Serializable {

    private long id;
    private Integer version;
    private Especialidad_estadisticas especialidad;
    private DiagnosticoMedico_estadisticas diagnosticoMedico;
    private Entidad_estadisticas entidadByIdHospitalOrigen;
    private Medico_estadisticas medico;
    private Servicio_estadisticas servicio;
    private HojaFrontal_estadisticas hojaFrontal;
    private Entidad_estadisticas entidadByIdHospitalDestino;
    private Date fecha;
    private String motivo;
    private Boolean eliminado;
    private Long cid;
    private String resumenClinico;
    private Long idCondicionPaciente;
    private String hospitalOrigen;
    private String identificadorDocumento;
    private Long idTraslado;
    private String datosEntidadExterna;
    private String motivoConsulta;
    private String tratamientosCumplidos;
    private String examenesLab;
    private Set<HojaConsulta_estadisticas> hojaConsultas = new HashSet<HojaConsulta_estadisticas>(
            0);
    private Set<Egreso_estadisticas> egresos = new HashSet<Egreso_estadisticas>(
            0);
    private Set<EgresoEmergencia_estadisticas> egresoEmergencias = new HashSet<EgresoEmergencia_estadisticas>(
            0);
    private Set<HojaEmergencia_estadisticas> hojaEmergencias = new HashSet<HojaEmergencia_estadisticas>(
            0);
    private Set<Cita_estadisticas> citas = new HashSet<Cita_estadisticas>(0);

    public Referencias_estadisticas() {
    }

    public Referencias_estadisticas(long id) {
        this.id = id;
    }

    public Referencias_estadisticas(long id,
                                    Especialidad_estadisticas especialidad,
                                    DiagnosticoMedico_estadisticas diagnosticoMedico,
                                    Entidad_estadisticas entidadByIdHospitalOrigen,
                                    Medico_estadisticas medico, Servicio_estadisticas servicio,
                                    HojaFrontal_estadisticas hojaFrontal,
                                    Entidad_estadisticas entidadByIdHospitalDestino, Date fecha,
                                    String motivo, Boolean eliminado, Long cid, String resumenClinico,
                                    Long idCondicionPaciente, String hospitalOrigen,
                                    String identificadorDocumento, Long idTraslado,
                                    String datosEntidadExterna, String motivoConsulta,
                                    String tratamientosCumplidos, String examenesLab,
                                    Set<HojaConsulta_estadisticas> hojaConsultas,
                                    Set<Egreso_estadisticas> egresos,
                                    Set<EgresoEmergencia_estadisticas> egresoEmergencias,
                                    Set<HojaEmergencia_estadisticas> hojaEmergencias,
                                    Set<Cita_estadisticas> citas) {
        this.id = id;
        this.especialidad = especialidad;
        this.diagnosticoMedico = diagnosticoMedico;
        this.entidadByIdHospitalOrigen = entidadByIdHospitalOrigen;
        this.medico = medico;
        this.servicio = servicio;
        this.hojaFrontal = hojaFrontal;
        this.entidadByIdHospitalDestino = entidadByIdHospitalDestino;
        this.fecha = fecha;
        this.motivo = motivo;
        this.eliminado = eliminado;
        this.cid = cid;
        this.resumenClinico = resumenClinico;
        this.idCondicionPaciente = idCondicionPaciente;
        this.hospitalOrigen = hospitalOrigen;
        this.identificadorDocumento = identificadorDocumento;
        this.idTraslado = idTraslado;
        this.datosEntidadExterna = datosEntidadExterna;
        this.motivoConsulta = motivoConsulta;
        this.tratamientosCumplidos = tratamientosCumplidos;
        this.examenesLab = examenesLab;
        this.hojaConsultas = hojaConsultas;
        this.egresos = egresos;
        this.egresoEmergencias = egresoEmergencias;
        this.hojaEmergencias = hojaEmergencias;
        this.citas = citas;
    }

    @Id
    @Column(name = "id", unique = true, nullable = false)
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    public long getId() {
        return this.id;
    }

    public void setId(long id) {
        this.id = id;
    }

    @Version
    @Column(name = "version")
    public Integer getVersion() {
        return this.version;
    }

    public void setVersion(Integer version) {
        this.version = version;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "id_especialidad")
    public Especialidad_estadisticas getEspecialidad() {
        return this.especialidad;
    }

    public void setEspecialidad(Especialidad_estadisticas especialidad) {
        this.especialidad = especialidad;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "id_diagnostico_medico")
    public DiagnosticoMedico_estadisticas getDiagnosticoMedico() {
        return this.diagnosticoMedico;
    }

    public void setDiagnosticoMedico(
            DiagnosticoMedico_estadisticas diagnosticoMedico) {
        this.diagnosticoMedico = diagnosticoMedico;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "id_hospital_origen")
    public Entidad_estadisticas getEntidadByIdHospitalOrigen() {
        return this.entidadByIdHospitalOrigen;
    }

    public void setEntidadByIdHospitalOrigen(
            Entidad_estadisticas entidadByIdHospitalOrigen) {
        this.entidadByIdHospitalOrigen = entidadByIdHospitalOrigen;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "id_medico")
    public Medico_estadisticas getMedico() {
        return this.medico;
    }

    public void setMedico(Medico_estadisticas medico) {
        this.medico = medico;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "id_servicio")
    public Servicio_estadisticas getServicio() {
        return this.servicio;
    }

    public void setServicio(Servicio_estadisticas servicio) {
        this.servicio = servicio;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "id_hoja_frontal")
    public HojaFrontal_estadisticas getHojaFrontal() {
        return this.hojaFrontal;
    }

    public void setHojaFrontal(HojaFrontal_estadisticas hojaFrontal) {
        this.hojaFrontal = hojaFrontal;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "id_hospital_destino")
    public Entidad_estadisticas getEntidadByIdHospitalDestino() {
        return this.entidadByIdHospitalDestino;
    }

    public void setEntidadByIdHospitalDestino(
            Entidad_estadisticas entidadByIdHospitalDestino) {
        this.entidadByIdHospitalDestino = entidadByIdHospitalDestino;
    }

    @Temporal(TemporalType.DATE)
    @Column(name = "fecha", length = 13)
    public Date getFecha() {
        return this.fecha;
    }

    public void setFecha(Date fecha) {
        this.fecha = fecha;
    }

    @Column(name = "motivo")
    public String getMotivo() {
        return this.motivo;
    }

    public void setMotivo(String motivo) {
        if (motivo != null)
            motivo = motivo.trim();
        this.motivo = motivo;
    }

    @Column(name = "eliminado")
    public Boolean getEliminado() {
        return this.eliminado;
    }

    public void setEliminado(Boolean eliminado) {
        this.eliminado = eliminado;
    }

    @Column(name = "cid")
    public Long getCid() {
        return this.cid;
    }

    public void setCid(Long cid) {
        this.cid = cid;
    }

    @Column(name = "resumen_clinico")
    public String getResumenClinico() {
        return this.resumenClinico;
    }

    public void setResumenClinico(String resumenClinico) {
        if (resumenClinico != null)
            resumenClinico = resumenClinico.trim();
        this.resumenClinico = resumenClinico;
    }

    @Column(name = "id_condicion_paciente")
    public Long getIdCondicionPaciente() {
        return this.idCondicionPaciente;
    }

    public void setIdCondicionPaciente(Long idCondicionPaciente) {
        this.idCondicionPaciente = idCondicionPaciente;
    }

    @Column(name = "hospital_origen", length = 100)
    @Length(max = 100)
    public String getHospitalOrigen() {
        return this.hospitalOrigen;
    }

    public void setHospitalOrigen(String hospitalOrigen) {
        if (hospitalOrigen != null)
            hospitalOrigen = hospitalOrigen.trim();
        this.hospitalOrigen = hospitalOrigen;
    }

    @Column(name = "identificador_documento")
    public String getIdentificadorDocumento() {
        return this.identificadorDocumento;
    }

    public void setIdentificadorDocumento(String identificadorDocumento) {
        if (identificadorDocumento != null)
            identificadorDocumento = identificadorDocumento.trim();
        this.identificadorDocumento = identificadorDocumento;
    }

    @Column(name = "id_traslado")
    public Long getIdTraslado() {
        return this.idTraslado;
    }

    public void setIdTraslado(Long idTraslado) {
        this.idTraslado = idTraslado;
    }

    @Column(name = "datos_entidad_externa")
    public String getDatosEntidadExterna() {
        return this.datosEntidadExterna;
    }

    public void setDatosEntidadExterna(String datosEntidadExterna) {
        if (datosEntidadExterna != null)
            datosEntidadExterna = datosEntidadExterna.trim();
        this.datosEntidadExterna = datosEntidadExterna;
    }

    @Column(name = "motivo_consulta")
    public String getMotivoConsulta() {
        return this.motivoConsulta;
    }

    public void setMotivoConsulta(String motivoConsulta) {
        if (motivoConsulta != null)
            motivoConsulta = motivoConsulta.trim();
        this.motivoConsulta = motivoConsulta;
    }

    @Column(name = "tratamientos_cumplidos")
    public String getTratamientosCumplidos() {
        return this.tratamientosCumplidos;
    }

    public void setTratamientosCumplidos(String tratamientosCumplidos) {
        if (tratamientosCumplidos != null)
            tratamientosCumplidos = tratamientosCumplidos.trim();
        this.tratamientosCumplidos = tratamientosCumplidos;
    }

    @Column(name = "examenes_lab")
    public String getExamenesLab() {
        return this.examenesLab;
    }

    public void setExamenesLab(String examenesLab) {
        if (examenesLab != null)
            examenesLab = examenesLab.trim();
        this.examenesLab = examenesLab;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "referencias")
    public Set<HojaConsulta_estadisticas> getHojaConsultas() {
        return this.hojaConsultas;
    }

    public void setHojaConsultas(Set<HojaConsulta_estadisticas> hojaConsultas) {
        this.hojaConsultas = hojaConsultas;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "referencias")
    public Set<Egreso_estadisticas> getEgresos() {
        return this.egresos;
    }

    public void setEgresos(Set<Egreso_estadisticas> egresos) {
        this.egresos = egresos;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "referencias")
    public Set<EgresoEmergencia_estadisticas> getEgresoEmergencias() {
        return this.egresoEmergencias;
    }

    public void setEgresoEmergencias(
            Set<EgresoEmergencia_estadisticas> egresoEmergencias) {
        this.egresoEmergencias = egresoEmergencias;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "referencias")
    public Set<HojaEmergencia_estadisticas> getHojaEmergencias() {
        return this.hojaEmergencias;
    }

    public void setHojaEmergencias(
            Set<HojaEmergencia_estadisticas> hojaEmergencias) {
        this.hojaEmergencias = hojaEmergencias;
    }

    @ManyToMany(fetch = FetchType.LAZY)
    @JoinTable(name = "cita_in_referencia", schema = "citas", joinColumns = {@JoinColumn(name = "id_referencia", nullable = false, updatable = false)}, inverseJoinColumns = {@JoinColumn(name = "id_cita", nullable = false, updatable = false)})
    public Set<Cita_estadisticas> getCitas() {
        return this.citas;
    }

    public void setCitas(Set<Cita_estadisticas> citas) {
        this.citas = citas;
    }

}
