package cu.uci.cesim.hce_back.estadisticas.model.entity.auto;

import com.fasterxml.jackson.annotation.JsonIdentityInfo;
import com.fasterxml.jackson.annotation.ObjectIdGenerators;
import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;
import org.hibernate.validator.constraints.Length;

import javax.persistence.*;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;

// Generated Apr 18, 2012 10:46:48 AM by Hibernate Tools 3.4.0.CR1


/**
 * HojaFrontal generated by hbm2java
 */
@Entity
@Table(name = "hoja_frontal", schema = "hc_local")
@JsonIdentityInfo(generator = ObjectIdGenerators.PropertyGenerator.class, property = "id")
public class HojaFrontal_estadisticas implements java.io.Serializable {

    private long id;
    private Integer version;
    private TipoHojaFrontal_estadisticas tipoHojaFrontal;
    private FactorSanguineo_estadisticas factorSanguineo;
    private GrupoSanguineo_estadisticas grupoSanguineo;
    private Persona_estadisticas personaById;
    private Status_estadisticas status;
    private Persona_estadisticas personaByIdAvisarEmergencia;
    private String puntoReferencia;
    private Integer tiempoResidencia;
    private Long idAntPrenatObst;
    private Long idPeriodoNeonatal;
    private Long idAlimentacion;
    private Long idDesarrollo;
    private Long idAntSexReprod;
    private Long cid;
    private Boolean eliminado;
    private Long idAntGinecoObstetrico;
    private Long idAntHematoOnc;
    private Boolean estaEmbarazada;
    private String descripcionDesconocido;
    private Date fechaCreada;
    private boolean desconocido;
    private Integer idRis;
    private Long idProblemasDetectados;
    private String numeroHc;
    private Boolean tieneCda;
    private Set<HojaEmergencia_estadisticas> hojaEmergencias = new HashSet<HojaEmergencia_estadisticas>(
            0);
    private Set<SolicitudCitologiaGinecologica_estadisticas> solicitudCitologiaGinecologicas = new HashSet<SolicitudCitologiaGinecologica_estadisticas>(
            0);
    private Set<SolicitudBiopsia_estadisticas> solicitudBiopsias = new HashSet<SolicitudBiopsia_estadisticas>(
            0);
    private Set<SolicitudCitologia_estadisticas> solicitudCitologias = new HashSet<SolicitudCitologia_estadisticas>(
            0);
    private Set<Referencias_estadisticas> referenciases = new HashSet<Referencias_estadisticas>(
            0);
    private Set<SolicitudInterconsulta_estadisticas> solicitudInterconsultas = new HashSet<SolicitudInterconsulta_estadisticas>(
            0);
    private Set<SolicitudTransfusion_estadisticas> solicitudTransfusions = new HashSet<SolicitudTransfusion_estadisticas>(
            0);
    private Set<Admision_estadisticas> admisions = new HashSet<Admision_estadisticas>(
            0);
    private Set<SolicitudIntervencion_estadisticas> solicitudIntervencions = new HashSet<SolicitudIntervencion_estadisticas>(
            0);
    private Set<Cita_estadisticas> citas = new HashSet<Cita_estadisticas>(0);
    private Set<SolicitudAnalisisLab_estadisticas> solicitudAnalisisLabs = new HashSet<SolicitudAnalisisLab_estadisticas>(
            0);
    private Set<Inmunizaciones_estadisticas> inmunizacioneses = new HashSet<Inmunizaciones_estadisticas>(
            0);
    private Set<SolicitudAutopsia_estadisticas> solicitudAutopsias = new HashSet<SolicitudAutopsia_estadisticas>(
            0);
    private Set<TratamientoTerapeutico_estadisticas> tratamientoTerapeuticos = new HashSet<TratamientoTerapeutico_estadisticas>(
            0);
    private Set<OrdenAdmision_estadisticas> ordenAdmisions = new HashSet<OrdenAdmision_estadisticas>(
            0);
    private Set<CertificadoDefuncion_estadisticas> certificadoDefuncions = new HashSet<CertificadoDefuncion_estadisticas>(
            0);

    public HojaFrontal_estadisticas() {
    }

    public HojaFrontal_estadisticas(
            TipoHojaFrontal_estadisticas tipoHojaFrontal,
            Persona_estadisticas personaById, Date fechaCreada,
            boolean desconocido, String numeroHc) {
        this.tipoHojaFrontal = tipoHojaFrontal;
        this.personaById = personaById;
        this.fechaCreada = fechaCreada;
        this.desconocido = desconocido;
        this.numeroHc = numeroHc;
    }

    public HojaFrontal_estadisticas(
            TipoHojaFrontal_estadisticas tipoHojaFrontal,
            FactorSanguineo_estadisticas factorSanguineo,
            GrupoSanguineo_estadisticas grupoSanguineo,
            Persona_estadisticas personaById,
            Status_estadisticas status,
            Persona_estadisticas personaByIdAvisarEmergencia,
            String puntoReferencia,
            Integer tiempoResidencia,
            Long idAntPrenatObst,
            Long idPeriodoNeonatal,
            Long idAlimentacion,
            Long idDesarrollo,
            Long idAntSexReprod,
            Long cid,
            Boolean eliminado,
            Long idAntGinecoObstetrico,
            Long idAntHematoOnc,
            Boolean estaEmbarazada,
            String descripcionDesconocido,
            Date fechaCreada,
            boolean desconocido,
            Integer idRis,
            Long idProblemasDetectados,
            String numeroHc,
            Boolean tieneCda,
            Set<HojaEmergencia_estadisticas> hojaEmergencias,
            Set<SolicitudCitologiaGinecologica_estadisticas> solicitudCitologiaGinecologicas,
            Set<SolicitudBiopsia_estadisticas> solicitudBiopsias,
            Set<SolicitudCitologia_estadisticas> solicitudCitologias,
            Set<Referencias_estadisticas> referenciases,
            Set<SolicitudInterconsulta_estadisticas> solicitudInterconsultas,
            Set<SolicitudTransfusion_estadisticas> solicitudTransfusions,
            Set<Admision_estadisticas> admisions,
            Set<SolicitudIntervencion_estadisticas> solicitudIntervencions,
            Set<Cita_estadisticas> citas,
            Set<SolicitudAnalisisLab_estadisticas> solicitudAnalisisLabs,
            Set<Inmunizaciones_estadisticas> inmunizacioneses,
            Set<SolicitudAutopsia_estadisticas> solicitudAutopsias,
            Set<TratamientoTerapeutico_estadisticas> tratamientoTerapeuticos,
            Set<OrdenAdmision_estadisticas> ordenAdmisions,
            Set<CertificadoDefuncion_estadisticas> certificadoDefuncions) {
        this.tipoHojaFrontal = tipoHojaFrontal;
        this.factorSanguineo = factorSanguineo;
        this.grupoSanguineo = grupoSanguineo;
        this.personaById = personaById;
        this.status = status;
        this.personaByIdAvisarEmergencia = personaByIdAvisarEmergencia;
        this.puntoReferencia = puntoReferencia;
        this.tiempoResidencia = tiempoResidencia;
        this.idAntPrenatObst = idAntPrenatObst;
        this.idPeriodoNeonatal = idPeriodoNeonatal;
        this.idAlimentacion = idAlimentacion;
        this.idDesarrollo = idDesarrollo;
        this.idAntSexReprod = idAntSexReprod;
        this.cid = cid;
        this.eliminado = eliminado;
        this.idAntGinecoObstetrico = idAntGinecoObstetrico;
        this.idAntHematoOnc = idAntHematoOnc;
        this.estaEmbarazada = estaEmbarazada;
        this.descripcionDesconocido = descripcionDesconocido;
        this.fechaCreada = fechaCreada;
        this.desconocido = desconocido;
        this.idRis = idRis;
        this.idProblemasDetectados = idProblemasDetectados;
        this.numeroHc = numeroHc;
        this.tieneCda = tieneCda;
        this.hojaEmergencias = hojaEmergencias;
        this.solicitudCitologiaGinecologicas = solicitudCitologiaGinecologicas;
        this.solicitudBiopsias = solicitudBiopsias;
        this.solicitudCitologias = solicitudCitologias;
        this.referenciases = referenciases;
        this.solicitudInterconsultas = solicitudInterconsultas;
        this.solicitudTransfusions = solicitudTransfusions;
        this.admisions = admisions;
        this.solicitudIntervencions = solicitudIntervencions;
        this.citas = citas;
        this.solicitudAnalisisLabs = solicitudAnalisisLabs;
        this.inmunizacioneses = inmunizacioneses;
        this.solicitudAutopsias = solicitudAutopsias;
        this.tratamientoTerapeuticos = tratamientoTerapeuticos;
        this.ordenAdmisions = ordenAdmisions;
        this.certificadoDefuncions = certificadoDefuncions;
    }

    @GenericGenerator(name = "generator", strategy = "foreign", parameters = @Parameter(name = "property", value = "personaById"))
    @Id
    @GeneratedValue(generator = "generator")
    @Column(name = "id", unique = true, nullable = false)
    public long getId() {
        return this.id;
    }

    public void setId(long id) {
        this.id = id;
    }

    @Version
    @Column(name = "version")
    public Integer getVersion() {
        return this.version;
    }

    public void setVersion(Integer version) {
        this.version = version;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "id_tipo_hoja_frontal", nullable = false)

    public TipoHojaFrontal_estadisticas getTipoHojaFrontal() {
        return this.tipoHojaFrontal;
    }

    public void setTipoHojaFrontal(TipoHojaFrontal_estadisticas tipoHojaFrontal) {
        this.tipoHojaFrontal = tipoHojaFrontal;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "id_factor_sanguineo")
    public FactorSanguineo_estadisticas getFactorSanguineo() {
        return this.factorSanguineo;
    }

    public void setFactorSanguineo(FactorSanguineo_estadisticas factorSanguineo) {
        this.factorSanguineo = factorSanguineo;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "id_grupo_sanguineo")
    public GrupoSanguineo_estadisticas getGrupoSanguineo() {
        return this.grupoSanguineo;
    }

    public void setGrupoSanguineo(GrupoSanguineo_estadisticas grupoSanguineo) {
        this.grupoSanguineo = grupoSanguineo;
    }

    @OneToOne(fetch = FetchType.LAZY)
    @PrimaryKeyJoinColumn

    public Persona_estadisticas getPersonaById() {
        return this.personaById;
    }

    public void setPersonaById(Persona_estadisticas personaById) {
        this.personaById = personaById;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "id_status")
    public Status_estadisticas getStatus() {
        return this.status;
    }

    public void setStatus(Status_estadisticas status) {
        this.status = status;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "id_avisar_emergencia")
    public Persona_estadisticas getPersonaByIdAvisarEmergencia() {
        return this.personaByIdAvisarEmergencia;
    }

    public void setPersonaByIdAvisarEmergencia(
            Persona_estadisticas personaByIdAvisarEmergencia) {
        this.personaByIdAvisarEmergencia = personaByIdAvisarEmergencia;
    }

    @Column(name = "punto_referencia", length = 100)
    @Length(max = 100)
    public String getPuntoReferencia() {
        return this.puntoReferencia;
    }

    public void setPuntoReferencia(String puntoReferencia) {
        if (puntoReferencia != null)
            puntoReferencia = puntoReferencia.trim();
        this.puntoReferencia = puntoReferencia;
    }

    @Column(name = "tiempo_residencia")
    public Integer getTiempoResidencia() {
        return this.tiempoResidencia;
    }

    public void setTiempoResidencia(Integer tiempoResidencia) {
        this.tiempoResidencia = tiempoResidencia;
    }

    @Column(name = "id_ant_prenat_obst")
    public Long getIdAntPrenatObst() {
        return this.idAntPrenatObst;
    }

    public void setIdAntPrenatObst(Long idAntPrenatObst) {
        this.idAntPrenatObst = idAntPrenatObst;
    }

    @Column(name = "id_periodo_neonatal")
    public Long getIdPeriodoNeonatal() {
        return this.idPeriodoNeonatal;
    }

    public void setIdPeriodoNeonatal(Long idPeriodoNeonatal) {
        this.idPeriodoNeonatal = idPeriodoNeonatal;
    }

    @Column(name = "id_alimentacion")
    public Long getIdAlimentacion() {
        return this.idAlimentacion;
    }

    public void setIdAlimentacion(Long idAlimentacion) {
        this.idAlimentacion = idAlimentacion;
    }

    @Column(name = "id_desarrollo")
    public Long getIdDesarrollo() {
        return this.idDesarrollo;
    }

    public void setIdDesarrollo(Long idDesarrollo) {
        this.idDesarrollo = idDesarrollo;
    }

    @Column(name = "id_ant_sex_reprod")
    public Long getIdAntSexReprod() {
        return this.idAntSexReprod;
    }

    public void setIdAntSexReprod(Long idAntSexReprod) {
        this.idAntSexReprod = idAntSexReprod;
    }

    @Column(name = "cid")
    public Long getCid() {
        return this.cid;
    }

    public void setCid(Long cid) {
        this.cid = cid;
    }

    @Column(name = "eliminado")
    public Boolean getEliminado() {
        return this.eliminado;
    }

    public void setEliminado(Boolean eliminado) {
        this.eliminado = eliminado;
    }

    @Column(name = "id_ant_gineco_obstetrico")
    public Long getIdAntGinecoObstetrico() {
        return this.idAntGinecoObstetrico;
    }

    public void setIdAntGinecoObstetrico(Long idAntGinecoObstetrico) {
        this.idAntGinecoObstetrico = idAntGinecoObstetrico;
    }

    @Column(name = "id_ant_hemato_onc")
    public Long getIdAntHematoOnc() {
        return this.idAntHematoOnc;
    }

    public void setIdAntHematoOnc(Long idAntHematoOnc) {
        this.idAntHematoOnc = idAntHematoOnc;
    }

    @Column(name = "esta_embarazada")
    public Boolean getEstaEmbarazada() {
        return this.estaEmbarazada;
    }

    public void setEstaEmbarazada(Boolean estaEmbarazada) {
        this.estaEmbarazada = estaEmbarazada;
    }

    @Column(name = "descripcion_desconocido")
    public String getDescripcionDesconocido() {
        return this.descripcionDesconocido;
    }

    public void setDescripcionDesconocido(String descripcionDesconocido) {
        if (descripcionDesconocido != null)
            descripcionDesconocido = descripcionDesconocido.trim();
        this.descripcionDesconocido = descripcionDesconocido;
    }

    @Temporal(TemporalType.DATE)
    @Column(name = "fecha_creada", nullable = false, length = 13)

    public Date getFechaCreada() {
        return this.fechaCreada;
    }

    public void setFechaCreada(Date fechaCreada) {
        this.fechaCreada = fechaCreada;
    }

    @Column(name = "desconocido", nullable = false)

    public boolean isDesconocido() {
        return this.desconocido;
    }

    public void setDesconocido(boolean desconocido) {
        this.desconocido = desconocido;
    }

    @Column(name = "id_ris")
    public Integer getIdRis() {
        return this.idRis;
    }

    public void setIdRis(Integer idRis) {
        this.idRis = idRis;
    }

    @Column(name = "id_problemas_detectados")
    public Long getIdProblemasDetectados() {
        return this.idProblemasDetectados;
    }

    public void setIdProblemasDetectados(Long idProblemasDetectados) {
        this.idProblemasDetectados = idProblemasDetectados;
    }

    @Column(name = "numero_hc", nullable = false)

    public String getNumeroHc() {
        return this.numeroHc;
    }

    public void setNumeroHc(String numeroHc) {
        if (numeroHc != null)
            numeroHc = numeroHc.trim();
        this.numeroHc = numeroHc;
    }

    @Column(name = "tiene_cda")
    public Boolean getTieneCda() {
        return this.tieneCda;
    }

    public void setTieneCda(Boolean tieneCda) {
        this.tieneCda = tieneCda;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "hojaFrontal")
    public Set<HojaEmergencia_estadisticas> getHojaEmergencias() {
        return this.hojaEmergencias;
    }

    public void setHojaEmergencias(
            Set<HojaEmergencia_estadisticas> hojaEmergencias) {
        this.hojaEmergencias = hojaEmergencias;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "hojaFrontal")
    public Set<SolicitudCitologiaGinecologica_estadisticas> getSolicitudCitologiaGinecologicas() {
        return this.solicitudCitologiaGinecologicas;
    }

    public void setSolicitudCitologiaGinecologicas(
            Set<SolicitudCitologiaGinecologica_estadisticas> solicitudCitologiaGinecologicas) {
        this.solicitudCitologiaGinecologicas = solicitudCitologiaGinecologicas;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "hojaFrontal")
    public Set<SolicitudBiopsia_estadisticas> getSolicitudBiopsias() {
        return this.solicitudBiopsias;
    }

    public void setSolicitudBiopsias(
            Set<SolicitudBiopsia_estadisticas> solicitudBiopsias) {
        this.solicitudBiopsias = solicitudBiopsias;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "hojaFrontal")
    public Set<SolicitudCitologia_estadisticas> getSolicitudCitologias() {
        return this.solicitudCitologias;
    }

    public void setSolicitudCitologias(
            Set<SolicitudCitologia_estadisticas> solicitudCitologias) {
        this.solicitudCitologias = solicitudCitologias;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "hojaFrontal")
    public Set<Referencias_estadisticas> getReferenciases() {
        return this.referenciases;
    }

    public void setReferenciases(Set<Referencias_estadisticas> referenciases) {
        this.referenciases = referenciases;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "hojaFrontal")
    public Set<SolicitudInterconsulta_estadisticas> getSolicitudInterconsultas() {
        return this.solicitudInterconsultas;
    }

    public void setSolicitudInterconsultas(
            Set<SolicitudInterconsulta_estadisticas> solicitudInterconsultas) {
        this.solicitudInterconsultas = solicitudInterconsultas;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "hojaFrontal")
    public Set<SolicitudTransfusion_estadisticas> getSolicitudTransfusions() {
        return this.solicitudTransfusions;
    }

    public void setSolicitudTransfusions(
            Set<SolicitudTransfusion_estadisticas> solicitudTransfusions) {
        this.solicitudTransfusions = solicitudTransfusions;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "hojaFrontal")
    public Set<Admision_estadisticas> getAdmisions() {
        return this.admisions;
    }

    public void setAdmisions(Set<Admision_estadisticas> admisions) {
        this.admisions = admisions;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "hojaFrontal")
    public Set<SolicitudIntervencion_estadisticas> getSolicitudIntervencions() {
        return this.solicitudIntervencions;
    }

    public void setSolicitudIntervencions(
            Set<SolicitudIntervencion_estadisticas> solicitudIntervencions) {
        this.solicitudIntervencions = solicitudIntervencions;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "hojaFrontal")
    public Set<Cita_estadisticas> getCitas() {
        return this.citas;
    }

    public void setCitas(Set<Cita_estadisticas> citas) {
        this.citas = citas;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "hojaFrontal")
    public Set<SolicitudAnalisisLab_estadisticas> getSolicitudAnalisisLabs() {
        return this.solicitudAnalisisLabs;
    }

    public void setSolicitudAnalisisLabs(
            Set<SolicitudAnalisisLab_estadisticas> solicitudAnalisisLabs) {
        this.solicitudAnalisisLabs = solicitudAnalisisLabs;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "hojaFrontal")
    public Set<Inmunizaciones_estadisticas> getInmunizacioneses() {
        return this.inmunizacioneses;
    }

    public void setInmunizacioneses(
            Set<Inmunizaciones_estadisticas> inmunizacioneses) {
        this.inmunizacioneses = inmunizacioneses;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "hojaFrontal")
    public Set<SolicitudAutopsia_estadisticas> getSolicitudAutopsias() {
        return this.solicitudAutopsias;
    }

    public void setSolicitudAutopsias(
            Set<SolicitudAutopsia_estadisticas> solicitudAutopsias) {
        this.solicitudAutopsias = solicitudAutopsias;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "hojaFrontal")
    public Set<TratamientoTerapeutico_estadisticas> getTratamientoTerapeuticos() {
        return this.tratamientoTerapeuticos;
    }

    public void setTratamientoTerapeuticos(
            Set<TratamientoTerapeutico_estadisticas> tratamientoTerapeuticos) {
        this.tratamientoTerapeuticos = tratamientoTerapeuticos;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "hojaFrontal")
    public Set<OrdenAdmision_estadisticas> getOrdenAdmisions() {
        return this.ordenAdmisions;
    }

    public void setOrdenAdmisions(Set<OrdenAdmision_estadisticas> ordenAdmisions) {
        this.ordenAdmisions = ordenAdmisions;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "hojaFrontal")
    public Set<CertificadoDefuncion_estadisticas> getCertificadoDefuncions() {
        return this.certificadoDefuncions;
    }

    public void setCertificadoDefuncions(
            Set<CertificadoDefuncion_estadisticas> certificadoDefuncions) {
        this.certificadoDefuncions = certificadoDefuncions;
    }

}
