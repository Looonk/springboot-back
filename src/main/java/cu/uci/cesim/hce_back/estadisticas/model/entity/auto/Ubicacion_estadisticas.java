package cu.uci.cesim.hce_back.estadisticas.model.entity.auto;

import com.fasterxml.jackson.annotation.JsonIdentityInfo;
import com.fasterxml.jackson.annotation.ObjectIdGenerators;

import javax.persistence.*;
import java.util.HashSet;
import java.util.Set;

// Generated Apr 18, 2012 10:46:48 AM by Hibernate Tools 3.4.0.CR1


/**
 * Ubicacion generated by hbm2java
 */
@Entity
@Table(name = "ubicacion", schema = "comun")
@JsonIdentityInfo(generator = ObjectIdGenerators.PropertyGenerator.class, property = "id")
public class Ubicacion_estadisticas implements java.io.Serializable {

    private long id;
    private Integer version;
    private Entidad_estadisticas entidad;
    private Ubicacion_estadisticas ubicacion;
    private long idTipoUbicacion;
    private Boolean eliminado;
    private Long cid;
    private String identificador;
    private Set<Cama_estadisticas> camas = new HashSet<Cama_estadisticas>(0);
    private Set<Ubicacion_estadisticas> ubicacions = new HashSet<Ubicacion_estadisticas>(
            0);

    public Ubicacion_estadisticas() {
    }

    public Ubicacion_estadisticas(long id, long idTipoUbicacion,
                                  String identificador) {
        this.id = id;
        this.idTipoUbicacion = idTipoUbicacion;
        this.identificador = identificador;
    }

    public Ubicacion_estadisticas(long id, Entidad_estadisticas entidad,
                                  Ubicacion_estadisticas ubicacion, long idTipoUbicacion,
                                  Boolean eliminado, Long cid, String identificador,
                                  Set<Cama_estadisticas> camas, Set<Ubicacion_estadisticas> ubicacions) {
        this.id = id;
        this.entidad = entidad;
        this.ubicacion = ubicacion;
        this.idTipoUbicacion = idTipoUbicacion;
        this.eliminado = eliminado;
        this.cid = cid;
        this.identificador = identificador;
        this.camas = camas;
        this.ubicacions = ubicacions;
    }

    @Id
    @Column(name = "id", unique = true, nullable = false)
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    public long getId() {
        return this.id;
    }

    public void setId(long id) {
        this.id = id;
    }

    @Version
    @Column(name = "version")
    public Integer getVersion() {
        return this.version;
    }

    public void setVersion(Integer version) {
        this.version = version;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "id_entidad")
    public Entidad_estadisticas getEntidad() {
        return this.entidad;
    }

    public void setEntidad(Entidad_estadisticas entidad) {
        this.entidad = entidad;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "id_ubicacion_padre")
    public Ubicacion_estadisticas getUbicacion() {
        return this.ubicacion;
    }

    public void setUbicacion(Ubicacion_estadisticas ubicacion) {
        this.ubicacion = ubicacion;
    }

    @Column(name = "id_tipo_ubicacion", nullable = false)

    public long getIdTipoUbicacion() {
        return this.idTipoUbicacion;
    }

    public void setIdTipoUbicacion(long idTipoUbicacion) {
        this.idTipoUbicacion = idTipoUbicacion;
    }

    @Column(name = "eliminado")
    public Boolean getEliminado() {
        return this.eliminado;
    }

    public void setEliminado(Boolean eliminado) {
        this.eliminado = eliminado;
    }

    @Column(name = "cid")
    public Long getCid() {
        return this.cid;
    }

    public void setCid(Long cid) {
        this.cid = cid;
    }

    @Column(name = "identificador", nullable = false)

    public String getIdentificador() {
        return this.identificador;
    }

    public void setIdentificador(String identificador) {
        if (identificador != null)
            identificador = identificador.trim();
        this.identificador = identificador;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "ubicacion")
    public Set<Cama_estadisticas> getCamas() {
        return this.camas;
    }

    public void setCamas(Set<Cama_estadisticas> camas) {
        this.camas = camas;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "ubicacion")
    public Set<Ubicacion_estadisticas> getUbicacions() {
        return this.ubicacions;
    }

    public void setUbicacions(Set<Ubicacion_estadisticas> ubicacions) {
        this.ubicacions = ubicacions;
    }

}
