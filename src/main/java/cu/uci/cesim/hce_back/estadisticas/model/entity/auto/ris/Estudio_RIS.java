package cu.uci.cesim.hce_back.estadisticas.model.entity.auto.ris;

import com.fasterxml.jackson.annotation.JsonIdentityInfo;
import com.fasterxml.jackson.annotation.ObjectIdGenerators;

// Generated May 21, 2012 5:42:06 PM by Hibernate Tools 3.4.0.CR1

import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;
import org.hibernate.validator.constraints.Length;

import javax.persistence.*;


/**
 * Estudio generated by hbm2java
 */
@Entity
@Table(name = "estudio", schema = "ris")
@JsonIdentityInfo(generator = ObjectIdGenerators.PropertyGenerator.class, property = "id")
public class Estudio_RIS implements java.io.Serializable {

    private int id;
    private CitaRis_RIS citaRis;
    private TipoEstudio_RIS tipoEstudio;
    private Equipo_RIS equipo;
    private String uidEstudio;
    private Integer idEstadoProcedimiento;
    private String studyId;
    private String studyDescription;
    private String modalidad;
    private Long cid;
    private String indicaciones;
    private String contraindicaciones;
//	private Set<ResultadoEstudio_RIS> resultadoEstudios = new HashSet<ResultadoEstudio_RIS>(
//			0);

    public Estudio_RIS() {
    }

    public Estudio_RIS(CitaRis_RIS citaRis,
                       TipoEstudio_RIS tipoEstudio, Equipo_RIS equipo) {
        this.citaRis = citaRis;
        this.tipoEstudio = tipoEstudio;
        this.equipo = equipo;
    }

    public Estudio_RIS(CitaRis_RIS citaRis,
                       TipoEstudio_RIS tipoEstudio, Equipo_RIS equipo,
                       String uidEstudio, Integer idEstadoProcedimiento, String studyId,
                       String studyDescription, String modalidad, Long cid,
                       String indicaciones, String contraindicaciones
//			Set<ResultadoEstudio_RIS> resultadoEstudios
    ) {
        this.citaRis = citaRis;
        this.tipoEstudio = tipoEstudio;
        this.equipo = equipo;
        this.uidEstudio = uidEstudio;
        this.idEstadoProcedimiento = idEstadoProcedimiento;
        this.studyId = studyId;
        this.studyDescription = studyDescription;
        this.modalidad = modalidad;
        this.cid = cid;
        this.indicaciones = indicaciones;
        this.contraindicaciones = contraindicaciones;
//		this.resultadoEstudios = resultadoEstudios;
    }

    @GenericGenerator(name = "generator", strategy = "foreign", parameters = @Parameter(name = "property", value = "citaRis"))
    @Id
    @GeneratedValue(generator = "generator")
    @Column(name = "id", unique = true, nullable = false)
    public int getId() {
        return this.id;
    }

    public void setId(int id) {
        this.id = id;
    }

    @OneToOne(fetch = FetchType.LAZY)
    @PrimaryKeyJoinColumn

    public CitaRis_RIS getCitaRis() {
        return this.citaRis;
    }

    public void setCitaRis(CitaRis_RIS citaRis) {
        this.citaRis = citaRis;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "id_tipo_estudio", nullable = false)

    public TipoEstudio_RIS getTipoEstudio() {
        return this.tipoEstudio;
    }

    public void setTipoEstudio(TipoEstudio_RIS tipoEstudio) {
        this.tipoEstudio = tipoEstudio;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "id_equipo", nullable = false)

    public Equipo_RIS getEquipo() {
        return this.equipo;
    }

    public void setEquipo(Equipo_RIS equipo) {
        this.equipo = equipo;
    }

    @Column(name = "uid_estudio")
    public String getUidEstudio() {
        return this.uidEstudio;
    }

    public void setUidEstudio(String uidEstudio) {
        if (uidEstudio != null)
            uidEstudio = uidEstudio.trim();
        this.uidEstudio = uidEstudio;
    }

    @Column(name = "id_estado_procedimiento")
    public Integer getIdEstadoProcedimiento() {
        return this.idEstadoProcedimiento;
    }

    public void setIdEstadoProcedimiento(Integer idEstadoProcedimiento) {
        this.idEstadoProcedimiento = idEstadoProcedimiento;
    }

    @Column(name = "study_id")
    public String getStudyId() {
        return this.studyId;
    }

    public void setStudyId(String studyId) {
        if (studyId != null)
            studyId = studyId.trim();
        this.studyId = studyId;
    }

    @Column(name = "study_description")
    public String getStudyDescription() {
        return this.studyDescription;
    }

    public void setStudyDescription(String studyDescription) {
        if (studyDescription != null)
            studyDescription = studyDescription.trim();
        this.studyDescription = studyDescription;
    }

    @Column(name = "modalidad", length = 5)
    @Length(max = 5)
    public String getModalidad() {
        return this.modalidad;
    }

    public void setModalidad(String modalidad) {
        if (modalidad != null)
            modalidad = modalidad.trim();
        this.modalidad = modalidad;
    }

    @Column(name = "cid")
    public Long getCid() {
        return this.cid;
    }

    public void setCid(Long cid) {
        this.cid = cid;
    }

    @Column(name = "indicaciones")
    public String getIndicaciones() {
        return this.indicaciones;
    }

    public void setIndicaciones(String indicaciones) {
        if (indicaciones != null)
            indicaciones = indicaciones.trim();
        this.indicaciones = indicaciones;
    }

    @Column(name = "contraindicaciones")
    public String getContraindicaciones() {
        return this.contraindicaciones;
    }

    public void setContraindicaciones(String contraindicaciones) {
        if (contraindicaciones != null)
            contraindicaciones = contraindicaciones.trim();
        this.contraindicaciones = contraindicaciones;
    }

//	@OneToMany(fetch = FetchType.LAZY, mappedBy = "estudio")
//	public Set<ResultadoEstudio_RIS> getResultadoEstudios() {
//		return this.resultadoEstudios;
//	}
//
//	public void setResultadoEstudios(
//			Set<ResultadoEstudio_RIS> resultadoEstudios) {
//		this.resultadoEstudios = resultadoEstudios;
//	}

}
