package cu.uci.cesim.hce_back.estadisticas.model.entity.auto.ris;

import com.fasterxml.jackson.annotation.JsonIdentityInfo;
import com.fasterxml.jackson.annotation.ObjectIdGenerators;

// Generated May 21, 2012 5:42:06 PM by Hibernate Tools 3.4.0.CR1

import org.hibernate.validator.constraints.Length;

import javax.persistence.*;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;

/**
 * Persona generated by hbm2java
 */
@Entity
@Table(name = "persona", schema = "hc_local")
@JsonIdentityInfo(generator = ObjectIdGenerators.PropertyGenerator.class, property = "id")
public class Persona_RIS implements java.io.Serializable {

    private long id;
    private Integer version;
    private Sexo_RIS sexo;
    private Persona_RIS personaByIdDatosPadre;
    private Persona_RIS personaByIdDatosSupervisor;
    private Persona_RIS personaByIdDatosRepresentante;
    private Nacion_RIS nacion;
    private Persona_RIS personaByIdDatosMadre;
    private String cedula;
    private String foto;
    private String nombres;
    private String apellido1;
    private String apellido2;
    private Date fechaNacimiento;
    private Long idRaza;
    private Long idEtnia;
    private Long idEstadoCivil;
    private String correoElectronico;
    private Long idLugarNacimiento;
    private Long idDireccionParticular;
    private Long idLugarResidencia;
    private String telfFijo;
    private String telfCelular;
    private String nombresFonetico;
    private String apellido1Fonetico;
    private String apellido2Fonetico;
    private Long idDatosLaborales;
    private Boolean eliminado;
    private Long cid;
    private Set<Persona_RIS> personasForIdDatosSupervisor = new HashSet<Persona_RIS>(
            0);
    private Set<PersonaHist_RIS> personaHists = new HashSet<PersonaHist_RIS>(
            0);
    private Set<Persona_RIS> personasForIdDatosMadre = new HashSet<Persona_RIS>(
            0);
    private Set<Persona_RIS> personasForIdDatosPadre = new HashSet<Persona_RIS>(
            0);
    private Set<Usuario_RIS> usuarios = new HashSet<Usuario_RIS>(
            0);
    private HojaFrontal_RIS hojaFrontalById;
    private Set<HojaFrontal_RIS> hojaFrontalsForIdAvisarEmergencia = new HashSet<HojaFrontal_RIS>(
            0);
    private Set<Persona_RIS> personasForIdDatosRepresentante = new HashSet<Persona_RIS>(
            0);

    public Persona_RIS() {
    }

    public Persona_RIS(long id) {
        this.id = id;
    }

    public Persona_RIS(long id, Sexo_RIS sexo,
                       Persona_RIS personaByIdDatosPadre,
                       Persona_RIS personaByIdDatosSupervisor,
                       Persona_RIS personaByIdDatosRepresentante,
                       Nacion_RIS nacion,
                       Persona_RIS personaByIdDatosMadre, String cedula,
                       String foto, String nombres, String apellido1, String apellido2,
                       Date fechaNacimiento, Long idRaza, Long idEtnia,
                       Long idEstadoCivil, String correoElectronico,
                       Long idLugarNacimiento, Long idDireccionParticular,
                       Long idLugarResidencia, String telfFijo, String telfCelular,
                       String nombresFonetico, String apellido1Fonetico,
                       String apellido2Fonetico, Long idDatosLaborales, Boolean eliminado,
                       Long cid, Set<Persona_RIS> personasForIdDatosSupervisor,
                       Set<PersonaHist_RIS> personaHists,
                       Set<Persona_RIS> personasForIdDatosMadre,
                       Set<Persona_RIS> personasForIdDatosPadre,
                       Set<Usuario_RIS> usuarios,
                       HojaFrontal_RIS hojaFrontalById,
                       Set<HojaFrontal_RIS> hojaFrontalsForIdAvisarEmergencia,
                       Set<Persona_RIS> personasForIdDatosRepresentante) {
        this.id = id;
        this.sexo = sexo;
        this.personaByIdDatosPadre = personaByIdDatosPadre;
        this.personaByIdDatosSupervisor = personaByIdDatosSupervisor;
        this.personaByIdDatosRepresentante = personaByIdDatosRepresentante;
        this.nacion = nacion;
        this.personaByIdDatosMadre = personaByIdDatosMadre;
        this.cedula = cedula;
        this.foto = foto;
        this.nombres = nombres;
        this.apellido1 = apellido1;
        this.apellido2 = apellido2;
        this.fechaNacimiento = fechaNacimiento;
        this.idRaza = idRaza;
        this.idEtnia = idEtnia;
        this.idEstadoCivil = idEstadoCivil;
        this.correoElectronico = correoElectronico;
        this.idLugarNacimiento = idLugarNacimiento;
        this.idDireccionParticular = idDireccionParticular;
        this.idLugarResidencia = idLugarResidencia;
        this.telfFijo = telfFijo;
        this.telfCelular = telfCelular;
        this.nombresFonetico = nombresFonetico;
        this.apellido1Fonetico = apellido1Fonetico;
        this.apellido2Fonetico = apellido2Fonetico;
        this.idDatosLaborales = idDatosLaborales;
        this.eliminado = eliminado;
        this.cid = cid;
        this.personasForIdDatosSupervisor = personasForIdDatosSupervisor;
        this.personaHists = personaHists;
        this.personasForIdDatosMadre = personasForIdDatosMadre;
        this.personasForIdDatosPadre = personasForIdDatosPadre;
        this.usuarios = usuarios;
        this.hojaFrontalById = hojaFrontalById;
        this.hojaFrontalsForIdAvisarEmergencia = hojaFrontalsForIdAvisarEmergencia;
        this.personasForIdDatosRepresentante = personasForIdDatosRepresentante;
    }

    @Id
    @Column(name = "id", unique = true, nullable = false)
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    public long getId() {
        return this.id;
    }

    public void setId(long id) {
        this.id = id;
    }

    @Version
    @Column(name = "version")
    public Integer getVersion() {
        return this.version;
    }

    public void setVersion(Integer version) {
        this.version = version;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "id_sexo")
    public Sexo_RIS getSexo() {
        return this.sexo;
    }

    public void setSexo(Sexo_RIS sexo) {
        this.sexo = sexo;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "id_datos_padre")
    public Persona_RIS getPersonaByIdDatosPadre() {
        return this.personaByIdDatosPadre;
    }

    public void setPersonaByIdDatosPadre(
            Persona_RIS personaByIdDatosPadre) {
        this.personaByIdDatosPadre = personaByIdDatosPadre;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "id_datos_supervisor")
    public Persona_RIS getPersonaByIdDatosSupervisor() {
        return this.personaByIdDatosSupervisor;
    }

    public void setPersonaByIdDatosSupervisor(
            Persona_RIS personaByIdDatosSupervisor) {
        this.personaByIdDatosSupervisor = personaByIdDatosSupervisor;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "id_datos_representante")
    public Persona_RIS getPersonaByIdDatosRepresentante() {
        return this.personaByIdDatosRepresentante;
    }

    public void setPersonaByIdDatosRepresentante(
            Persona_RIS personaByIdDatosRepresentante) {
        this.personaByIdDatosRepresentante = personaByIdDatosRepresentante;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "id_nacion")
    public Nacion_RIS getNacion() {
        return this.nacion;
    }

    public void setNacion(Nacion_RIS nacion) {
        this.nacion = nacion;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "id_datos_madre")
    public Persona_RIS getPersonaByIdDatosMadre() {
        return this.personaByIdDatosMadre;
    }

    public void setPersonaByIdDatosMadre(
            Persona_RIS personaByIdDatosMadre) {
        this.personaByIdDatosMadre = personaByIdDatosMadre;
    }

    @Column(name = "cedula")
    public String getCedula() {
        return this.cedula;
    }

    public void setCedula(String cedula) {
        if (cedula != null)
            cedula = cedula.trim();
        this.cedula = cedula;
    }

    @Column(name = "foto")
    public String getFoto() {
        return this.foto;
    }

    public void setFoto(String foto) {
        if (foto != null)
            foto = foto.trim();
        this.foto = foto;
    }

    @Column(name = "nombres")
    public String getNombres() {
        return this.nombres;
    }

    public void setNombres(String nombres) {
        if (nombres != null)
            nombres = nombres.trim();
        this.nombres = nombres;
    }

    @Column(name = "apellido1")
    public String getApellido1() {
        return this.apellido1;
    }

    public void setApellido1(String apellido1) {
        if (apellido1 != null)
            apellido1 = apellido1.trim();
        this.apellido1 = apellido1;
    }

    @Column(name = "apellido2")
    public String getApellido2() {
        return this.apellido2;
    }

    public void setApellido2(String apellido2) {
        if (apellido2 != null)
            apellido2 = apellido2.trim();
        this.apellido2 = apellido2;
    }

    @Temporal(TemporalType.DATE)
    @Column(name = "fecha_nacimiento", length = 13)
    public Date getFechaNacimiento() {
        return this.fechaNacimiento;
    }

    public void setFechaNacimiento(Date fechaNacimiento) {
        this.fechaNacimiento = fechaNacimiento;
    }

    @Column(name = "id_raza")
    public Long getIdRaza() {
        return this.idRaza;
    }

    public void setIdRaza(Long idRaza) {
        this.idRaza = idRaza;
    }

    @Column(name = "id_etnia")
    public Long getIdEtnia() {
        return this.idEtnia;
    }

    public void setIdEtnia(Long idEtnia) {
        this.idEtnia = idEtnia;
    }

    @Column(name = "id_estado_civil")
    public Long getIdEstadoCivil() {
        return this.idEstadoCivil;
    }

    public void setIdEstadoCivil(Long idEstadoCivil) {
        this.idEstadoCivil = idEstadoCivil;
    }

    @Column(name = "correo_electronico")
    public String getCorreoElectronico() {
        return this.correoElectronico;
    }

    public void setCorreoElectronico(String correoElectronico) {
        if (correoElectronico != null)
            correoElectronico = correoElectronico.trim();
        this.correoElectronico = correoElectronico;
    }

    @Column(name = "id_lugar_nacimiento")
    public Long getIdLugarNacimiento() {
        return this.idLugarNacimiento;
    }

    public void setIdLugarNacimiento(Long idLugarNacimiento) {
        this.idLugarNacimiento = idLugarNacimiento;
    }

    @Column(name = "id_direccion_particular")
    public Long getIdDireccionParticular() {
        return this.idDireccionParticular;
    }

    public void setIdDireccionParticular(Long idDireccionParticular) {
        this.idDireccionParticular = idDireccionParticular;
    }

    @Column(name = "id_lugar_residencia")
    public Long getIdLugarResidencia() {
        return this.idLugarResidencia;
    }

    public void setIdLugarResidencia(Long idLugarResidencia) {
        this.idLugarResidencia = idLugarResidencia;
    }

    @Column(name = "telf_fijo", length = 100)
    @Length(max = 100)
    public String getTelfFijo() {
        return this.telfFijo;
    }

    public void setTelfFijo(String telfFijo) {
        if (telfFijo != null)
            telfFijo = telfFijo.trim();
        this.telfFijo = telfFijo;
    }

    @Column(name = "telf_celular", length = 100)
    @Length(max = 100)
    public String getTelfCelular() {
        return this.telfCelular;
    }

    public void setTelfCelular(String telfCelular) {
        if (telfCelular != null)
            telfCelular = telfCelular.trim();
        this.telfCelular = telfCelular;
    }

    @Column(name = "nombres_fonetico", length = 100)
    @Length(max = 100)
    public String getNombresFonetico() {
        return this.nombresFonetico;
    }

    public void setNombresFonetico(String nombresFonetico) {
        if (nombresFonetico != null)
            nombresFonetico = nombresFonetico.trim();
        this.nombresFonetico = nombresFonetico;
    }

    @Column(name = "apellido1_fonetico", length = 100)
    @Length(max = 100)
    public String getApellido1Fonetico() {
        return this.apellido1Fonetico;
    }

    public void setApellido1Fonetico(String apellido1Fonetico) {
        if (apellido1Fonetico != null)
            apellido1Fonetico = apellido1Fonetico.trim();
        this.apellido1Fonetico = apellido1Fonetico;
    }

    @Column(name = "apellido2_fonetico", length = 100)
    @Length(max = 100)
    public String getApellido2Fonetico() {
        return this.apellido2Fonetico;
    }

    public void setApellido2Fonetico(String apellido2Fonetico) {
        if (apellido2Fonetico != null)
            apellido2Fonetico = apellido2Fonetico.trim();
        this.apellido2Fonetico = apellido2Fonetico;
    }

    @Column(name = "id_datos_laborales")
    public Long getIdDatosLaborales() {
        return this.idDatosLaborales;
    }

    public void setIdDatosLaborales(Long idDatosLaborales) {
        this.idDatosLaborales = idDatosLaborales;
    }

    @Column(name = "eliminado")
    public Boolean getEliminado() {
        return this.eliminado;
    }

    public void setEliminado(Boolean eliminado) {
        this.eliminado = eliminado;
    }

    @Column(name = "cid")
    public Long getCid() {
        return this.cid;
    }

    public void setCid(Long cid) {
        this.cid = cid;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "personaByIdDatosSupervisor")
    public Set<Persona_RIS> getPersonasForIdDatosSupervisor() {
        return this.personasForIdDatosSupervisor;
    }

    public void setPersonasForIdDatosSupervisor(
            Set<Persona_RIS> personasForIdDatosSupervisor) {
        this.personasForIdDatosSupervisor = personasForIdDatosSupervisor;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "persona")
    public Set<PersonaHist_RIS> getPersonaHists() {
        return this.personaHists;
    }

    public void setPersonaHists(Set<PersonaHist_RIS> personaHists) {
        this.personaHists = personaHists;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "personaByIdDatosMadre")
    public Set<Persona_RIS> getPersonasForIdDatosMadre() {
        return this.personasForIdDatosMadre;
    }

    public void setPersonasForIdDatosMadre(
            Set<Persona_RIS> personasForIdDatosMadre) {
        this.personasForIdDatosMadre = personasForIdDatosMadre;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "personaByIdDatosPadre")
    public Set<Persona_RIS> getPersonasForIdDatosPadre() {
        return this.personasForIdDatosPadre;
    }

    public void setPersonasForIdDatosPadre(
            Set<Persona_RIS> personasForIdDatosPadre) {
        this.personasForIdDatosPadre = personasForIdDatosPadre;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "persona")
    public Set<Usuario_RIS> getUsuarios() {
        return this.usuarios;
    }

    public void setUsuarios(Set<Usuario_RIS> usuarios) {
        this.usuarios = usuarios;
    }

    @OneToOne(fetch = FetchType.LAZY, mappedBy = "personaById")
    public HojaFrontal_RIS getHojaFrontalById() {
        return this.hojaFrontalById;
    }

    public void setHojaFrontalById(HojaFrontal_RIS hojaFrontalById) {
        this.hojaFrontalById = hojaFrontalById;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "personaByIdAvisarEmergencia")
    public Set<HojaFrontal_RIS> getHojaFrontalsForIdAvisarEmergencia() {
        return this.hojaFrontalsForIdAvisarEmergencia;
    }

    public void setHojaFrontalsForIdAvisarEmergencia(
            Set<HojaFrontal_RIS> hojaFrontalsForIdAvisarEmergencia) {
        this.hojaFrontalsForIdAvisarEmergencia = hojaFrontalsForIdAvisarEmergencia;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "personaByIdDatosRepresentante")
    public Set<Persona_RIS> getPersonasForIdDatosRepresentante() {
        return this.personasForIdDatosRepresentante;
    }

    public void setPersonasForIdDatosRepresentante(
            Set<Persona_RIS> personasForIdDatosRepresentante) {
        this.personasForIdDatosRepresentante = personasForIdDatosRepresentante;
    }

}
