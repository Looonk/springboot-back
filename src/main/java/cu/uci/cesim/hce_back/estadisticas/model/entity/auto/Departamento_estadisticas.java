package cu.uci.cesim.hce_back.estadisticas.model.entity.auto;

import com.fasterxml.jackson.annotation.JsonIdentityInfo;
import com.fasterxml.jackson.annotation.ObjectIdGenerators;

import javax.persistence.*;
import java.util.HashSet;
import java.util.Set;

// Generated Apr 18, 2012 10:46:48 AM by Hibernate Tools 3.4.0.CR1


/**
 * Departamento generated by hbm2java
 */
@Entity
@Table(name = "departamento", schema = "comun", uniqueConstraints = @UniqueConstraint(columnNames = "nombre"))
@JsonIdentityInfo(generator = ObjectIdGenerators.PropertyGenerator.class, property = "id")
public class Departamento_estadisticas implements java.io.Serializable {

    private long id;
    private Integer version;
    private String nombre;
    private Boolean eliminado;
    private Long cid;
    private Boolean esClinico;
    private String codigo;
    private Set<DepartamentoInEntidad_estadisticas> departamentoInEntidads = new HashSet<DepartamentoInEntidad_estadisticas>(
            0);
    private Set<OrigenSolicitudAnatomia_estadisticas> origenSolicitudAnatomias = new HashSet<OrigenSolicitudAnatomia_estadisticas>(
            0);
    private Set<Servicio_estadisticas> servicios = new HashSet<Servicio_estadisticas>(
            0);

    public Departamento_estadisticas() {
    }

    public Departamento_estadisticas(long id, String nombre) {
        this.id = id;
        this.nombre = nombre;
    }

    public Departamento_estadisticas(long id, String nombre, Boolean eliminado,
                                     Long cid, Boolean esClinico, String codigo,
                                     Set<DepartamentoInEntidad_estadisticas> departamentoInEntidads,
                                     Set<OrigenSolicitudAnatomia_estadisticas> origenSolicitudAnatomias,
                                     Set<Servicio_estadisticas> servicios) {
        this.id = id;
        this.nombre = nombre;
        this.eliminado = eliminado;
        this.cid = cid;
        this.esClinico = esClinico;
        this.codigo = codigo;
        this.departamentoInEntidads = departamentoInEntidads;
        this.origenSolicitudAnatomias = origenSolicitudAnatomias;
        this.servicios = servicios;
    }

    @Id
    @Column(name = "id", unique = true, nullable = false)
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    public long getId() {
        return this.id;
    }

    public void setId(long id) {
        this.id = id;
    }

    @Version
    @Column(name = "version")
    public Integer getVersion() {
        return this.version;
    }

    public void setVersion(Integer version) {
        this.version = version;
    }

    @Column(name = "nombre", unique = true, nullable = false)

    public String getNombre() {
        return this.nombre;
    }

    public void setNombre(String nombre) {
        if (nombre != null)
            nombre = nombre.trim();
        this.nombre = nombre;
    }

    @Column(name = "eliminado")
    public Boolean getEliminado() {
        return this.eliminado;
    }

    public void setEliminado(Boolean eliminado) {
        this.eliminado = eliminado;
    }

    @Column(name = "cid")
    public Long getCid() {
        return this.cid;
    }

    public void setCid(Long cid) {
        this.cid = cid;
    }

    @Column(name = "es_clinico")
    public Boolean getEsClinico() {
        return this.esClinico;
    }

    public void setEsClinico(Boolean esClinico) {
        this.esClinico = esClinico;
    }

    @Column(name = "codigo")
    public String getCodigo() {
        return this.codigo;
    }

    public void setCodigo(String codigo) {
        if (codigo != null)
            codigo = codigo.trim();
        this.codigo = codigo;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "departamento")
    public Set<DepartamentoInEntidad_estadisticas> getDepartamentoInEntidads() {
        return this.departamentoInEntidads;
    }

    public void setDepartamentoInEntidads(
            Set<DepartamentoInEntidad_estadisticas> departamentoInEntidads) {
        this.departamentoInEntidads = departamentoInEntidads;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "departamento")
    public Set<OrigenSolicitudAnatomia_estadisticas> getOrigenSolicitudAnatomias() {
        return this.origenSolicitudAnatomias;
    }

    public void setOrigenSolicitudAnatomias(
            Set<OrigenSolicitudAnatomia_estadisticas> origenSolicitudAnatomias) {
        this.origenSolicitudAnatomias = origenSolicitudAnatomias;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "departamento")
    public Set<Servicio_estadisticas> getServicios() {
        return this.servicios;
    }

    public void setServicios(Set<Servicio_estadisticas> servicios) {
        this.servicios = servicios;
    }

}
