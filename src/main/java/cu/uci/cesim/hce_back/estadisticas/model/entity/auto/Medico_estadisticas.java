package cu.uci.cesim.hce_back.estadisticas.model.entity.auto;

import com.fasterxml.jackson.annotation.JsonIdentityInfo;
import com.fasterxml.jackson.annotation.ObjectIdGenerators;
import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;
import org.hibernate.validator.constraints.Length;

import javax.persistence.*;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;

// Generated 22-mar-2011 15:22:10 by Hibernate Tools 3.2.4.GA


/**
 * Medico generated by hbm2java
 */
@Entity
@Table(name = "medico", schema = "comun", uniqueConstraints = {
        @UniqueConstraint(columnNames = "matricula_ministerio"),
        @UniqueConstraint(columnNames = "matricula_colegio_medico")})
@JsonIdentityInfo(generator = ObjectIdGenerators.PropertyGenerator.class, property = "id")
public class Medico_estadisticas implements java.io.Serializable {

    private long id;
    private Integer version;
    private Usuario_estadisticas usuario;
    private String matriculaMinisterio;
    private Boolean eliminado;
    private Long cid;
    private String matriculaColegioMedico;
    private Date fechaGraduacion;
    private Set<Referencias_estadisticas> referencias = new HashSet<Referencias_estadisticas>(0);
    private Set<MedicoInEntidad_estadisticas> entidades = new HashSet<MedicoInEntidad_estadisticas>(
            0);
    private Set<PlanificacionMedico_estadisticas> planificacionMedicos = new HashSet<PlanificacionMedico_estadisticas>(
            0);
    private Set<Especialidad_estadisticas> especialidades = new HashSet<Especialidad_estadisticas>(0);

    private Set<MedicoInEntidad_estadisticas> medicoInEntidads = new HashSet<MedicoInEntidad_estadisticas>(
            0);

    public Medico_estadisticas() {
    }

    public Medico_estadisticas(Usuario_estadisticas usuario, String matriculaMinisterio,
                               String matriculaColegioMedico, Date fechaGraduacion) {
        this.usuario = usuario;
        this.matriculaMinisterio = matriculaMinisterio;
        this.matriculaColegioMedico = matriculaColegioMedico;
        this.fechaGraduacion = fechaGraduacion;
    }

    public Medico_estadisticas(Usuario_estadisticas usuario, String matriculaMinisterio,
                               Boolean eliminado, Long cid, String matriculaColegioMedico,
                               Date fechaGraduacion, Set<Referencias_estadisticas> referencias,
                               Set<MedicoInEntidad_estadisticas> entidades,
                               Set<PlanificacionMedico_estadisticas> planificacionMedicos,
                               Set<Especialidad_estadisticas> especialidades) {
        this.usuario = usuario;
        this.matriculaMinisterio = matriculaMinisterio;
        this.eliminado = eliminado;
        this.cid = cid;
        this.matriculaColegioMedico = matriculaColegioMedico;
        this.fechaGraduacion = fechaGraduacion;
        this.referencias = referencias;
        this.entidades = entidades;
        this.planificacionMedicos = planificacionMedicos;
        this.especialidades = especialidades;
    }

    @GenericGenerator(name = "generator", strategy = "foreign", parameters = @Parameter(name = "property", value = "usuario"))
    @Id
    @GeneratedValue(generator = "generator")
    @Column(name = "id", unique = true, nullable = false)
    public long getId() {
        return this.id;
    }

    public void setId(long id) {
        this.id = id;
    }

    @Version
    @Column(name = "version")
    public Integer getVersion() {
        return this.version;
    }

    public void setVersion(Integer version) {
        this.version = version;
    }

    @OneToOne(fetch = FetchType.LAZY)
    @PrimaryKeyJoinColumn

    public Usuario_estadisticas getUsuario() {
        return this.usuario;
    }

    public void setUsuario(Usuario_estadisticas usuario) {
        this.usuario = usuario;
    }

    @Column(name = "matricula_ministerio", unique = true, nullable = false, length = 20)

    @Length(max = 20)
    public String getMatriculaMinisterio() {
        return this.matriculaMinisterio;
    }

    public void setMatriculaMinisterio(String matriculaMinisterio) {
        if (matriculaMinisterio != null)
            matriculaMinisterio = matriculaMinisterio.trim();
        this.matriculaMinisterio = matriculaMinisterio;
    }

    @Column(name = "eliminado")
    public Boolean getEliminado() {
        return this.eliminado;
    }

    public void setEliminado(Boolean eliminado) {
        this.eliminado = eliminado;
    }

    @Column(name = "cid")
    public Long getCid() {
        return this.cid;
    }

    public void setCid(Long cid) {
        this.cid = cid;
    }

    @Column(name = "matricula_colegio_medico", unique = true, nullable = false, length = 20)

    @Length(max = 20)
    public String getMatriculaColegioMedico() {
        return this.matriculaColegioMedico;
    }

    public void setMatriculaColegioMedico(String matriculaColegioMedico) {
        if (matriculaColegioMedico != null)
            matriculaColegioMedico = matriculaColegioMedico.trim();
        this.matriculaColegioMedico = matriculaColegioMedico;
    }

    @Temporal(TemporalType.DATE)
    @Column(name = "fecha_graduacion", nullable = false, length = 13)

    public Date getFechaGraduacion() {
        return this.fechaGraduacion;
    }

    public void setFechaGraduacion(Date fechaGraduacion) {
        this.fechaGraduacion = fechaGraduacion;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "medico")
    public Set<Referencias_estadisticas> getReferencias() {
        return this.referencias;
    }

    public void setReferencias(Set<Referencias_estadisticas> referencias) {
        this.referencias = referencias;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "medico")
    public Set<MedicoInEntidad_estadisticas> getEntidades() {
        return this.entidades;
    }

    public void setEntidades(Set<MedicoInEntidad_estadisticas> entidades) {
        this.entidades = entidades;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "medico")
    public Set<PlanificacionMedico_estadisticas> getPlanificacionMedicos() {
        return this.planificacionMedicos;
    }

    public void setPlanificacionMedicos(
            Set<PlanificacionMedico_estadisticas> planificacionMedicos) {
        this.planificacionMedicos = planificacionMedicos;
    }

    @ManyToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY)
    @JoinTable(name = "medico_in_especialidad", schema = "comun", joinColumns = {@JoinColumn(name = "id_medico", nullable = false, updatable = false)}, inverseJoinColumns = {@JoinColumn(name = "id_especialidad", nullable = false, updatable = false)})
    public Set<Especialidad_estadisticas> getEspecialidades() {
        return this.especialidades;
    }

    public void setEspecialidades(Set<Especialidad_estadisticas> especialidades) {
        this.especialidades = especialidades;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "medico")
    public Set<MedicoInEntidad_estadisticas> getMedicoInEntidads() {
        return this.medicoInEntidads;
    }

    public void setMedicoInEntidads(
            Set<MedicoInEntidad_estadisticas> medicoInEntidads) {
        this.medicoInEntidads = medicoInEntidads;
    }

}
