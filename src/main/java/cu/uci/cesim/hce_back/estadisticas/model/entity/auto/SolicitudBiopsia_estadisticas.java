package cu.uci.cesim.hce_back.estadisticas.model.entity.auto;

import com.fasterxml.jackson.annotation.JsonIdentityInfo;
import com.fasterxml.jackson.annotation.ObjectIdGenerators;

import javax.persistence.*;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;

// Generated Apr 18, 2012 10:46:48 AM by Hibernate Tools 3.4.0.CR1


/**
 * SolicitudBiopsia generated by hbm2java
 */
@Entity
@Table(name = "solicitud_biopsia", schema = "publico")
@JsonIdentityInfo(generator = ObjectIdGenerators.PropertyGenerator.class, property = "id")
public class SolicitudBiopsia_estadisticas implements java.io.Serializable {

    private long id;
    private Integer version;
    private HojaFrontal_estadisticas hojaFrontal;
    private DiagnosticoMedico_estadisticas diagnosticoMedico;
    private OrigenSolicitudAnatomia_estadisticas origenSolicitudAnatomia;
    private EstadoSolicitudAnatomia_estadisticas estadoSolicitudAnatomia;
    private SolicitudIntervencion_estadisticas solicitudIntervencion;
    private Medico_estadisticas medico;
    private Entidad_estadisticas entidad;
    private Date fechaCreada;
    private Date horaCreada;
    private int numero;
    private String motivoConsulta;
    private String hallazgos;
    private String tratamientoHormonal;
    private String observaciones;
    private Long cid;
    private long realizadoPorId;
    private Long medicoExternoId;
    private Date fechaLiberada;
    private Date horaLiberada;
    private Date fechaRechazada;
    private Date horaRechazada;
    private Date fechaAceptada;
    private Date horaAceptada;
    private String motivoRechazo;
    private Boolean eliminado;
    private Set<HojaConsulta_estadisticas> hojaConsultas = new HashSet<HojaConsulta_estadisticas>(
            0);

    public SolicitudBiopsia_estadisticas() {
    }

    public SolicitudBiopsia_estadisticas(long id,
                                         HojaFrontal_estadisticas hojaFrontal,
                                         EstadoSolicitudAnatomia_estadisticas estadoSolicitudAnatomia,
                                         Date fechaCreada, Date horaCreada, int numero, long realizadoPorId) {
        this.id = id;
        this.hojaFrontal = hojaFrontal;
        this.estadoSolicitudAnatomia = estadoSolicitudAnatomia;
        this.fechaCreada = fechaCreada;
        this.horaCreada = horaCreada;
        this.numero = numero;
        this.realizadoPorId = realizadoPorId;
    }

    public SolicitudBiopsia_estadisticas(long id,
                                         HojaFrontal_estadisticas hojaFrontal,
                                         DiagnosticoMedico_estadisticas diagnosticoMedico,
                                         OrigenSolicitudAnatomia_estadisticas origenSolicitudAnatomia,
                                         EstadoSolicitudAnatomia_estadisticas estadoSolicitudAnatomia,
                                         SolicitudIntervencion_estadisticas solicitudIntervencion,
                                         Medico_estadisticas medico, Entidad_estadisticas entidad,
                                         Date fechaCreada, Date horaCreada, int numero,
                                         String motivoConsulta, String hallazgos,
                                         String tratamientoHormonal, String observaciones, Long cid,
                                         long realizadoPorId, Long medicoExternoId, Date fechaLiberada,
                                         Date horaLiberada, Date fechaRechazada, Date horaRechazada,
                                         Date fechaAceptada, Date horaAceptada, String motivoRechazo,
                                         Boolean eliminado, Set<HojaConsulta_estadisticas> hojaConsultas) {
        this.id = id;
        this.hojaFrontal = hojaFrontal;
        this.diagnosticoMedico = diagnosticoMedico;
        this.origenSolicitudAnatomia = origenSolicitudAnatomia;
        this.estadoSolicitudAnatomia = estadoSolicitudAnatomia;
        this.solicitudIntervencion = solicitudIntervencion;
        this.medico = medico;
        this.entidad = entidad;
        this.fechaCreada = fechaCreada;
        this.horaCreada = horaCreada;
        this.numero = numero;
        this.motivoConsulta = motivoConsulta;
        this.hallazgos = hallazgos;
        this.tratamientoHormonal = tratamientoHormonal;
        this.observaciones = observaciones;
        this.cid = cid;
        this.realizadoPorId = realizadoPorId;
        this.medicoExternoId = medicoExternoId;
        this.fechaLiberada = fechaLiberada;
        this.horaLiberada = horaLiberada;
        this.fechaRechazada = fechaRechazada;
        this.horaRechazada = horaRechazada;
        this.fechaAceptada = fechaAceptada;
        this.horaAceptada = horaAceptada;
        this.motivoRechazo = motivoRechazo;
        this.eliminado = eliminado;
        this.hojaConsultas = hojaConsultas;
    }

    @Id
    @Column(name = "id", unique = true, nullable = false)
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    public long getId() {
        return this.id;
    }

    public void setId(long id) {
        this.id = id;
    }

    @Version
    @Column(name = "version")
    public Integer getVersion() {
        return this.version;
    }

    public void setVersion(Integer version) {
        this.version = version;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "hoja_frontal_id", nullable = false)

    public HojaFrontal_estadisticas getHojaFrontal() {
        return this.hojaFrontal;
    }

    public void setHojaFrontal(HojaFrontal_estadisticas hojaFrontal) {
        this.hojaFrontal = hojaFrontal;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "diagnostico_id")
    public DiagnosticoMedico_estadisticas getDiagnosticoMedico() {
        return this.diagnosticoMedico;
    }

    public void setDiagnosticoMedico(
            DiagnosticoMedico_estadisticas diagnosticoMedico) {
        this.diagnosticoMedico = diagnosticoMedico;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "origen_solicitud_id")
    public OrigenSolicitudAnatomia_estadisticas getOrigenSolicitudAnatomia() {
        return this.origenSolicitudAnatomia;
    }

    public void setOrigenSolicitudAnatomia(
            OrigenSolicitudAnatomia_estadisticas origenSolicitudAnatomia) {
        this.origenSolicitudAnatomia = origenSolicitudAnatomia;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "estado_id", nullable = false)

    public EstadoSolicitudAnatomia_estadisticas getEstadoSolicitudAnatomia() {
        return this.estadoSolicitudAnatomia;
    }

    public void setEstadoSolicitudAnatomia(
            EstadoSolicitudAnatomia_estadisticas estadoSolicitudAnatomia) {
        this.estadoSolicitudAnatomia = estadoSolicitudAnatomia;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "id_solicitud_intervencion")
    public SolicitudIntervencion_estadisticas getSolicitudIntervencion() {
        return this.solicitudIntervencion;
    }

    public void setSolicitudIntervencion(
            SolicitudIntervencion_estadisticas solicitudIntervencion) {
        this.solicitudIntervencion = solicitudIntervencion;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "medico_id")
    public Medico_estadisticas getMedico() {
        return this.medico;
    }

    public void setMedico(Medico_estadisticas medico) {
        this.medico = medico;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "entidad_id")
    public Entidad_estadisticas getEntidad() {
        return this.entidad;
    }

    public void setEntidad(Entidad_estadisticas entidad) {
        this.entidad = entidad;
    }

    @Temporal(TemporalType.DATE)
    @Column(name = "fecha_creada", nullable = false, length = 13)

    public Date getFechaCreada() {
        return this.fechaCreada;
    }

    public void setFechaCreada(Date fechaCreada) {
        this.fechaCreada = fechaCreada;
    }

    @Temporal(TemporalType.TIME)
    @Column(name = "hora_creada", nullable = false, length = 8)

    public Date getHoraCreada() {
        return this.horaCreada;
    }

    public void setHoraCreada(Date horaCreada) {
        this.horaCreada = horaCreada;
    }

    @Column(name = "numero", nullable = false)

    public int getNumero() {
        return this.numero;
    }

    public void setNumero(int numero) {
        this.numero = numero;
    }

    @Column(name = "motivo_consulta")
    public String getMotivoConsulta() {
        return this.motivoConsulta;
    }

    public void setMotivoConsulta(String motivoConsulta) {
        if (motivoConsulta != null)
            motivoConsulta = motivoConsulta.trim();
        this.motivoConsulta = motivoConsulta;
    }

    @Column(name = "hallazgos")
    public String getHallazgos() {
        return this.hallazgos;
    }

    public void setHallazgos(String hallazgos) {
        if (hallazgos != null)
            hallazgos = hallazgos.trim();
        this.hallazgos = hallazgos;
    }

    @Column(name = "tratamiento_hormonal")
    public String getTratamientoHormonal() {
        return this.tratamientoHormonal;
    }

    public void setTratamientoHormonal(String tratamientoHormonal) {
        if (tratamientoHormonal != null)
            tratamientoHormonal = tratamientoHormonal.trim();
        this.tratamientoHormonal = tratamientoHormonal;
    }

    @Column(name = "observaciones")
    public String getObservaciones() {
        return this.observaciones;
    }

    public void setObservaciones(String observaciones) {
        if (observaciones != null)
            observaciones = observaciones.trim();
        this.observaciones = observaciones;
    }

    @Column(name = "cid")
    public Long getCid() {
        return this.cid;
    }

    public void setCid(Long cid) {
        this.cid = cid;
    }

    @Column(name = "realizado_por_id", nullable = false)

    public long getRealizadoPorId() {
        return this.realizadoPorId;
    }

    public void setRealizadoPorId(long realizadoPorId) {
        this.realizadoPorId = realizadoPorId;
    }

    @Column(name = "medico_externo_id")
    public Long getMedicoExternoId() {
        return this.medicoExternoId;
    }

    public void setMedicoExternoId(Long medicoExternoId) {
        this.medicoExternoId = medicoExternoId;
    }

    @Temporal(TemporalType.DATE)
    @Column(name = "fecha_liberada", length = 13)
    public Date getFechaLiberada() {
        return this.fechaLiberada;
    }

    public void setFechaLiberada(Date fechaLiberada) {
        this.fechaLiberada = fechaLiberada;
    }

    @Temporal(TemporalType.TIME)
    @Column(name = "hora_liberada", length = 8)
    public Date getHoraLiberada() {
        return this.horaLiberada;
    }

    public void setHoraLiberada(Date horaLiberada) {
        this.horaLiberada = horaLiberada;
    }

    @Temporal(TemporalType.DATE)
    @Column(name = "fecha_rechazada", length = 13)
    public Date getFechaRechazada() {
        return this.fechaRechazada;
    }

    public void setFechaRechazada(Date fechaRechazada) {
        this.fechaRechazada = fechaRechazada;
    }

    @Temporal(TemporalType.TIME)
    @Column(name = "hora_rechazada", length = 8)
    public Date getHoraRechazada() {
        return this.horaRechazada;
    }

    public void setHoraRechazada(Date horaRechazada) {
        this.horaRechazada = horaRechazada;
    }

    @Temporal(TemporalType.DATE)
    @Column(name = "fecha_aceptada", length = 13)
    public Date getFechaAceptada() {
        return this.fechaAceptada;
    }

    public void setFechaAceptada(Date fechaAceptada) {
        this.fechaAceptada = fechaAceptada;
    }

    @Temporal(TemporalType.TIME)
    @Column(name = "hora_aceptada", length = 8)
    public Date getHoraAceptada() {
        return this.horaAceptada;
    }

    public void setHoraAceptada(Date horaAceptada) {
        this.horaAceptada = horaAceptada;
    }

    @Column(name = "motivo_rechazo")
    public String getMotivoRechazo() {
        return this.motivoRechazo;
    }

    public void setMotivoRechazo(String motivoRechazo) {
        if (motivoRechazo != null)
            motivoRechazo = motivoRechazo.trim();
        this.motivoRechazo = motivoRechazo;
    }

    @Column(name = "eliminado")
    public Boolean getEliminado() {
        return this.eliminado;
    }

    public void setEliminado(Boolean eliminado) {
        this.eliminado = eliminado;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "solicitudBiopsia")
    public Set<HojaConsulta_estadisticas> getHojaConsultas() {
        return this.hojaConsultas;
    }

    public void setHojaConsultas(Set<HojaConsulta_estadisticas> hojaConsultas) {
        this.hojaConsultas = hojaConsultas;
    }

}
