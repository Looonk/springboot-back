package cu.uci.cesim.hce_back.estadisticas.model.entity.auto;

import com.fasterxml.jackson.annotation.JsonIdentityInfo;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.ObjectIdGenerators;

import javax.persistence.*;
import java.util.HashSet;
import java.util.Set;

// Generated Apr 18, 2012 10:46:48 AM by Hibernate Tools 3.4.0.CR1


/**
 * Especialidad generated by hbm2java
 */
@Entity
@Table(name = "especialidad", schema = "comun", uniqueConstraints = @UniqueConstraint(columnNames = "nombre"))
@JsonIdentityInfo(generator = ObjectIdGenerators.PropertyGenerator.class, property = "id")
public class Especialidad_estadisticas implements java.io.Serializable {

    private long id;
    private Integer version;
    private Servicio_estadisticas servicio;
    private String nombre;
    private Boolean eliminado;
    private Long cid;
    private String codigo;
    private boolean quirurgica;
    @JsonIgnore
    private Set<HojaConsulta_estadisticas> hojaConsultas = new HashSet<HojaConsulta_estadisticas>(
            0);
    @JsonIgnore
    private Set<Referencias_estadisticas> referenciases = new HashSet<Referencias_estadisticas>(
            0);
    @JsonIgnore
    private Set<EspecialidadInEntidad_estadisticas> especialidadInEntidads = new HashSet<EspecialidadInEntidad_estadisticas>(
            0);

    public Especialidad_estadisticas() {
    }

    public Especialidad_estadisticas(long id, Servicio_estadisticas servicio,
                                     String nombre, boolean quirurgica) {
        this.id = id;
        this.servicio = servicio;
        this.nombre = nombre;
        this.quirurgica = quirurgica;
    }

    public Especialidad_estadisticas(long id, Servicio_estadisticas servicio,
                                     String nombre, Boolean eliminado, Long cid, String codigo,
                                     boolean quirurgica, Set<HojaConsulta_estadisticas> hojaConsultas,
                                     Set<Referencias_estadisticas> referenciases,
                                     Set<EspecialidadInEntidad_estadisticas> especialidadInEntidads) {
        this.id = id;
        this.servicio = servicio;
        this.nombre = nombre;
        this.eliminado = eliminado;
        this.cid = cid;
        this.codigo = codigo;
        this.quirurgica = quirurgica;
        this.hojaConsultas = hojaConsultas;
        this.referenciases = referenciases;
        this.especialidadInEntidads = especialidadInEntidads;
    }

    @Id
    @Column(name = "id", unique = true, nullable = false)
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    public long getId() {
        return this.id;
    }

    public void setId(long id) {
        this.id = id;
    }

    @Version
    @Column(name = "version")
    public Integer getVersion() {
        return this.version;
    }

    public void setVersion(Integer version) {
        this.version = version;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "id_servicio", nullable = false)

    public Servicio_estadisticas getServicio() {
        return this.servicio;
    }

    public void setServicio(Servicio_estadisticas servicio) {
        this.servicio = servicio;
    }

    @Column(name = "nombre", unique = true, nullable = false)

    public String getNombre() {
        return this.nombre;
    }

    public void setNombre(String nombre) {
        if (nombre != null)
            nombre = nombre.trim();
        this.nombre = nombre;
    }

    @Column(name = "eliminado")
    public Boolean getEliminado() {
        return this.eliminado;
    }

    public void setEliminado(Boolean eliminado) {
        this.eliminado = eliminado;
    }

    @Column(name = "cid")
    public Long getCid() {
        return this.cid;
    }

    public void setCid(Long cid) {
        this.cid = cid;
    }

    @Column(name = "codigo")
    public String getCodigo() {
        return this.codigo;
    }

    public void setCodigo(String codigo) {
        if (codigo != null)
            codigo = codigo.trim();
        this.codigo = codigo;
    }

    @Column(name = "quirurgica", nullable = false)

    public boolean isQuirurgica() {
        return this.quirurgica;
    }

    public void setQuirurgica(boolean quirurgica) {
        this.quirurgica = quirurgica;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "especialidad")
    public Set<HojaConsulta_estadisticas> getHojaConsultas() {
        return this.hojaConsultas;
    }

    public void setHojaConsultas(Set<HojaConsulta_estadisticas> hojaConsultas) {
        this.hojaConsultas = hojaConsultas;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "especialidad")
    public Set<Referencias_estadisticas> getReferenciases() {
        return this.referenciases;
    }

    public void setReferenciases(Set<Referencias_estadisticas> referenciases) {
        this.referenciases = referenciases;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "especialidad")
    public Set<EspecialidadInEntidad_estadisticas> getEspecialidadInEntidads() {
        return this.especialidadInEntidads;
    }

    public void setEspecialidadInEntidads(
            Set<EspecialidadInEntidad_estadisticas> especialidadInEntidads) {
        this.especialidadInEntidads = especialidadInEntidads;
    }

}
