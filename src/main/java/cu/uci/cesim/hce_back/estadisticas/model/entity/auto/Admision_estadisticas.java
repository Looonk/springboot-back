package cu.uci.cesim.hce_back.estadisticas.model.entity.auto;

import com.fasterxml.jackson.annotation.JsonIdentityInfo;
import com.fasterxml.jackson.annotation.ObjectIdGenerators;

import javax.persistence.*;
import java.math.BigDecimal;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;

// Generated Apr 18, 2012 10:46:48 AM by Hibernate Tools 3.4.0.CR1

/**
 * Admision generated by hbm2java
 */
@Entity
@Table(name = "admision", schema = "hc_local", uniqueConstraints = @UniqueConstraint(columnNames = "id_orden_admision"))
@JsonIdentityInfo(generator = ObjectIdGenerators.PropertyGenerator.class, property = "id")
public class Admision_estadisticas implements java.io.Serializable {

    private long id;
    private Integer version;
    private Funcionalidad_estadisticas funcionalidad;
    private OrdenAdmision_estadisticas ordenAdmision;
    private Servicio_estadisticas servicioByIdServicioUbicacion;
    private Servicio_estadisticas servicioByIdServicioUbicacionEntrada;
    private Cama_estadisticas cama;
    private Servicio_estadisticas servicioByIdServicioTratante;
    private HojaFrontal_estadisticas hojaFrontal;
    private Servicio_estadisticas servicioByIdServicioTratanteEntrada;
    private Date fecha;
    private String observaciones;
    private long idUsuario;
    private Boolean eliminado;
    private Long cid;
    private BigDecimal pesoIngreso;
    private Long idEstadoEvolucionPaciente;
    private Integer numeroCaso;
    private Date hora;
    private Set<OrdenTransferencia_estadisticas> ordenTransferencias = new HashSet<OrdenTransferencia_estadisticas>(
            0);
    private Set<Cama_estadisticas> camas = new HashSet<Cama_estadisticas>(0);
    private Set<Egreso_estadisticas> egresos = new HashSet<Egreso_estadisticas>(
            0);

    public Admision_estadisticas() {
    }

    public Admision_estadisticas(long id,
                                 OrdenAdmision_estadisticas ordenAdmision, Cama_estadisticas cama,
                                 HojaFrontal_estadisticas hojaFrontal, Date fecha, long idUsuario) {
        this.id = id;
        this.ordenAdmision = ordenAdmision;
        this.cama = cama;
        this.hojaFrontal = hojaFrontal;
        this.fecha = fecha;
        this.idUsuario = idUsuario;
    }

    public Admision_estadisticas(long id,
                                 Funcionalidad_estadisticas funcionalidad,
                                 OrdenAdmision_estadisticas ordenAdmision,
                                 Servicio_estadisticas servicioByIdServicioUbicacion,
                                 Servicio_estadisticas servicioByIdServicioUbicacionEntrada,
                                 Cama_estadisticas cama,
                                 Servicio_estadisticas servicioByIdServicioTratante,
                                 HojaFrontal_estadisticas hojaFrontal,
                                 Servicio_estadisticas servicioByIdServicioTratanteEntrada,
                                 Date fecha, String observaciones, long idUsuario,
                                 Boolean eliminado, Long cid, BigDecimal pesoIngreso,
                                 Long idEstadoEvolucionPaciente, Integer numeroCaso, Date hora,
                                 Set<OrdenTransferencia_estadisticas> ordenTransferencias,
                                 Set<Cama_estadisticas> camas, Set<Egreso_estadisticas> egresos) {
        this.id = id;
        this.funcionalidad = funcionalidad;
        this.ordenAdmision = ordenAdmision;
        this.servicioByIdServicioUbicacion = servicioByIdServicioUbicacion;
        this.servicioByIdServicioUbicacionEntrada = servicioByIdServicioUbicacionEntrada;
        this.cama = cama;
        this.servicioByIdServicioTratante = servicioByIdServicioTratante;
        this.hojaFrontal = hojaFrontal;
        this.servicioByIdServicioTratanteEntrada = servicioByIdServicioTratanteEntrada;
        this.fecha = fecha;
        this.observaciones = observaciones;
        this.idUsuario = idUsuario;
        this.eliminado = eliminado;
        this.cid = cid;
        this.pesoIngreso = pesoIngreso;
        this.idEstadoEvolucionPaciente = idEstadoEvolucionPaciente;
        this.numeroCaso = numeroCaso;
        this.hora = hora;
        this.ordenTransferencias = ordenTransferencias;
        this.camas = camas;
        this.egresos = egresos;
    }

    @Id
    @Column(name = "id", unique = true, nullable = false)
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    public long getId() {
        return this.id;
    }

    public void setId(long id) {
        this.id = id;
    }

    @Version
    @Column(name = "version")
    public Integer getVersion() {
        return this.version;
    }

    public void setVersion(Integer version) {
        this.version = version;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "id_entidad")
    public Funcionalidad_estadisticas getFuncionalidad() {
        return this.funcionalidad;
    }

    public void setFuncionalidad(Funcionalidad_estadisticas funcionalidad) {
        this.funcionalidad = funcionalidad;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "id_orden_admision", unique = true, nullable = false)
    public OrdenAdmision_estadisticas getOrdenAdmision() {
        return this.ordenAdmision;
    }

    public void setOrdenAdmision(OrdenAdmision_estadisticas ordenAdmision) {
        this.ordenAdmision = ordenAdmision;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "id_servicio_ubicacion")
    public Servicio_estadisticas getServicioByIdServicioUbicacion() {
        return this.servicioByIdServicioUbicacion;
    }

    public void setServicioByIdServicioUbicacion(
            Servicio_estadisticas servicioByIdServicioUbicacion) {
        this.servicioByIdServicioUbicacion = servicioByIdServicioUbicacion;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "id_servicio_ubicacion_entrada")
    public Servicio_estadisticas getServicioByIdServicioUbicacionEntrada() {
        return this.servicioByIdServicioUbicacionEntrada;
    }

    public void setServicioByIdServicioUbicacionEntrada(
            Servicio_estadisticas servicioByIdServicioUbicacionEntrada) {
        this.servicioByIdServicioUbicacionEntrada = servicioByIdServicioUbicacionEntrada;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "id_cama", nullable = false)
    public Cama_estadisticas getCama() {
        return this.cama;
    }

    public void setCama(Cama_estadisticas cama) {
        this.cama = cama;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "id_servicio_tratante")
    public Servicio_estadisticas getServicioByIdServicioTratante() {
        return this.servicioByIdServicioTratante;
    }

    public void setServicioByIdServicioTratante(
            Servicio_estadisticas servicioByIdServicioTratante) {
        this.servicioByIdServicioTratante = servicioByIdServicioTratante;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "id_hoja_frontal", nullable = false)
    public HojaFrontal_estadisticas getHojaFrontal() {
        return this.hojaFrontal;
    }

    public void setHojaFrontal(HojaFrontal_estadisticas hojaFrontal) {
        this.hojaFrontal = hojaFrontal;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "id_servicio_tratante_entrada")
    public Servicio_estadisticas getServicioByIdServicioTratanteEntrada() {
        return this.servicioByIdServicioTratanteEntrada;
    }

    public void setServicioByIdServicioTratanteEntrada(
            Servicio_estadisticas servicioByIdServicioTratanteEntrada) {
        this.servicioByIdServicioTratanteEntrada = servicioByIdServicioTratanteEntrada;
    }

    @Temporal(TemporalType.DATE)
    @Column(name = "fecha", nullable = false, length = 13)
    public Date getFecha() {
        return this.fecha;
    }

    public void setFecha(Date fecha) {
        this.fecha = fecha;
    }

    @Column(name = "observaciones")
    public String getObservaciones() {
        return this.observaciones;
    }

    public void setObservaciones(String observaciones) {
        if (observaciones != null)
            observaciones = observaciones.trim();
        this.observaciones = observaciones;
    }

    @Column(name = "id_usuario", nullable = false)
    public long getIdUsuario() {
        return this.idUsuario;
    }

    public void setIdUsuario(long idUsuario) {
        this.idUsuario = idUsuario;
    }

    @Column(name = "eliminado")
    public Boolean getEliminado() {
        return this.eliminado;
    }

    public void setEliminado(Boolean eliminado) {
        this.eliminado = eliminado;
    }

    @Column(name = "cid")
    public Long getCid() {
        return this.cid;
    }

    public void setCid(Long cid) {
        this.cid = cid;
    }

    @Column(name = "peso_ingreso", precision = 131089, scale = 0)
    public BigDecimal getPesoIngreso() {
        return this.pesoIngreso;
    }

    public void setPesoIngreso(BigDecimal pesoIngreso) {
        this.pesoIngreso = pesoIngreso;
    }

    @Column(name = "id_estado_evolucion_paciente")
    public Long getIdEstadoEvolucionPaciente() {
        return this.idEstadoEvolucionPaciente;
    }

    public void setIdEstadoEvolucionPaciente(Long idEstadoEvolucionPaciente) {
        this.idEstadoEvolucionPaciente = idEstadoEvolucionPaciente;
    }

    @Column(name = "numero_caso")
    public Integer getNumeroCaso() {
        return this.numeroCaso;
    }

    public void setNumeroCaso(Integer numeroCaso) {
        this.numeroCaso = numeroCaso;
    }

    @Temporal(TemporalType.TIME)
    @Column(name = "hora", length = 8)
    public Date getHora() {
        return this.hora;
    }

    public void setHora(Date hora) {
        this.hora = hora;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "admision")
    public Set<OrdenTransferencia_estadisticas> getOrdenTransferencias() {
        return this.ordenTransferencias;
    }

    public void setOrdenTransferencias(
            Set<OrdenTransferencia_estadisticas> ordenTransferencias) {
        this.ordenTransferencias = ordenTransferencias;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "admision")
    public Set<Cama_estadisticas> getCamas() {
        return this.camas;
    }

    public void setCamas(Set<Cama_estadisticas> camas) {
        this.camas = camas;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "admision")
    public Set<Egreso_estadisticas> getEgresos() {
        return this.egresos;
    }

    public void setEgresos(Set<Egreso_estadisticas> egresos) {
        this.egresos = egresos;
    }

}
