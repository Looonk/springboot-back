package cu.uci.cesim.hce_back.estadisticas.model.entity.auto;

import com.fasterxml.jackson.annotation.JsonIdentityInfo;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.ObjectIdGenerators;
import org.hibernate.validator.constraints.Length;

import javax.persistence.*;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;

// Generated Apr 18, 2012 10:46:48 AM by Hibernate Tools 3.4.0.CR1


/**
 * Entidad generated by hbm2java
 */
@Entity
@Table(name = "entidad", schema = "comun", uniqueConstraints = @UniqueConstraint(columnNames = "nombre"))
@JsonIdentityInfo(generator = ObjectIdGenerators.PropertyGenerator.class, property = "id")
public class Entidad_estadisticas implements java.io.Serializable {

    private Long id;
    private Integer version;
    @JsonIgnore
    private TipoEntidad_estadisticas tipoEntidad;
    @JsonIgnore
    private Municipio_estadisticas municipio;
    @JsonIgnore
    private Localidad_estadisticas localidad;
    @JsonIgnore
    private Estado_estadisticas estado;
    private String nombre;
    private String direccion;
    private String telefonos;
    private String fax;
    private String correo;
    private Date fechaApertura;
    private Integer camasArquitectonicas;
    private Integer camasPresupuestadas;
    private boolean esPublico;
    private Boolean eliminado;
    private Long cid;
    private String logo;
    private boolean perteneceARhio;
    private Long idCategoriaEntidad;
    private String idInstanciaHis;
    private Integer camasFuncionales;
    private Integer cantidadMedicos;
    private Integer cantidadEnfermeros;
    private Integer cantidadTrabajadores;
    private Long idRegionPdvsa;
    private Long idRis;
    @JsonIgnore
    private Set<TipersStatInEntidad_estadisticas> tipersStatInEntidads = new HashSet<TipersStatInEntidad_estadisticas>(
            0);
    @JsonIgnore
    private Set<ServicioInEntidad_estadisticas> servicioInEntidads = new HashSet<ServicioInEntidad_estadisticas>(
            0);
    @JsonIgnore
    private Set<Referencias_estadisticas> referenciasesForIdHospitalOrigen = new HashSet<Referencias_estadisticas>(
            0);
    @JsonIgnore
    private Set<Referencias_estadisticas> referenciasesForIdHospitalDestino = new HashSet<Referencias_estadisticas>(
            0);
    @JsonIgnore
    private Set<TpobPinfluAgeInEnt_estadisticas> tpobPinfluAgeInEnts = new HashSet<TpobPinfluAgeInEnt_estadisticas>(
            0);
    @JsonIgnore
    private Set<HojaConsulta_estadisticas> hojaConsultas = new HashSet<HojaConsulta_estadisticas>(
            0);
    @JsonIgnore
    private Set<MedicoInEntidad_estadisticas> medicoInEntidads = new HashSet<MedicoInEntidad_estadisticas>(
            0);
    @JsonIgnore
    private Set<SolicitudCitologia_estadisticas> solicitudCitologias = new HashSet<SolicitudCitologia_estadisticas>(
            0);
    @JsonIgnore
    private Set<Funcionalidad_estadisticas> funcionalidads = new HashSet<Funcionalidad_estadisticas>(
            0);
    @JsonIgnore
    private Set<PoblacionStatus_estadisticas> poblacionStatuses = new HashSet<PoblacionStatus_estadisticas>(
            0);
    @JsonIgnore
    private Set<SolicitudAutopsia_estadisticas> solicitudAutopsias = new HashSet<SolicitudAutopsia_estadisticas>(
            0);
    @JsonIgnore
    private Set<Ubicacion_estadisticas> ubicacions = new HashSet<Ubicacion_estadisticas>(
            0);
    @JsonIgnore
    private Set<SolicitudAnalisisLab_estadisticas> solicitudAnalisisLabs = new HashSet<SolicitudAnalisisLab_estadisticas>(
            0);
    @JsonIgnore
    private Set<OrigenSolicitudAnatomia_estadisticas> origenSolicitudAnatomias = new HashSet<OrigenSolicitudAnatomia_estadisticas>(
            0);
    @JsonIgnore
    private Set<CamasHistorico_estadisticas> camasHistoricos = new HashSet<CamasHistorico_estadisticas>(
            0);
    @JsonIgnore
    private Set<EnfermeraInEntidad_estadisticas> enfermeraInEntidads = new HashSet<EnfermeraInEntidad_estadisticas>(
            0);
    @JsonIgnore
    private Set<ServicioInEntidad_estadisticas> servicioInEntidads_1 = new HashSet<ServicioInEntidad_estadisticas>(
            0);
    @JsonIgnore
    private Set<PoblacionAreaInfluencia_estadisticas> poblacionAreaInfluencias = new HashSet<PoblacionAreaInfluencia_estadisticas>(
            0);
    @JsonIgnore
    private Set<SolicitudCitologiaGinecologica_estadisticas> solicitudCitologiaGinecologicas = new HashSet<SolicitudCitologiaGinecologica_estadisticas>(
            0);
    @JsonIgnore
    private Set<OrdenAdmision_estadisticas> ordenAdmisions = new HashSet<OrdenAdmision_estadisticas>(
            0);
    @JsonIgnore
    private Set<DepartamentoInEntidad_estadisticas> departamentoInEntidads = new HashSet<DepartamentoInEntidad_estadisticas>(
            0);
    @JsonIgnore
    private Set<EspecialidadInEntidad_estadisticas> especialidadInEntidads = new HashSet<EspecialidadInEntidad_estadisticas>(
            0);
    @JsonIgnore
    private Set<TpobPinfluSexInEnt_estadisticas> tpobPinfluSexInEnts = new HashSet<TpobPinfluSexInEnt_estadisticas>(
            0);
    @JsonIgnore
    private Set<TipoPoblacion_estadisticas> tipoPoblacions = new HashSet<TipoPoblacion_estadisticas>(
            0);
    @JsonIgnore
    private Set<PersonalHistorico_estadisticas> personalHistoricos = new HashSet<PersonalHistorico_estadisticas>(
            0);
    @JsonIgnore
    private Set<SolicitudInterconsulta_estadisticas> solicitudInterconsultas = new HashSet<SolicitudInterconsulta_estadisticas>(
            0);
    @JsonIgnore
    private Set<SolicitudBiopsia_estadisticas> solicitudBiopsias = new HashSet<SolicitudBiopsia_estadisticas>(
            0);

    public Entidad_estadisticas() {
    }

    public Entidad_estadisticas(Long id, TipoEntidad_estadisticas tipoEntidad,
                                Municipio_estadisticas municipio, Estado_estadisticas estado,
                                boolean esPublico, boolean perteneceARhio) {
        this.id = id;
        this.tipoEntidad = tipoEntidad;
        this.municipio = municipio;
        this.estado = estado;
        this.esPublico = esPublico;
        this.perteneceARhio = perteneceARhio;
    }

    public Entidad_estadisticas(
            Long id,
            TipoEntidad_estadisticas tipoEntidad,
            Municipio_estadisticas municipio,
            Localidad_estadisticas localidad,
            Estado_estadisticas estado,
            String nombre,
            String direccion,
            String telefonos,
            String fax,
            String correo,
            Date fechaApertura,
            Integer camasArquitectonicas,
            Integer camasPresupuestadas,
            boolean esPublico,
            Boolean eliminado,
            Long cid,
            String logo,
            boolean perteneceARhio,
            Long idCategoriaEntidad,
            String idInstanciaHis,
            Integer camasFuncionales,
            Integer cantidadMedicos,
            Integer cantidadEnfermeros,
            Integer cantidadTrabajadores,
            Long idRegionPdvsa,
            Long idRis,
            Set<TipersStatInEntidad_estadisticas> tipersStatInEntidads,
            Set<ServicioInEntidad_estadisticas> servicioInEntidads,
            Set<Referencias_estadisticas> referenciasesForIdHospitalOrigen,
            Set<Referencias_estadisticas> referenciasesForIdHospitalDestino,
            Set<TpobPinfluAgeInEnt_estadisticas> tpobPinfluAgeInEnts,
            Set<HojaConsulta_estadisticas> hojaConsultas,
            Set<MedicoInEntidad_estadisticas> medicoInEntidads,
            Set<SolicitudCitologia_estadisticas> solicitudCitologias,
            Set<Funcionalidad_estadisticas> funcionalidads,
            Set<PoblacionStatus_estadisticas> poblacionStatuses,
            Set<SolicitudAutopsia_estadisticas> solicitudAutopsias,
            Set<Ubicacion_estadisticas> ubicacions,
            Set<SolicitudAnalisisLab_estadisticas> solicitudAnalisisLabs,
            Set<OrigenSolicitudAnatomia_estadisticas> origenSolicitudAnatomias,
            Set<CamasHistorico_estadisticas> camasHistoricos,
            Set<EnfermeraInEntidad_estadisticas> enfermeraInEntidads,
            Set<ServicioInEntidad_estadisticas> servicioInEntidads_1,
            Set<PoblacionAreaInfluencia_estadisticas> poblacionAreaInfluencias,
            Set<SolicitudCitologiaGinecologica_estadisticas> solicitudCitologiaGinecologicas,
            Set<OrdenAdmision_estadisticas> ordenAdmisions,
            Set<DepartamentoInEntidad_estadisticas> departamentoInEntidads,
            Set<EspecialidadInEntidad_estadisticas> especialidadInEntidads,
            Set<TpobPinfluSexInEnt_estadisticas> tpobPinfluSexInEnts,
            Set<TipoPoblacion_estadisticas> tipoPoblacions,
            Set<PersonalHistorico_estadisticas> personalHistoricos,
            Set<SolicitudInterconsulta_estadisticas> solicitudInterconsultas,
            Set<SolicitudBiopsia_estadisticas> solicitudBiopsias) {
        this.id = id;
        this.tipoEntidad = tipoEntidad;
        this.municipio = municipio;
        this.localidad = localidad;
        this.estado = estado;
        this.nombre = nombre;
        this.direccion = direccion;
        this.telefonos = telefonos;
        this.fax = fax;
        this.correo = correo;
        this.fechaApertura = fechaApertura;
        this.camasArquitectonicas = camasArquitectonicas;
        this.camasPresupuestadas = camasPresupuestadas;
        this.esPublico = esPublico;
        this.eliminado = eliminado;
        this.cid = cid;
        this.logo = logo;
        this.perteneceARhio = perteneceARhio;
        this.idCategoriaEntidad = idCategoriaEntidad;
        this.idInstanciaHis = idInstanciaHis;
        this.camasFuncionales = camasFuncionales;
        this.cantidadMedicos = cantidadMedicos;
        this.cantidadEnfermeros = cantidadEnfermeros;
        this.cantidadTrabajadores = cantidadTrabajadores;
        this.idRegionPdvsa = idRegionPdvsa;
        this.idRis = idRis;
        this.tipersStatInEntidads = tipersStatInEntidads;
        this.servicioInEntidads = servicioInEntidads;
        this.referenciasesForIdHospitalOrigen = referenciasesForIdHospitalOrigen;
        this.referenciasesForIdHospitalDestino = referenciasesForIdHospitalDestino;
        this.tpobPinfluAgeInEnts = tpobPinfluAgeInEnts;
        this.hojaConsultas = hojaConsultas;
        this.medicoInEntidads = medicoInEntidads;
        this.solicitudCitologias = solicitudCitologias;
        this.funcionalidads = funcionalidads;
        this.poblacionStatuses = poblacionStatuses;
        this.solicitudAutopsias = solicitudAutopsias;
        this.ubicacions = ubicacions;
        this.solicitudAnalisisLabs = solicitudAnalisisLabs;
        this.origenSolicitudAnatomias = origenSolicitudAnatomias;
        this.camasHistoricos = camasHistoricos;
        this.enfermeraInEntidads = enfermeraInEntidads;
        this.servicioInEntidads_1 = servicioInEntidads_1;
        this.poblacionAreaInfluencias = poblacionAreaInfluencias;
        this.solicitudCitologiaGinecologicas = solicitudCitologiaGinecologicas;
        this.ordenAdmisions = ordenAdmisions;
        this.departamentoInEntidads = departamentoInEntidads;
        this.especialidadInEntidads = especialidadInEntidads;
        this.tpobPinfluSexInEnts = tpobPinfluSexInEnts;
        this.tipoPoblacions = tipoPoblacions;
        this.personalHistoricos = personalHistoricos;
        this.solicitudInterconsultas = solicitudInterconsultas;
        this.solicitudBiopsias = solicitudBiopsias;
    }

    @Id
    @Column(name = "id", unique = true, nullable = false)
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    public Long getId() {
        return this.id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    @Version
    @Column(name = "version")
    public Integer getVersion() {
        return this.version;
    }

    public void setVersion(Integer version) {
        this.version = version;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "id_tipo_hospital", nullable = false)
    @JsonIgnoreProperties("tipoEntidad")
    public TipoEntidad_estadisticas getTipoEntidad() {
        return this.tipoEntidad;
    }

    public void setTipoEntidad(TipoEntidad_estadisticas tipoEntidad) {
        this.tipoEntidad = tipoEntidad;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "id_municipio", nullable = false)
    @JsonIgnoreProperties("municipio")
    public Municipio_estadisticas getMunicipio() {
        return this.municipio;
    }

    public void setMunicipio(Municipio_estadisticas municipio) {
        this.municipio = municipio;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "id_localidad")
    @JsonIgnoreProperties("localidad")
    public Localidad_estadisticas getLocalidad() {
        return this.localidad;
    }

    public void setLocalidad(Localidad_estadisticas localidad) {
        this.localidad = localidad;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "id_estado", nullable = false)
    @JsonIgnoreProperties("estado")
    public Estado_estadisticas getEstado() {
        return this.estado;
    }

    public void setEstado(Estado_estadisticas estado) {
        this.estado = estado;
    }

    @Column(name = "nombre", unique = true)
    public String getNombre() {
        return this.nombre;
    }

    public void setNombre(String nombre) {
        if (nombre != null)
            nombre = nombre.trim();
        this.nombre = nombre;
    }

    @Column(name = "direccion", length = 50)
    @Length(max = 50)
    public String getDireccion() {
        return this.direccion;
    }

    public void setDireccion(String direccion) {
        if (direccion != null)
            direccion = direccion.trim();
        this.direccion = direccion;
    }

    @Column(name = "telefonos", length = 15)
    @Length(max = 15)
    public String getTelefonos() {
        return this.telefonos;
    }

    public void setTelefonos(String telefonos) {
        if (telefonos != null)
            telefonos = telefonos.trim();
        this.telefonos = telefonos;
    }

    @Column(name = "fax", length = 15)
    @Length(max = 15)
    public String getFax() {
        return this.fax;
    }

    public void setFax(String fax) {
        if (fax != null)
            fax = fax.trim();
        this.fax = fax;
    }

    @Column(name = "correo", length = 20)
    @Length(max = 20)
    public String getCorreo() {
        return this.correo;
    }

    public void setCorreo(String correo) {
        if (correo != null)
            correo = correo.trim();
        this.correo = correo;
    }

    @Temporal(TemporalType.DATE)
    @Column(name = "fecha_apertura", length = 13)
    public Date getFechaApertura() {
        return this.fechaApertura;
    }

    public void setFechaApertura(Date fechaApertura) {
        this.fechaApertura = fechaApertura;
    }

    @Column(name = "camas_arquitectonicas")
    public Integer getCamasArquitectonicas() {
        return this.camasArquitectonicas;
    }

    public void setCamasArquitectonicas(Integer camasArquitectonicas) {
        this.camasArquitectonicas = camasArquitectonicas;
    }

    @Column(name = "camas_presupuestadas")
    public Integer getCamasPresupuestadas() {
        return this.camasPresupuestadas;
    }

    public void setCamasPresupuestadas(Integer camasPresupuestadas) {
        this.camasPresupuestadas = camasPresupuestadas;
    }

    @Column(name = "es_publico", nullable = false)

    public boolean isEsPublico() {
        return this.esPublico;
    }

    public void setEsPublico(boolean esPublico) {
        this.esPublico = esPublico;
    }

    @Column(name = "eliminado")
    public Boolean getEliminado() {
        return this.eliminado;
    }

    public void setEliminado(Boolean eliminado) {
        this.eliminado = eliminado;
    }

    @Column(name = "cid")
    public Long getCid() {
        return this.cid;
    }

    public void setCid(Long cid) {
        this.cid = cid;
    }

    @Column(name = "logo", length = 30)
    @Length(max = 30)
    public String getLogo() {
        return this.logo;
    }

    public void setLogo(String logo) {
        if (logo != null)
            logo = logo.trim();
        this.logo = logo;
    }

    @Column(name = "pertenece_a_rhio", nullable = false)
    public boolean isPerteneceARhio() {
        return this.perteneceARhio;
    }

    public void setPerteneceARhio(boolean perteneceARhio) {
        this.perteneceARhio = perteneceARhio;
    }

    @Column(name = "id_categoria_entidad")
    public Long getIdCategoriaEntidad() {
        return this.idCategoriaEntidad;
    }

    public void setIdCategoriaEntidad(Long idCategoriaEntidad) {
        this.idCategoriaEntidad = idCategoriaEntidad;
    }

    @Column(name = "id_instancia_his")
    public String getIdInstanciaHis() {
        return this.idInstanciaHis;
    }

    public void setIdInstanciaHis(String idInstanciaHis) {
        if (idInstanciaHis != null)
            idInstanciaHis = idInstanciaHis.trim();
        this.idInstanciaHis = idInstanciaHis;
    }

    @Column(name = "camas_funcionales")
    public Integer getCamasFuncionales() {
        return this.camasFuncionales;
    }

    public void setCamasFuncionales(Integer camasFuncionales) {
        this.camasFuncionales = camasFuncionales;
    }

    @Column(name = "cantidad_medicos")
    public Integer getCantidadMedicos() {
        return this.cantidadMedicos;
    }

    public void setCantidadMedicos(Integer cantidadMedicos) {
        this.cantidadMedicos = cantidadMedicos;
    }

    @Column(name = "cantidad_enfermeros")
    public Integer getCantidadEnfermeros() {
        return this.cantidadEnfermeros;
    }

    public void setCantidadEnfermeros(Integer cantidadEnfermeros) {
        this.cantidadEnfermeros = cantidadEnfermeros;
    }

    @Column(name = "cantidad_trabajadores")
    public Integer getCantidadTrabajadores() {
        return this.cantidadTrabajadores;
    }

    public void setCantidadTrabajadores(Integer cantidadTrabajadores) {
        this.cantidadTrabajadores = cantidadTrabajadores;
    }

    @Column(name = "id_region_pdvsa")
    public Long getIdRegionPdvsa() {
        return this.idRegionPdvsa;
    }

    public void setIdRegionPdvsa(Long idRegionPdvsa) {
        this.idRegionPdvsa = idRegionPdvsa;
    }

    @Column(name = "id_ris")
    public Long getIdRis() {
        return this.idRis;
    }

    public void setIdRis(Long idRis) {
        this.idRis = idRis;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "entidad")
    @JsonIgnoreProperties("tipersStatInEntidads")
    public Set<TipersStatInEntidad_estadisticas> getTipersStatInEntidads() {
        return this.tipersStatInEntidads;
    }

    public void setTipersStatInEntidads(
            Set<TipersStatInEntidad_estadisticas> tipersStatInEntidads) {
        this.tipersStatInEntidads = tipersStatInEntidads;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "entidad")
    @JsonIgnoreProperties("servicioInEntidads")
    public Set<ServicioInEntidad_estadisticas> getServicioInEntidads() {
        return this.servicioInEntidads;
    }

    public void setServicioInEntidads(
            Set<ServicioInEntidad_estadisticas> servicioInEntidads) {
        this.servicioInEntidads = servicioInEntidads;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "entidadByIdHospitalOrigen")
    @JsonIgnoreProperties("referenciasesForIdHospitalOrigen")
    public Set<Referencias_estadisticas> getReferenciasesForIdHospitalOrigen() {
        return this.referenciasesForIdHospitalOrigen;
    }

    public void setReferenciasesForIdHospitalOrigen(
            Set<Referencias_estadisticas> referenciasesForIdHospitalOrigen) {
        this.referenciasesForIdHospitalOrigen = referenciasesForIdHospitalOrigen;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "entidadByIdHospitalDestino")
    @JsonIgnoreProperties("referenciasesForIdHospitalDestino")
    public Set<Referencias_estadisticas> getReferenciasesForIdHospitalDestino() {
        return this.referenciasesForIdHospitalDestino;
    }

    public void setReferenciasesForIdHospitalDestino(
            Set<Referencias_estadisticas> referenciasesForIdHospitalDestino) {
        this.referenciasesForIdHospitalDestino = referenciasesForIdHospitalDestino;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "entidad")
    @JsonIgnoreProperties("tpobPinfluAgeInEnts")
    public Set<TpobPinfluAgeInEnt_estadisticas> getTpobPinfluAgeInEnts() {
        return this.tpobPinfluAgeInEnts;
    }

    public void setTpobPinfluAgeInEnts(
            Set<TpobPinfluAgeInEnt_estadisticas> tpobPinfluAgeInEnts) {
        this.tpobPinfluAgeInEnts = tpobPinfluAgeInEnts;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "entidad")
    @JsonIgnoreProperties("hojaConsultas")
    public Set<HojaConsulta_estadisticas> getHojaConsultas() {
        return this.hojaConsultas;
    }

    public void setHojaConsultas(Set<HojaConsulta_estadisticas> hojaConsultas) {
        this.hojaConsultas = hojaConsultas;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "entidad")
    @JsonIgnoreProperties("medicoInEntidads")
    public Set<MedicoInEntidad_estadisticas> getMedicoInEntidads() {
        return this.medicoInEntidads;
    }

    public void setMedicoInEntidads(
            Set<MedicoInEntidad_estadisticas> medicoInEntidads) {
        this.medicoInEntidads = medicoInEntidads;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "entidad")
    @JsonIgnoreProperties("solicitudCitologias")
    public Set<SolicitudCitologia_estadisticas> getSolicitudCitologias() {
        return this.solicitudCitologias;
    }

    public void setSolicitudCitologias(
            Set<SolicitudCitologia_estadisticas> solicitudCitologias) {
        this.solicitudCitologias = solicitudCitologias;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "entidad")
    @JsonIgnoreProperties("funcionalidads")
    public Set<Funcionalidad_estadisticas> getFuncionalidads() {
        return this.funcionalidads;
    }

    public void setFuncionalidads(Set<Funcionalidad_estadisticas> funcionalidads) {
        this.funcionalidads = funcionalidads;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "entidad")
    @JsonIgnoreProperties("poblacionStatuses")
    public Set<PoblacionStatus_estadisticas> getPoblacionStatuses() {
        return this.poblacionStatuses;
    }

    public void setPoblacionStatuses(
            Set<PoblacionStatus_estadisticas> poblacionStatuses) {
        this.poblacionStatuses = poblacionStatuses;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "entidad")
    @JsonIgnoreProperties("solicitudAutopsias")
    public Set<SolicitudAutopsia_estadisticas> getSolicitudAutopsias() {
        return this.solicitudAutopsias;
    }

    public void setSolicitudAutopsias(
            Set<SolicitudAutopsia_estadisticas> solicitudAutopsias) {
        this.solicitudAutopsias = solicitudAutopsias;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "entidad")
    @JsonIgnoreProperties("ubicacions")
    public Set<Ubicacion_estadisticas> getUbicacions() {
        return this.ubicacions;
    }

    public void setUbicacions(Set<Ubicacion_estadisticas> ubicacions) {
        this.ubicacions = ubicacions;
    }

    @ManyToMany(fetch = FetchType.LAZY)
    @JoinTable(name = "solicitud_analisis_lab_in_entidad", schema = "publico", joinColumns = {@JoinColumn(name = "id_entidad", nullable = false, updatable = false)}, inverseJoinColumns = {@JoinColumn(name = "id_solicitud_analisis_lab", nullable = false, updatable = false)})
    @JsonIgnoreProperties("solicitudAnalisisLabs")
    public Set<SolicitudAnalisisLab_estadisticas> getSolicitudAnalisisLabs() {
        return this.solicitudAnalisisLabs;
    }

    public void setSolicitudAnalisisLabs(
            Set<SolicitudAnalisisLab_estadisticas> solicitudAnalisisLabs) {
        this.solicitudAnalisisLabs = solicitudAnalisisLabs;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "entidad")
    @JsonIgnoreProperties("origenSolicitudAnatomias")
    public Set<OrigenSolicitudAnatomia_estadisticas> getOrigenSolicitudAnatomias() {
        return this.origenSolicitudAnatomias;
    }

    public void setOrigenSolicitudAnatomias(
            Set<OrigenSolicitudAnatomia_estadisticas> origenSolicitudAnatomias) {
        this.origenSolicitudAnatomias = origenSolicitudAnatomias;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "entidad")
    @JsonIgnoreProperties("camasHistoricos")
    public Set<CamasHistorico_estadisticas> getCamasHistoricos() {
        return this.camasHistoricos;
    }

    public void setCamasHistoricos(
            Set<CamasHistorico_estadisticas> camasHistoricos) {
        this.camasHistoricos = camasHistoricos;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "entidad")
    @JsonIgnoreProperties("enfermeraInEntidads")
    public Set<EnfermeraInEntidad_estadisticas> getEnfermeraInEntidads() {
        return this.enfermeraInEntidads;
    }

    public void setEnfermeraInEntidads(
            Set<EnfermeraInEntidad_estadisticas> enfermeraInEntidads) {
        this.enfermeraInEntidads = enfermeraInEntidads;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "entidad")
    @JsonIgnoreProperties("servicioInEntidads_1")
    public Set<ServicioInEntidad_estadisticas> getServicioInEntidads_1() {
        return this.servicioInEntidads_1;
    }

    public void setServicioInEntidads_1(
            Set<ServicioInEntidad_estadisticas> servicioInEntidads_1) {
        this.servicioInEntidads_1 = servicioInEntidads_1;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "entidad")
    @JsonIgnoreProperties("poblacionAreaInfluencias")
    public Set<PoblacionAreaInfluencia_estadisticas> getPoblacionAreaInfluencias() {
        return this.poblacionAreaInfluencias;
    }

    public void setPoblacionAreaInfluencias(
            Set<PoblacionAreaInfluencia_estadisticas> poblacionAreaInfluencias) {
        this.poblacionAreaInfluencias = poblacionAreaInfluencias;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "entidad")
    @JsonIgnoreProperties("solicitudCitologiaGinecologicas")
    public Set<SolicitudCitologiaGinecologica_estadisticas> getSolicitudCitologiaGinecologicas() {
        return this.solicitudCitologiaGinecologicas;
    }

    public void setSolicitudCitologiaGinecologicas(
            Set<SolicitudCitologiaGinecologica_estadisticas> solicitudCitologiaGinecologicas) {
        this.solicitudCitologiaGinecologicas = solicitudCitologiaGinecologicas;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "entidad")
    @JsonIgnoreProperties("ordenAdmisions")
    public Set<OrdenAdmision_estadisticas> getOrdenAdmisions() {
        return this.ordenAdmisions;
    }

    public void setOrdenAdmisions(Set<OrdenAdmision_estadisticas> ordenAdmisions) {
        this.ordenAdmisions = ordenAdmisions;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "entidad")
    @JsonIgnoreProperties("departamentoInEntidads")
    public Set<DepartamentoInEntidad_estadisticas> getDepartamentoInEntidads() {
        return this.departamentoInEntidads;
    }

    public void setDepartamentoInEntidads(
            Set<DepartamentoInEntidad_estadisticas> departamentoInEntidads) {
        this.departamentoInEntidads = departamentoInEntidads;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "entidad")
    @JsonIgnoreProperties("especialidadInEntidads")
    public Set<EspecialidadInEntidad_estadisticas> getEspecialidadInEntidads() {
        return this.especialidadInEntidads;
    }

    public void setEspecialidadInEntidads(
            Set<EspecialidadInEntidad_estadisticas> especialidadInEntidads) {
        this.especialidadInEntidads = especialidadInEntidads;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "entidad")
    @JsonIgnoreProperties("tpobPinfluSexInEnts")
    public Set<TpobPinfluSexInEnt_estadisticas> getTpobPinfluSexInEnts() {
        return this.tpobPinfluSexInEnts;
    }

    public void setTpobPinfluSexInEnts(
            Set<TpobPinfluSexInEnt_estadisticas> tpobPinfluSexInEnts) {
        this.tpobPinfluSexInEnts = tpobPinfluSexInEnts;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "entidad")
    @JsonIgnoreProperties("tipoPoblacions")
    public Set<TipoPoblacion_estadisticas> getTipoPoblacions() {
        return this.tipoPoblacions;
    }

    public void setTipoPoblacions(Set<TipoPoblacion_estadisticas> tipoPoblacions) {
        this.tipoPoblacions = tipoPoblacions;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "entidad")
    @JsonIgnoreProperties("personalHistoricos")
    public Set<PersonalHistorico_estadisticas> getPersonalHistoricos() {
        return this.personalHistoricos;
    }

    public void setPersonalHistoricos(
            Set<PersonalHistorico_estadisticas> personalHistoricos) {
        this.personalHistoricos = personalHistoricos;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "entidad")
    @JsonIgnoreProperties("solicitudInterconsultas")
    public Set<SolicitudInterconsulta_estadisticas> getSolicitudInterconsultas() {
        return this.solicitudInterconsultas;
    }

    public void setSolicitudInterconsultas(
            Set<SolicitudInterconsulta_estadisticas> solicitudInterconsultas) {
        this.solicitudInterconsultas = solicitudInterconsultas;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "entidad")
    @JsonIgnoreProperties("solicitudBiopsias")
    public Set<SolicitudBiopsia_estadisticas> getSolicitudBiopsias() {
        return this.solicitudBiopsias;
    }

    public void setSolicitudBiopsias(
            Set<SolicitudBiopsia_estadisticas> solicitudBiopsias) {
        this.solicitudBiopsias = solicitudBiopsias;
    }

}
