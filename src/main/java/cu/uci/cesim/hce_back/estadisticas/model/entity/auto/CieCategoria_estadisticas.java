package cu.uci.cesim.hce_back.estadisticas.model.entity.auto;

import com.fasterxml.jackson.annotation.JsonIdentityInfo;
import com.fasterxml.jackson.annotation.ObjectIdGenerators;
import org.hibernate.validator.constraints.Length;

import javax.persistence.*;
import java.util.HashSet;
import java.util.Set;

// Generated Apr 18, 2012 10:46:48 AM by Hibernate Tools 3.4.0.CR1


/**
 * CieCategoria generated by hbm2java
 */
@Entity
@Table(name = "cie_categoria", schema = "estandares", uniqueConstraints = {
        @UniqueConstraint(columnNames = "codigo_categoria"),
        @UniqueConstraint(columnNames = "descripcion")})
@JsonIdentityInfo(generator = ObjectIdGenerators.PropertyGenerator.class, property = "id")
public class CieCategoria_estadisticas implements java.io.Serializable {

    private long id;
    private Integer version;
    private CieGrupo_estadisticas cieGrupo;
    private String codigoCategoria;
    private String descripcion;
    private String incluye;
    private String excluye;
    private String observaciones;
    private Boolean eliminado;
    private Long cid;
    private Set<CieSubcategoria_estadisticas> cieSubcategorias = new HashSet<CieSubcategoria_estadisticas>(
            0);

    public CieCategoria_estadisticas() {
    }

    public CieCategoria_estadisticas(long id, CieGrupo_estadisticas cieGrupo,
                                     String codigoCategoria, String descripcion) {
        this.id = id;
        this.cieGrupo = cieGrupo;
        this.codigoCategoria = codigoCategoria;
        this.descripcion = descripcion;
    }

    public CieCategoria_estadisticas(long id, CieGrupo_estadisticas cieGrupo,
                                     String codigoCategoria, String descripcion, String incluye,
                                     String excluye, String observaciones, Boolean eliminado, Long cid,
                                     Set<CieSubcategoria_estadisticas> cieSubcategorias) {
        this.id = id;
        this.cieGrupo = cieGrupo;
        this.codigoCategoria = codigoCategoria;
        this.descripcion = descripcion;
        this.incluye = incluye;
        this.excluye = excluye;
        this.observaciones = observaciones;
        this.eliminado = eliminado;
        this.cid = cid;
        this.cieSubcategorias = cieSubcategorias;
    }

    @Id
    @Column(name = "id", unique = true, nullable = false)
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    public long getId() {
        return this.id;
    }

    public void setId(long id) {
        this.id = id;
    }

    @Version
    @Column(name = "version")
    public Integer getVersion() {
        return this.version;
    }

    public void setVersion(Integer version) {
        this.version = version;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "id_grupo", nullable = false)

    public CieGrupo_estadisticas getCieGrupo() {
        return this.cieGrupo;
    }

    public void setCieGrupo(CieGrupo_estadisticas cieGrupo) {
        this.cieGrupo = cieGrupo;
    }

    @Column(name = "codigo_categoria", unique = true, nullable = false, length = 10)

    @Length(max = 10)
    public String getCodigoCategoria() {
        return this.codigoCategoria;
    }

    public void setCodigoCategoria(String codigoCategoria) {
        if (codigoCategoria != null)
            codigoCategoria = codigoCategoria.trim();
        this.codigoCategoria = codigoCategoria;
    }

    @Column(name = "descripcion", unique = true, nullable = false)

    public String getDescripcion() {
        return this.descripcion;
    }

    public void setDescripcion(String descripcion) {
        if (descripcion != null)
            descripcion = descripcion.trim();
        this.descripcion = descripcion;
    }

    @Column(name = "incluye")
    public String getIncluye() {
        return this.incluye;
    }

    public void setIncluye(String incluye) {
        if (incluye != null)
            incluye = incluye.trim();
        this.incluye = incluye;
    }

    @Column(name = "excluye")
    public String getExcluye() {
        return this.excluye;
    }

    public void setExcluye(String excluye) {
        if (excluye != null)
            excluye = excluye.trim();
        this.excluye = excluye;
    }

    @Column(name = "observaciones")
    public String getObservaciones() {
        return this.observaciones;
    }

    public void setObservaciones(String observaciones) {
        if (observaciones != null)
            observaciones = observaciones.trim();
        this.observaciones = observaciones;
    }

    @Column(name = "eliminado")
    public Boolean getEliminado() {
        return this.eliminado;
    }

    public void setEliminado(Boolean eliminado) {
        this.eliminado = eliminado;
    }

    @Column(name = "cid")
    public Long getCid() {
        return this.cid;
    }

    public void setCid(Long cid) {
        this.cid = cid;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "cieCategoria")
    public Set<CieSubcategoria_estadisticas> getCieSubcategorias() {
        return this.cieSubcategorias;
    }

    public void setCieSubcategorias(
            Set<CieSubcategoria_estadisticas> cieSubcategorias) {
        this.cieSubcategorias = cieSubcategorias;
    }

}
