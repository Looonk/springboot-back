package cu.uci.cesim.hce_back.estadisticas.model.entity.auto;

import com.fasterxml.jackson.annotation.JsonIdentityInfo;
import com.fasterxml.jackson.annotation.ObjectIdGenerators;
import org.hibernate.validator.constraints.Length;

import javax.persistence.*;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;

// Generated Apr 18, 2012 10:46:48 AM by Hibernate Tools 3.4.0.CR1


/**
 * Persona generated by hbm2java
 */
@Entity
@Table(name = "persona", schema = "hc_local")
@JsonIdentityInfo(generator = ObjectIdGenerators.PropertyGenerator.class, property = "id")
public class Persona_estadisticas implements java.io.Serializable {

    private long id;
    private Integer version;
    private Direccion_estadisticas direccionByIdDireccionParticular;
    private Sexo_estadisticas sexo;
    private EstadoCivil_estadisticas estadoCivil;
    private Persona_estadisticas personaByIdDatosPadre;
    private Persona_estadisticas personaByIdDatosSupervisor;
    private Direccion_estadisticas direccionByIdLugarNacimiento;
    private Persona_estadisticas personaByIdDatosRepresentante;
    private Nacion_estadisticas nacion;
    private Direccion_estadisticas direccionByIdLugarResidencia;
    private Persona_estadisticas personaByIdDatosMadre;
    private String cedula;
    private String foto;
    private String nombres;
    private String apellido1;
    private String apellido2;
    private Date fechaNacimiento;
    private Long idRaza;
    private Long idEtnia;
    private String correoElectronico;
    private String telfFijo;
    private String telfCelular;
    private String nombresFonetico;
    private String apellido1Fonetico;
    private String apellido2Fonetico;
    private DatosLaborales_estadisticas datosLaborales;
    private Boolean eliminado;
    private Long cid;
    private Set<Persona_estadisticas> personasForIdDatosSupervisor = new HashSet<Persona_estadisticas>(
            0);
    private Set<PersonaHist_estadisticas> personaHists = new HashSet<PersonaHist_estadisticas>(
            0);
    private Set<Persona_estadisticas> personasForIdDatosMadre = new HashSet<Persona_estadisticas>(
            0);
    private Set<Persona_estadisticas> personasForIdDatosPadre = new HashSet<Persona_estadisticas>(
            0);
    private HojaFrontal_estadisticas hojaFrontalById;
    private Set<HojaFrontal_estadisticas> hojaFrontalsForIdAvisarEmergencia = new HashSet<HojaFrontal_estadisticas>(
            0);
    private Set<Persona_estadisticas> personasForIdDatosRepresentante = new HashSet<Persona_estadisticas>(
            0);

    public Persona_estadisticas() {
    }

    public Persona_estadisticas(long id, Sexo_estadisticas sexo) {
        this.id = id;
        this.sexo = sexo;
    }

    public Persona_estadisticas(long id,
                                Direccion_estadisticas direccionByIdDireccionParticular,
                                Sexo_estadisticas sexo, EstadoCivil_estadisticas estadoCivil,
                                Persona_estadisticas personaByIdDatosPadre,
                                Persona_estadisticas personaByIdDatosSupervisor,
                                Direccion_estadisticas direccionByIdLugarNacimiento,
                                Persona_estadisticas personaByIdDatosRepresentante,
                                Nacion_estadisticas nacion,
                                Direccion_estadisticas direccionByIdLugarResidencia,
                                Persona_estadisticas personaByIdDatosMadre, String cedula,
                                String foto, String nombres, String apellido1, String apellido2,
                                Date fechaNacimiento, Long idRaza, Long idEtnia,
                                String correoElectronico, String telfFijo, String telfCelular,
                                String nombresFonetico, String apellido1Fonetico,
                                String apellido2Fonetico, DatosLaborales_estadisticas datosLaborales, Boolean eliminado,
                                Long cid, Set<Persona_estadisticas> personasForIdDatosSupervisor,
                                Set<PersonaHist_estadisticas> personaHists,
                                Set<Persona_estadisticas> personasForIdDatosMadre,
                                Set<Persona_estadisticas> personasForIdDatosPadre,
                                HojaFrontal_estadisticas hojaFrontalById,
                                Set<HojaFrontal_estadisticas> hojaFrontalsForIdAvisarEmergencia,
                                Set<Persona_estadisticas> personasForIdDatosRepresentante) {
        this.id = id;
        this.direccionByIdDireccionParticular = direccionByIdDireccionParticular;
        this.sexo = sexo;
        this.estadoCivil = estadoCivil;
        this.personaByIdDatosPadre = personaByIdDatosPadre;
        this.personaByIdDatosSupervisor = personaByIdDatosSupervisor;
        this.direccionByIdLugarNacimiento = direccionByIdLugarNacimiento;
        this.personaByIdDatosRepresentante = personaByIdDatosRepresentante;
        this.nacion = nacion;
        this.direccionByIdLugarResidencia = direccionByIdLugarResidencia;
        this.personaByIdDatosMadre = personaByIdDatosMadre;
        this.cedula = cedula;
        this.foto = foto;
        this.nombres = nombres;
        this.apellido1 = apellido1;
        this.apellido2 = apellido2;
        this.fechaNacimiento = fechaNacimiento;
        this.idRaza = idRaza;
        this.idEtnia = idEtnia;
        this.correoElectronico = correoElectronico;
        this.telfFijo = telfFijo;
        this.telfCelular = telfCelular;
        this.nombresFonetico = nombresFonetico;
        this.apellido1Fonetico = apellido1Fonetico;
        this.apellido2Fonetico = apellido2Fonetico;
        this.datosLaborales = datosLaborales;
        this.eliminado = eliminado;
        this.cid = cid;
        this.personasForIdDatosSupervisor = personasForIdDatosSupervisor;
        this.personaHists = personaHists;
        this.personasForIdDatosMadre = personasForIdDatosMadre;
        this.personasForIdDatosPadre = personasForIdDatosPadre;
        this.hojaFrontalById = hojaFrontalById;
        this.hojaFrontalsForIdAvisarEmergencia = hojaFrontalsForIdAvisarEmergencia;
        this.personasForIdDatosRepresentante = personasForIdDatosRepresentante;
    }

    @Id
    @Column(name = "id", unique = true, nullable = false)
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    public long getId() {
        return this.id;
    }

    public void setId(long id) {
        this.id = id;
    }

    @Version
    @Column(name = "version")
    public Integer getVersion() {
        return this.version;
    }

    public void setVersion(Integer version) {
        this.version = version;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "id_direccion_particular")
    public Direccion_estadisticas getDireccionByIdDireccionParticular() {
        return this.direccionByIdDireccionParticular;
    }

    public void setDireccionByIdDireccionParticular(
            Direccion_estadisticas direccionByIdDireccionParticular) {
        this.direccionByIdDireccionParticular = direccionByIdDireccionParticular;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "id_sexo", nullable = false)

    public Sexo_estadisticas getSexo() {
        return this.sexo;
    }

    public void setSexo(Sexo_estadisticas sexo) {
        this.sexo = sexo;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "id_estado_civil")
    public EstadoCivil_estadisticas getEstadoCivil() {
        return this.estadoCivil;
    }

    public void setEstadoCivil(EstadoCivil_estadisticas estadoCivil) {
        this.estadoCivil = estadoCivil;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "id_datos_padre")
    public Persona_estadisticas getPersonaByIdDatosPadre() {
        return this.personaByIdDatosPadre;
    }

    public void setPersonaByIdDatosPadre(
            Persona_estadisticas personaByIdDatosPadre) {
        this.personaByIdDatosPadre = personaByIdDatosPadre;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "id_datos_supervisor")
    public Persona_estadisticas getPersonaByIdDatosSupervisor() {
        return this.personaByIdDatosSupervisor;
    }

    public void setPersonaByIdDatosSupervisor(
            Persona_estadisticas personaByIdDatosSupervisor) {
        this.personaByIdDatosSupervisor = personaByIdDatosSupervisor;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "id_lugar_nacimiento")
    public Direccion_estadisticas getDireccionByIdLugarNacimiento() {
        return this.direccionByIdLugarNacimiento;
    }

    public void setDireccionByIdLugarNacimiento(
            Direccion_estadisticas direccionByIdLugarNacimiento) {
        this.direccionByIdLugarNacimiento = direccionByIdLugarNacimiento;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "id_datos_representante")
    public Persona_estadisticas getPersonaByIdDatosRepresentante() {
        return this.personaByIdDatosRepresentante;
    }

    public void setPersonaByIdDatosRepresentante(
            Persona_estadisticas personaByIdDatosRepresentante) {
        this.personaByIdDatosRepresentante = personaByIdDatosRepresentante;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "id_nacion")
    public Nacion_estadisticas getNacion() {
        return this.nacion;
    }

    public void setNacion(Nacion_estadisticas nacion) {
        this.nacion = nacion;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "id_lugar_residencia")
    public Direccion_estadisticas getDireccionByIdLugarResidencia() {
        return this.direccionByIdLugarResidencia;
    }

    public void setDireccionByIdLugarResidencia(
            Direccion_estadisticas direccionByIdLugarResidencia) {
        this.direccionByIdLugarResidencia = direccionByIdLugarResidencia;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "id_datos_madre")
    public Persona_estadisticas getPersonaByIdDatosMadre() {
        return this.personaByIdDatosMadre;
    }

    public void setPersonaByIdDatosMadre(
            Persona_estadisticas personaByIdDatosMadre) {
        this.personaByIdDatosMadre = personaByIdDatosMadre;
    }

    @Column(name = "cedula")
    public String getCedula() {
        return this.cedula;
    }

    public void setCedula(String cedula) {
        if (cedula != null)
            cedula = cedula.trim();
        this.cedula = cedula;
    }

    @Column(name = "foto")
    public String getFoto() {
        return this.foto;
    }

    public void setFoto(String foto) {
        if (foto != null)
            foto = foto.trim();
        this.foto = foto;
    }

    @Column(name = "nombres")
    public String getNombres() {
        return this.nombres;
    }

    public void setNombres(String nombres) {
        if (nombres != null)
            nombres = nombres.trim();
        this.nombres = nombres;
    }

    @Column(name = "apellido1")
    public String getApellido1() {
        return this.apellido1;
    }

    public void setApellido1(String apellido1) {
        if (apellido1 != null)
            apellido1 = apellido1.trim();
        this.apellido1 = apellido1;
    }

    @Column(name = "apellido2")
    public String getApellido2() {
        return this.apellido2;
    }

    public void setApellido2(String apellido2) {
        if (apellido2 != null)
            apellido2 = apellido2.trim();
        this.apellido2 = apellido2;
    }

    @Temporal(TemporalType.DATE)
    @Column(name = "fecha_nacimiento", length = 13)
    public Date getFechaNacimiento() {
        return this.fechaNacimiento;
    }

    public void setFechaNacimiento(Date fechaNacimiento) {
        this.fechaNacimiento = fechaNacimiento;
    }

    @Column(name = "id_raza")
    public Long getIdRaza() {
        return this.idRaza;
    }

    public void setIdRaza(Long idRaza) {
        this.idRaza = idRaza;
    }

    @Column(name = "id_etnia")
    public Long getIdEtnia() {
        return this.idEtnia;
    }

    public void setIdEtnia(Long idEtnia) {
        this.idEtnia = idEtnia;
    }

    @Column(name = "correo_electronico")
    public String getCorreoElectronico() {
        return this.correoElectronico;
    }

    public void setCorreoElectronico(String correoElectronico) {
        if (correoElectronico != null)
            correoElectronico = correoElectronico.trim();
        this.correoElectronico = correoElectronico;
    }

    @Column(name = "telf_fijo", length = 100)
    @Length(max = 100)
    public String getTelfFijo() {
        return this.telfFijo;
    }

    public void setTelfFijo(String telfFijo) {
        if (telfFijo != null)
            telfFijo = telfFijo.trim();
        this.telfFijo = telfFijo;
    }

    @Column(name = "telf_celular", length = 100)
    @Length(max = 100)
    public String getTelfCelular() {
        return this.telfCelular;
    }

    public void setTelfCelular(String telfCelular) {
        if (telfCelular != null)
            telfCelular = telfCelular.trim();
        this.telfCelular = telfCelular;
    }

    @Column(name = "nombres_fonetico", length = 100)
    @Length(max = 100)
    public String getNombresFonetico() {
        return this.nombresFonetico;
    }

    public void setNombresFonetico(String nombresFonetico) {
        if (nombresFonetico != null)
            nombresFonetico = nombresFonetico.trim();
        this.nombresFonetico = nombresFonetico;
    }

    @Column(name = "apellido1_fonetico", length = 100)
    @Length(max = 100)
    public String getApellido1Fonetico() {
        return this.apellido1Fonetico;
    }

    public void setApellido1Fonetico(String apellido1Fonetico) {
        if (apellido1Fonetico != null)
            apellido1Fonetico = apellido1Fonetico.trim();
        this.apellido1Fonetico = apellido1Fonetico;
    }

    @Column(name = "apellido2_fonetico", length = 100)
    @Length(max = 100)
    public String getApellido2Fonetico() {
        return this.apellido2Fonetico;
    }

    public void setApellido2Fonetico(String apellido2Fonetico) {
        if (apellido2Fonetico != null)
            apellido2Fonetico = apellido2Fonetico.trim();
        this.apellido2Fonetico = apellido2Fonetico;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "id_datos_laborales")
    public DatosLaborales_estadisticas getDatosLaborales() {
        return this.datosLaborales;
    }

    public void setDatosLaborales(DatosLaborales_estadisticas datosLaborales) {
        this.datosLaborales = datosLaborales;
    }

    @Column(name = "eliminado")
    public Boolean getEliminado() {
        return this.eliminado;
    }

    public void setEliminado(Boolean eliminado) {
        this.eliminado = eliminado;
    }

    @Column(name = "cid")
    public Long getCid() {
        return this.cid;
    }

    public void setCid(Long cid) {
        this.cid = cid;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "personaByIdDatosSupervisor")
    public Set<Persona_estadisticas> getPersonasForIdDatosSupervisor() {
        return this.personasForIdDatosSupervisor;
    }

    public void setPersonasForIdDatosSupervisor(
            Set<Persona_estadisticas> personasForIdDatosSupervisor) {
        this.personasForIdDatosSupervisor = personasForIdDatosSupervisor;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "persona")
    public Set<PersonaHist_estadisticas> getPersonaHists() {
        return this.personaHists;
    }

    public void setPersonaHists(Set<PersonaHist_estadisticas> personaHists) {
        this.personaHists = personaHists;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "personaByIdDatosMadre")
    public Set<Persona_estadisticas> getPersonasForIdDatosMadre() {
        return this.personasForIdDatosMadre;
    }

    public void setPersonasForIdDatosMadre(
            Set<Persona_estadisticas> personasForIdDatosMadre) {
        this.personasForIdDatosMadre = personasForIdDatosMadre;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "personaByIdDatosPadre")
    public Set<Persona_estadisticas> getPersonasForIdDatosPadre() {
        return this.personasForIdDatosPadre;
    }

    public void setPersonasForIdDatosPadre(
            Set<Persona_estadisticas> personasForIdDatosPadre) {
        this.personasForIdDatosPadre = personasForIdDatosPadre;
    }

    @OneToOne(fetch = FetchType.LAZY, mappedBy = "personaById")
    public HojaFrontal_estadisticas getHojaFrontalById() {
        return this.hojaFrontalById;
    }

    public void setHojaFrontalById(HojaFrontal_estadisticas hojaFrontalById) {
        this.hojaFrontalById = hojaFrontalById;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "personaByIdAvisarEmergencia")
    public Set<HojaFrontal_estadisticas> getHojaFrontalsForIdAvisarEmergencia() {
        return this.hojaFrontalsForIdAvisarEmergencia;
    }

    public void setHojaFrontalsForIdAvisarEmergencia(
            Set<HojaFrontal_estadisticas> hojaFrontalsForIdAvisarEmergencia) {
        this.hojaFrontalsForIdAvisarEmergencia = hojaFrontalsForIdAvisarEmergencia;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "personaByIdDatosRepresentante")
    public Set<Persona_estadisticas> getPersonasForIdDatosRepresentante() {
        return this.personasForIdDatosRepresentante;
    }

    public void setPersonasForIdDatosRepresentante(
            Set<Persona_estadisticas> personasForIdDatosRepresentante) {
        this.personasForIdDatosRepresentante = personasForIdDatosRepresentante;
    }

}
