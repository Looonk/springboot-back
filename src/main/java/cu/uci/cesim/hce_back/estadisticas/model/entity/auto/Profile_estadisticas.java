package cu.uci.cesim.hce_back.estadisticas.model.entity.auto;

import com.fasterxml.jackson.annotation.JsonIdentityInfo;
import com.fasterxml.jackson.annotation.ObjectIdGenerators;
import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;

import javax.persistence.*;
import java.util.Set;

// Generated 31-ene-2009 13:29:41 by Hibernate Tools 3.2.2.GA


/**
 * Profile generated by hbm2java
 */
@Entity
@Table(name = "profile", schema = "seguridad")
@JsonIdentityInfo(generator = ObjectIdGenerators.PropertyGenerator.class, property = "id")
public class Profile_estadisticas implements java.io.Serializable {

    private Long id;
    private Integer version;
    private String localeString;
    private String theme;
    private Boolean eliminado;
    private Long cid;
    private Boolean treeLikeMenu;
    /*	private Set<Usuario> usuarios = new HashSet<Usuario>(0);*/
    private Usuario_estadisticas usuario;

    public Profile_estadisticas() {
    }

    public Profile_estadisticas(Long id) {
        this.id = id;
    }

    public Profile_estadisticas(Long id, String localeString, String theme,
                                Boolean eliminado, Long cid, Boolean treeLikeMenu,
                                Set<Usuario_estadisticas> usuarios) {
        this.id = id;
        this.localeString = localeString;
        this.theme = theme;
        this.eliminado = eliminado;
        this.cid = cid;
        this.treeLikeMenu = treeLikeMenu;
        //this.usuarios = usuarios;
    }


    @GenericGenerator(name = "generator", strategy = "foreign", parameters = @Parameter(name = "property", value = "usuario"))
    @Id
    @GeneratedValue(generator = "generator")
    @Column(name = "id", unique = true, nullable = false)
    public Long getId() {
        return this.id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    @Version
    @Column(name = "version")
    public Integer getVersion() {
        return this.version;
    }

    public void setVersion(Integer version) {
        this.version = version;
    }

    @Column(name = "locale_string")
    public String getLocaleString() {
        return this.localeString;
    }

    public void setLocaleString(String localeString) {
        this.localeString = localeString;
    }

    @Column(name = "theme")
    public String getTheme() {
        return this.theme;
    }

    public void setTheme(String theme) {
        this.theme = theme;
    }

    @Column(name = "eliminado")
    public Boolean getEliminado() {
        return this.eliminado;
    }

    public void setEliminado(Boolean eliminado) {
        this.eliminado = eliminado;
    }

    @Column(name = "cid")
    public Long getCid() {
        return this.cid;
    }

    public void setCid(Long cid) {
        this.cid = cid;
    }

    @Column(name = "tree_like_menu")
    public Boolean getTreeLikeMenu() {
        return this.treeLikeMenu;
    }

    public void setTreeLikeMenu(Boolean treeLikeMenu) {
        this.treeLikeMenu = treeLikeMenu;
    }

/*	@OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = "profile")
	public Set<Usuario> getUsuarios() {
		return this.usuarios;
	}

	public void setUsuarios(Set<Usuario> usuarios) {
		this.usuarios = usuarios;
	}*/
	
/*	@OneToOne(fetch = FetchType.LAZY)
	@PrimaryKeyJoinColumn

	public Usuario_one getUsuario() {
		return this.usuario;
	}*/

    @OneToOne(fetch = FetchType.LAZY)
    @PrimaryKeyJoinColumn

    public Usuario_estadisticas getUsuario() {
        return usuario;
    }

    public void setUsuario(Usuario_estadisticas usuario) {
        this.usuario = usuario;
    }

}
