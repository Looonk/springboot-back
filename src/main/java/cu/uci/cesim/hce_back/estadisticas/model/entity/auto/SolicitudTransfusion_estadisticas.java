package cu.uci.cesim.hce_back.estadisticas.model.entity.auto;

import com.fasterxml.jackson.annotation.JsonIdentityInfo;
import com.fasterxml.jackson.annotation.ObjectIdGenerators;

import javax.persistence.*;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;

// Generated Apr 18, 2012 10:46:48 AM by Hibernate Tools 3.4.0.CR1


/**
 * SolicitudTransfusion generated by hbm2java
 */
@Entity
@Table(name = "solicitud_transfusion", schema = "publico")
@JsonIdentityInfo(generator = ObjectIdGenerators.PropertyGenerator.class, property = "id")
public class SolicitudTransfusion_estadisticas implements java.io.Serializable {

    private long id;
    private Integer version;
    private Funcionalidad_estadisticas funcionalidad;
    private DiagnosticoMedico_estadisticas diagnosticoMedico;
    private Medico_estadisticas medico;
    private SolicitudIntervencion_estadisticas solicitudIntervencion;
    private HojaFrontal_estadisticas hojaFrontal;
    private long idCaracter;
    private Long idComponente;
    private Integer cantidad;
    private Boolean aceptada;
    private String motivoRechazo;
    private Boolean eliminado;
    private Long cid;
    private String motivoSolicitud;
    private float hb;
    private Date fecha;
    private Boolean exaginado;
    private Date fechaRealizacion;
    private Integer cantidadEmbarazos;
    private Date fechaHb;
    private Set<EntregaSangre_estadisticas> entregaSangres = new HashSet<EntregaSangre_estadisticas>(
            0);

    public SolicitudTransfusion_estadisticas() {
    }

    public SolicitudTransfusion_estadisticas(long id,
                                             Funcionalidad_estadisticas funcionalidad,
                                             DiagnosticoMedico_estadisticas diagnosticoMedico,
                                             Medico_estadisticas medico, HojaFrontal_estadisticas hojaFrontal,
                                             long idCaracter, String motivoSolicitud, float hb, Date fecha,
                                             Date fechaRealizacion) {
        this.id = id;
        this.funcionalidad = funcionalidad;
        this.diagnosticoMedico = diagnosticoMedico;
        this.medico = medico;
        this.hojaFrontal = hojaFrontal;
        this.idCaracter = idCaracter;
        this.motivoSolicitud = motivoSolicitud;
        this.hb = hb;
        this.fecha = fecha;
        this.fechaRealizacion = fechaRealizacion;
    }

    public SolicitudTransfusion_estadisticas(long id,
                                             Funcionalidad_estadisticas funcionalidad,
                                             DiagnosticoMedico_estadisticas diagnosticoMedico,
                                             Medico_estadisticas medico,
                                             SolicitudIntervencion_estadisticas solicitudIntervencion,
                                             HojaFrontal_estadisticas hojaFrontal, long idCaracter,
                                             Long idComponente, Integer cantidad, Boolean aceptada,
                                             String motivoRechazo, Boolean eliminado, Long cid,
                                             String motivoSolicitud, float hb, Date fecha, Boolean exaginado,
                                             Date fechaRealizacion, Integer cantidadEmbarazos, Date fechaHb,
                                             Set<EntregaSangre_estadisticas> entregaSangres) {
        this.id = id;
        this.funcionalidad = funcionalidad;
        this.diagnosticoMedico = diagnosticoMedico;
        this.medico = medico;
        this.solicitudIntervencion = solicitudIntervencion;
        this.hojaFrontal = hojaFrontal;
        this.idCaracter = idCaracter;
        this.idComponente = idComponente;
        this.cantidad = cantidad;
        this.aceptada = aceptada;
        this.motivoRechazo = motivoRechazo;
        this.eliminado = eliminado;
        this.cid = cid;
        this.motivoSolicitud = motivoSolicitud;
        this.hb = hb;
        this.fecha = fecha;
        this.exaginado = exaginado;
        this.fechaRealizacion = fechaRealizacion;
        this.cantidadEmbarazos = cantidadEmbarazos;
        this.fechaHb = fechaHb;
        this.entregaSangres = entregaSangres;
    }

    @Id
    @Column(name = "id", unique = true, nullable = false)
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    public long getId() {
        return this.id;
    }

    public void setId(long id) {
        this.id = id;
    }

    @Version
    @Column(name = "version")
    public Integer getVersion() {
        return this.version;
    }

    public void setVersion(Integer version) {
        this.version = version;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "id_entidad", nullable = false)

    public Funcionalidad_estadisticas getFuncionalidad() {
        return this.funcionalidad;
    }

    public void setFuncionalidad(Funcionalidad_estadisticas funcionalidad) {
        this.funcionalidad = funcionalidad;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "id_diagnostico", nullable = false)

    public DiagnosticoMedico_estadisticas getDiagnosticoMedico() {
        return this.diagnosticoMedico;
    }

    public void setDiagnosticoMedico(
            DiagnosticoMedico_estadisticas diagnosticoMedico) {
        this.diagnosticoMedico = diagnosticoMedico;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "id_medico", nullable = false)

    public Medico_estadisticas getMedico() {
        return this.medico;
    }

    public void setMedico(Medico_estadisticas medico) {
        this.medico = medico;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "id_solicitud_intervencion")
    public SolicitudIntervencion_estadisticas getSolicitudIntervencion() {
        return this.solicitudIntervencion;
    }

    public void setSolicitudIntervencion(
            SolicitudIntervencion_estadisticas solicitudIntervencion) {
        this.solicitudIntervencion = solicitudIntervencion;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "id_hoja_frontal", nullable = false)

    public HojaFrontal_estadisticas getHojaFrontal() {
        return this.hojaFrontal;
    }

    public void setHojaFrontal(HojaFrontal_estadisticas hojaFrontal) {
        this.hojaFrontal = hojaFrontal;
    }

    @Column(name = "id_caracter", nullable = false)

    public long getIdCaracter() {
        return this.idCaracter;
    }

    public void setIdCaracter(long idCaracter) {
        this.idCaracter = idCaracter;
    }

    @Column(name = "id_componente")
    public Long getIdComponente() {
        return this.idComponente;
    }

    public void setIdComponente(Long idComponente) {
        this.idComponente = idComponente;
    }

    @Column(name = "cantidad")
    public Integer getCantidad() {
        return this.cantidad;
    }

    public void setCantidad(Integer cantidad) {
        this.cantidad = cantidad;
    }

    @Column(name = "aceptada")
    public Boolean getAceptada() {
        return this.aceptada;
    }

    public void setAceptada(Boolean aceptada) {
        this.aceptada = aceptada;
    }

    @Column(name = "motivo_rechazo")
    public String getMotivoRechazo() {
        return this.motivoRechazo;
    }

    public void setMotivoRechazo(String motivoRechazo) {
        if (motivoRechazo != null)
            motivoRechazo = motivoRechazo.trim();
        this.motivoRechazo = motivoRechazo;
    }

    @Column(name = "eliminado")
    public Boolean getEliminado() {
        return this.eliminado;
    }

    public void setEliminado(Boolean eliminado) {
        this.eliminado = eliminado;
    }

    @Column(name = "cid")
    public Long getCid() {
        return this.cid;
    }

    public void setCid(Long cid) {
        this.cid = cid;
    }

    @Column(name = "motivo_solicitud", nullable = false)

    public String getMotivoSolicitud() {
        return this.motivoSolicitud;
    }

    public void setMotivoSolicitud(String motivoSolicitud) {
        if (motivoSolicitud != null)
            motivoSolicitud = motivoSolicitud.trim();
        this.motivoSolicitud = motivoSolicitud;
    }

    @Column(name = "hb", nullable = false, precision = 8, scale = 8)

    public float getHb() {
        return this.hb;
    }

    public void setHb(float hb) {
        this.hb = hb;
    }

    @Temporal(TemporalType.DATE)
    @Column(name = "fecha", nullable = false, length = 13)

    public Date getFecha() {
        return this.fecha;
    }

    public void setFecha(Date fecha) {
        this.fecha = fecha;
    }

    @Column(name = "exaginado")
    public Boolean getExaginado() {
        return this.exaginado;
    }

    public void setExaginado(Boolean exaginado) {
        this.exaginado = exaginado;
    }

    @Temporal(TemporalType.DATE)
    @Column(name = "fecha_realizacion", nullable = false, length = 13)

    public Date getFechaRealizacion() {
        return this.fechaRealizacion;
    }

    public void setFechaRealizacion(Date fechaRealizacion) {
        this.fechaRealizacion = fechaRealizacion;
    }

    @Column(name = "cantidad_embarazos")
    public Integer getCantidadEmbarazos() {
        return this.cantidadEmbarazos;
    }

    public void setCantidadEmbarazos(Integer cantidadEmbarazos) {
        this.cantidadEmbarazos = cantidadEmbarazos;
    }

    @Temporal(TemporalType.DATE)
    @Column(name = "fecha_hb", length = 13)
    public Date getFechaHb() {
        return this.fechaHb;
    }

    public void setFechaHb(Date fechaHb) {
        this.fechaHb = fechaHb;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "solicitudTransfusion")
    public Set<EntregaSangre_estadisticas> getEntregaSangres() {
        return this.entregaSangres;
    }

    public void setEntregaSangres(Set<EntregaSangre_estadisticas> entregaSangres) {
        this.entregaSangres = entregaSangres;
    }

}
