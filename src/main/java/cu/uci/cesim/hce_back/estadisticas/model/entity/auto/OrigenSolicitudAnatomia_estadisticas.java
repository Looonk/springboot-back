package cu.uci.cesim.hce_back.estadisticas.model.entity.auto;

import com.fasterxml.jackson.annotation.JsonIdentityInfo;
import com.fasterxml.jackson.annotation.ObjectIdGenerators;

import javax.persistence.*;
import java.util.HashSet;
import java.util.Set;

// Generated Apr 18, 2012 10:46:48 AM by Hibernate Tools 3.4.0.CR1


/**
 * OrigenSolicitudAnatomia generated by hbm2java
 */
@Entity
@Table(name = "origen_solicitud_anatomia", schema = "publico")
@JsonIdentityInfo(generator = ObjectIdGenerators.PropertyGenerator.class, property = "id")
public class OrigenSolicitudAnatomia_estadisticas implements
        java.io.Serializable {

    private long id;
    private Integer version;
    private Departamento_estadisticas departamento;
    private TipoEntidad_estadisticas tipoEntidad;
    private Entidad_estadisticas entidad;
    private Servicio_estadisticas servicio;
    private Boolean eliminado;
    private Long cid;
    private Set<SolicitudBiopsia_estadisticas> solicitudBiopsias = new HashSet<SolicitudBiopsia_estadisticas>(
            0);
    private Set<SolicitudCitologiaGinecologica_estadisticas> solicitudCitologiaGinecologicas = new HashSet<SolicitudCitologiaGinecologica_estadisticas>(
            0);
    private Set<SolicitudCitologia_estadisticas> solicitudCitologias = new HashSet<SolicitudCitologia_estadisticas>(
            0);
    private Set<SolicitudAutopsia_estadisticas> solicitudAutopsias = new HashSet<SolicitudAutopsia_estadisticas>(
            0);

    public OrigenSolicitudAnatomia_estadisticas() {
    }

    public OrigenSolicitudAnatomia_estadisticas(long id,
                                                Departamento_estadisticas departamento,
                                                Entidad_estadisticas entidad, Servicio_estadisticas servicio) {
        this.id = id;
        this.departamento = departamento;
        this.entidad = entidad;
        this.servicio = servicio;
    }

    public OrigenSolicitudAnatomia_estadisticas(
            long id,
            Departamento_estadisticas departamento,
            TipoEntidad_estadisticas tipoEntidad,
            Entidad_estadisticas entidad,
            Servicio_estadisticas servicio,
            Boolean eliminado,
            Long cid,
            Set<SolicitudBiopsia_estadisticas> solicitudBiopsias,
            Set<SolicitudCitologiaGinecologica_estadisticas> solicitudCitologiaGinecologicas,
            Set<SolicitudCitologia_estadisticas> solicitudCitologias,
            Set<SolicitudAutopsia_estadisticas> solicitudAutopsias) {
        this.id = id;
        this.departamento = departamento;
        this.tipoEntidad = tipoEntidad;
        this.entidad = entidad;
        this.servicio = servicio;
        this.eliminado = eliminado;
        this.cid = cid;
        this.solicitudBiopsias = solicitudBiopsias;
        this.solicitudCitologiaGinecologicas = solicitudCitologiaGinecologicas;
        this.solicitudCitologias = solicitudCitologias;
        this.solicitudAutopsias = solicitudAutopsias;
    }

    @Id
    @Column(name = "id", unique = true, nullable = false)
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    public long getId() {
        return this.id;
    }

    public void setId(long id) {
        this.id = id;
    }

    @Version
    @Column(name = "version")
    public Integer getVersion() {
        return this.version;
    }

    public void setVersion(Integer version) {
        this.version = version;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "departamento_id", nullable = false)

    public Departamento_estadisticas getDepartamento() {
        return this.departamento;
    }

    public void setDepartamento(Departamento_estadisticas departamento) {
        this.departamento = departamento;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "tipo_entidad_id")
    public TipoEntidad_estadisticas getTipoEntidad() {
        return this.tipoEntidad;
    }

    public void setTipoEntidad(TipoEntidad_estadisticas tipoEntidad) {
        this.tipoEntidad = tipoEntidad;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "entidad_id", nullable = false)

    public Entidad_estadisticas getEntidad() {
        return this.entidad;
    }

    public void setEntidad(Entidad_estadisticas entidad) {
        this.entidad = entidad;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "servicio_id", nullable = false)

    public Servicio_estadisticas getServicio() {
        return this.servicio;
    }

    public void setServicio(Servicio_estadisticas servicio) {
        this.servicio = servicio;
    }

    @Column(name = "eliminado")
    public Boolean getEliminado() {
        return this.eliminado;
    }

    public void setEliminado(Boolean eliminado) {
        this.eliminado = eliminado;
    }

    @Column(name = "cid")
    public Long getCid() {
        return this.cid;
    }

    public void setCid(Long cid) {
        this.cid = cid;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "origenSolicitudAnatomia")
    public Set<SolicitudBiopsia_estadisticas> getSolicitudBiopsias() {
        return this.solicitudBiopsias;
    }

    public void setSolicitudBiopsias(
            Set<SolicitudBiopsia_estadisticas> solicitudBiopsias) {
        this.solicitudBiopsias = solicitudBiopsias;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "origenSolicitudAnatomia")
    public Set<SolicitudCitologiaGinecologica_estadisticas> getSolicitudCitologiaGinecologicas() {
        return this.solicitudCitologiaGinecologicas;
    }

    public void setSolicitudCitologiaGinecologicas(
            Set<SolicitudCitologiaGinecologica_estadisticas> solicitudCitologiaGinecologicas) {
        this.solicitudCitologiaGinecologicas = solicitudCitologiaGinecologicas;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "origenSolicitudAnatomia")
    public Set<SolicitudCitologia_estadisticas> getSolicitudCitologias() {
        return this.solicitudCitologias;
    }

    public void setSolicitudCitologias(
            Set<SolicitudCitologia_estadisticas> solicitudCitologias) {
        this.solicitudCitologias = solicitudCitologias;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "origenSolicitudAnatomia")
    public Set<SolicitudAutopsia_estadisticas> getSolicitudAutopsias() {
        return this.solicitudAutopsias;
    }

    public void setSolicitudAutopsias(
            Set<SolicitudAutopsia_estadisticas> solicitudAutopsias) {
        this.solicitudAutopsias = solicitudAutopsias;
    }

}
