package cu.uci.cesim.hce_back.estadisticas.model.entity.auto;

import com.fasterxml.jackson.annotation.JsonIdentityInfo;
import com.fasterxml.jackson.annotation.ObjectIdGenerators;

import javax.persistence.*;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;

// Generated Apr 18, 2012 10:46:48 AM by Hibernate Tools 3.4.0.CR1


/**
 * Cita generated by hbm2java
 */
@Entity
@Table(name = "cita", schema = "publico")
@JsonIdentityInfo(generator = ObjectIdGenerators.PropertyGenerator.class, property = "id")
public class Cita_estadisticas implements java.io.Serializable {

    private long id;
    private Integer version;
    private HorarioCita_estadisticas horarioCita;
    private HojaFrontal_estadisticas hojaFrontal;
    private long idUsuario;
    private Date fecha;
    private Date horaEntrada;
    private Boolean eliminado;
    private Long cid;
    private Date horaSalida;
    private Boolean cupoExtra;
    private Set<SolicitudInExamenLab_estadisticas> solicitudInExamenLabs = new HashSet<SolicitudInExamenLab_estadisticas>(
            0);
    private Set<Egreso_estadisticas> egresos = new HashSet<Egreso_estadisticas>(
            0);
    private Set<SolicitudInterconsulta_estadisticas> solicitudInterconsultas = new HashSet<SolicitudInterconsulta_estadisticas>(
            0);
    private Set<HojaConsulta_estadisticas> hojaConsultasForIdCitaOrigen = new HashSet<HojaConsulta_estadisticas>(
            0);
    private Set<HojaConsulta_estadisticas> hojaConsultasForIdCitaConsulta = new HashSet<HojaConsulta_estadisticas>(
            0);
    private Set<Referencias_estadisticas> referenciases = new HashSet<Referencias_estadisticas>(
            0);

    public Cita_estadisticas() {
    }

    public Cita_estadisticas(long id, HorarioCita_estadisticas horarioCita,
                             HojaFrontal_estadisticas hojaFrontal, long idUsuario, Date fecha,
                             Date horaEntrada, Date horaSalida) {
        this.id = id;
        this.horarioCita = horarioCita;
        this.hojaFrontal = hojaFrontal;
        this.idUsuario = idUsuario;
        this.fecha = fecha;
        this.horaEntrada = horaEntrada;
        this.horaSalida = horaSalida;
    }

    public Cita_estadisticas(long id, HorarioCita_estadisticas horarioCita,
                             HojaFrontal_estadisticas hojaFrontal, long idUsuario, Date fecha,
                             Date horaEntrada, Boolean eliminado, Long cid, Date horaSalida,
                             Boolean cupoExtra,
                             Set<SolicitudInExamenLab_estadisticas> solicitudInExamenLabs,
                             Set<Egreso_estadisticas> egresos,
                             Set<SolicitudInterconsulta_estadisticas> solicitudInterconsultas,
                             Set<HojaConsulta_estadisticas> hojaConsultasForIdCitaOrigen,
                             Set<HojaConsulta_estadisticas> hojaConsultasForIdCitaConsulta,
                             Set<Referencias_estadisticas> referenciases) {
        this.id = id;
        this.horarioCita = horarioCita;
        this.hojaFrontal = hojaFrontal;
        this.idUsuario = idUsuario;
        this.fecha = fecha;
        this.horaEntrada = horaEntrada;
        this.eliminado = eliminado;
        this.cid = cid;
        this.horaSalida = horaSalida;
        this.cupoExtra = cupoExtra;
        this.solicitudInExamenLabs = solicitudInExamenLabs;
        this.egresos = egresos;
        this.solicitudInterconsultas = solicitudInterconsultas;
        this.hojaConsultasForIdCitaOrigen = hojaConsultasForIdCitaOrigen;
        this.hojaConsultasForIdCitaConsulta = hojaConsultasForIdCitaConsulta;
        this.referenciases = referenciases;
    }

    @Id
    @Column(name = "id", unique = true, nullable = false)
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    public long getId() {
        return this.id;
    }

    public void setId(long id) {
        this.id = id;
    }

    @Version
    @Column(name = "version")
    public Integer getVersion() {
        return this.version;
    }

    public void setVersion(Integer version) {
        this.version = version;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "id_horario_cita", nullable = false)

    public HorarioCita_estadisticas getHorarioCita() {
        return this.horarioCita;
    }

    public void setHorarioCita(HorarioCita_estadisticas horarioCita) {
        this.horarioCita = horarioCita;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "id_paciente", nullable = false)

    public HojaFrontal_estadisticas getHojaFrontal() {
        return this.hojaFrontal;
    }

    public void setHojaFrontal(HojaFrontal_estadisticas hojaFrontal) {
        this.hojaFrontal = hojaFrontal;
    }

    @Column(name = "id_usuario", nullable = false)

    public long getIdUsuario() {
        return this.idUsuario;
    }

    public void setIdUsuario(long idUsuario) {
        this.idUsuario = idUsuario;
    }

    @Temporal(TemporalType.DATE)
    @Column(name = "fecha", nullable = false, length = 13)

    public Date getFecha() {
        return this.fecha;
    }

    public void setFecha(Date fecha) {
        this.fecha = fecha;
    }

    @Temporal(TemporalType.TIME)
    @Column(name = "hora_entrada", nullable = false, length = 8)

    public Date getHoraEntrada() {
        return this.horaEntrada;
    }

    public void setHoraEntrada(Date horaEntrada) {
        this.horaEntrada = horaEntrada;
    }

    @Column(name = "eliminado")
    public Boolean getEliminado() {
        return this.eliminado;
    }

    public void setEliminado(Boolean eliminado) {
        this.eliminado = eliminado;
    }

    @Column(name = "cid")
    public Long getCid() {
        return this.cid;
    }

    public void setCid(Long cid) {
        this.cid = cid;
    }

    @Temporal(TemporalType.TIME)
    @Column(name = "hora_salida", nullable = false, length = 8)

    public Date getHoraSalida() {
        return this.horaSalida;
    }

    public void setHoraSalida(Date horaSalida) {
        this.horaSalida = horaSalida;
    }

    @Column(name = "cupo_extra")
    public Boolean getCupoExtra() {
        return this.cupoExtra;
    }

    public void setCupoExtra(Boolean cupoExtra) {
        this.cupoExtra = cupoExtra;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "cita")
    public Set<SolicitudInExamenLab_estadisticas> getSolicitudInExamenLabs() {
        return this.solicitudInExamenLabs;
    }

    public void setSolicitudInExamenLabs(
            Set<SolicitudInExamenLab_estadisticas> solicitudInExamenLabs) {
        this.solicitudInExamenLabs = solicitudInExamenLabs;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "cita")
    public Set<Egreso_estadisticas> getEgresos() {
        return this.egresos;
    }

    public void setEgresos(Set<Egreso_estadisticas> egresos) {
        this.egresos = egresos;
    }

    @ManyToMany(fetch = FetchType.LAZY)
    @JoinTable(name = "cita_in_sol_interconsulta", schema = "citas", joinColumns = {@JoinColumn(name = "id_cita", nullable = false, updatable = false)}, inverseJoinColumns = {@JoinColumn(name = "id_solicitud", nullable = false, updatable = false)})
    public Set<SolicitudInterconsulta_estadisticas> getSolicitudInterconsultas() {
        return this.solicitudInterconsultas;
    }

    public void setSolicitudInterconsultas(
            Set<SolicitudInterconsulta_estadisticas> solicitudInterconsultas) {
        this.solicitudInterconsultas = solicitudInterconsultas;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "citaByIdCitaOrigen")
    public Set<HojaConsulta_estadisticas> getHojaConsultasForIdCitaOrigen() {
        return this.hojaConsultasForIdCitaOrigen;
    }

    public void setHojaConsultasForIdCitaOrigen(
            Set<HojaConsulta_estadisticas> hojaConsultasForIdCitaOrigen) {
        this.hojaConsultasForIdCitaOrigen = hojaConsultasForIdCitaOrigen;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "citaByIdCitaConsulta")
    public Set<HojaConsulta_estadisticas> getHojaConsultasForIdCitaConsulta() {
        return this.hojaConsultasForIdCitaConsulta;
    }

    public void setHojaConsultasForIdCitaConsulta(
            Set<HojaConsulta_estadisticas> hojaConsultasForIdCitaConsulta) {
        this.hojaConsultasForIdCitaConsulta = hojaConsultasForIdCitaConsulta;
    }

    @ManyToMany(fetch = FetchType.LAZY)
    @JoinTable(name = "cita_in_referencia", schema = "citas", joinColumns = {@JoinColumn(name = "id_cita", nullable = false, updatable = false)}, inverseJoinColumns = {@JoinColumn(name = "id_referencia", nullable = false, updatable = false)})
    public Set<Referencias_estadisticas> getReferenciases() {
        return this.referenciases;
    }

    public void setReferenciases(Set<Referencias_estadisticas> referenciases) {
        this.referenciases = referenciases;
    }

}
