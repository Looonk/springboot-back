package cu.uci.cesim.hce_back.estadisticas.model.entity.auto;

import com.fasterxml.jackson.annotation.JsonIdentityInfo;
import com.fasterxml.jackson.annotation.ObjectIdGenerators;

import javax.persistence.*;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;

//Generated 29-may-2013 14:53:55 by Hibernate Tools 3.4.0.CR1


/**
 * EvolucionMedica generated by hbm2java
 */
@Entity
@Table(name = "evolucion_medica", schema = "hc_local")
@JsonIdentityInfo(generator = ObjectIdGenerators.PropertyGenerator.class, property = "id")
public class EvolucionMedica_estadisticas implements java.io.Serializable {

    private long id;
    private Integer version;
    private Funcionalidad_estadisticas funcionalidad;
    private Long idSignosVitales;
    private SolicitudCitologiaGinecologica_estadisticas solicitudCitologiaGinecologica;
    private Admision_estadisticas admision;
    private ServicioInEntidad_estadisticas servicioInEntidad;
    private SolicitudCitologia_estadisticas solicitudCitologia;
    private Medico_estadisticas medico;
    private SolicitudAnalisisLab_estadisticas solicitudAnalisisLab;
    private Long idInformeReposo;
    private Long idInformeLactanciaMat;
    private Long idOrdenMedica;
    private Usuario_estadisticas usuario;
    private DiagnosticoMedico_estadisticas diagnosticoMedicoByIdDiagnostico;
    private Long idEstadoEvolucionPaciente;
    private SolicitudIntervencion_estadisticas solicitudIntervencion;
    private Long idSolicitudTipiaje;
    private DiagnosticoMedico_estadisticas diagnosticoMedicoByIdDiagnosticoPrincFinal;
    private SolicitudBiopsia_estadisticas solicitudBiopsia;
    private Date fecha;
    private Date hora;
    private String observaciones;
    private Boolean eliminado;
    private Long cid;
    private String identificadorDocumento;
    private Set<Cita_estadisticas> citas = new HashSet<Cita_estadisticas>(
            0);
    private Set<RegistroTransfusion_estadisticas> registroTransfusions = new HashSet<RegistroTransfusion_estadisticas>(
            0);

    private Set<SolicitudInterconsulta_estadisticas> solicitudInterconsultas = new HashSet<SolicitudInterconsulta_estadisticas>(
            0);

    private Set<SolicitudTransfusion_estadisticas> solicitudTransfusions = new HashSet<SolicitudTransfusion_estadisticas>(
            0);


    public EvolucionMedica_estadisticas() {
    }

    public EvolucionMedica_estadisticas(long id,
                                        Funcionalidad_estadisticas funcionalidad,
                                        Admision_estadisticas admision,
                                        ServicioInEntidad_estadisticas servicioInEntidad,
                                        Medico_estadisticas medico, Date fecha, Date hora,
                                        String observaciones) {
        this.id = id;
        this.funcionalidad = funcionalidad;
        this.admision = admision;
        this.servicioInEntidad = servicioInEntidad;
        this.medico = medico;
        this.fecha = fecha;
        this.hora = hora;
        this.observaciones = observaciones;
    }

    public EvolucionMedica_estadisticas(
            long id,
            Funcionalidad_estadisticas funcionalidad,
            Long idSignosVitales,
            SolicitudCitologiaGinecologica_estadisticas solicitudCitologiaGinecologica,
            Admision_estadisticas admision,
            ServicioInEntidad_estadisticas servicioInEntidad,
            SolicitudCitologia_estadisticas solicitudCitologia,
            Medico_estadisticas medico,
            SolicitudAnalisisLab_estadisticas solicitudAnalisisLab,
            Long idInformeReposo,
            Long idInformeLactanciaMat,
            Long idOrdenMedica,
            Usuario_estadisticas usuario,
            DiagnosticoMedico_estadisticas diagnosticoMedicoByIdDiagnostico,
            Long idEstadoEvolucionPaciente,
            SolicitudIntervencion_estadisticas solicitudIntervencion,
            Long idSolicitudTipiaje,
            DiagnosticoMedico_estadisticas diagnosticoMedicoByIdDiagnosticoPrincFinal,
            SolicitudBiopsia_estadisticas solicitudBiopsia,
            Date fecha,
            Date hora,
            String observaciones,
            Boolean eliminado,
            Long cid,
            String identificadorDocumento,
            Set<Cita_estadisticas> citas,
            Set<RegistroTransfusion_estadisticas> registroTransfusions,

            Set<SolicitudInterconsulta_estadisticas> solicitudInterconsultas,

            Set<SolicitudTransfusion_estadisticas> solicitudTransfusions) {
        this.id = id;
        this.funcionalidad = funcionalidad;
        this.idSignosVitales = idSignosVitales;
        this.solicitudCitologiaGinecologica = solicitudCitologiaGinecologica;
        this.admision = admision;
        this.servicioInEntidad = servicioInEntidad;
        this.solicitudCitologia = solicitudCitologia;
        this.medico = medico;
        this.solicitudAnalisisLab = solicitudAnalisisLab;
        this.idInformeReposo = idInformeReposo;
        this.idInformeLactanciaMat = idInformeLactanciaMat;
        this.idOrdenMedica = idOrdenMedica;
        this.usuario = usuario;
        this.diagnosticoMedicoByIdDiagnostico = diagnosticoMedicoByIdDiagnostico;
        this.idEstadoEvolucionPaciente = idEstadoEvolucionPaciente;
        this.solicitudIntervencion = solicitudIntervencion;
        this.idSolicitudTipiaje = idSolicitudTipiaje;
        this.diagnosticoMedicoByIdDiagnosticoPrincFinal = diagnosticoMedicoByIdDiagnosticoPrincFinal;
        this.solicitudBiopsia = solicitudBiopsia;
        this.fecha = fecha;
        this.hora = hora;
        this.observaciones = observaciones;
        this.eliminado = eliminado;
        this.cid = cid;
        this.identificadorDocumento = identificadorDocumento;
        this.citas = citas;
        this.registroTransfusions = registroTransfusions;

        this.solicitudInterconsultas = solicitudInterconsultas;

        this.solicitudTransfusions = solicitudTransfusions;

    }

    @Id
    @Column(name = "id", unique = true, nullable = false)
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    public long getId() {
        return this.id;
    }

    public void setId(long id) {
        this.id = id;
    }

    @Version
    @Column(name = "version")
    public Integer getVersion() {
        return this.version;
    }

    public void setVersion(Integer version) {
        this.version = version;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "id_entidad", nullable = false)

    public Funcionalidad_estadisticas getFuncionalidad() {
        return this.funcionalidad;
    }

    public void setFuncionalidad(Funcionalidad_estadisticas funcionalidad) {
        this.funcionalidad = funcionalidad;
    }


    @Column(name = "id_signos_vitales")
    public Long getIdSignosVitales() {
        return this.idSignosVitales;
    }

    public void setIdSignosVitales(Long idSignosVitales) {
        this.idSignosVitales = idSignosVitales;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "id_sol_cit_gin")
    public SolicitudCitologiaGinecologica_estadisticas getSolicitudCitologiaGinecologica() {
        return this.solicitudCitologiaGinecologica;
    }

    public void setSolicitudCitologiaGinecologica(
            SolicitudCitologiaGinecologica_estadisticas solicitudCitologiaGinecologica) {
        this.solicitudCitologiaGinecologica = solicitudCitologiaGinecologica;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "id_admision", nullable = false)

    public Admision_estadisticas getAdmision() {
        return this.admision;
    }

    public void setAdmision(Admision_estadisticas admision) {
        this.admision = admision;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "id_servicio_realiza", nullable = false)

    public ServicioInEntidad_estadisticas getServicioInEntidad() {
        return this.servicioInEntidad;
    }

    public void setServicioInEntidad(
            ServicioInEntidad_estadisticas servicioInEntidad) {
        this.servicioInEntidad = servicioInEntidad;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "id_sol_citologia")
    public SolicitudCitologia_estadisticas getSolicitudCitologia() {
        return this.solicitudCitologia;
    }

    public void setSolicitudCitologia(
            SolicitudCitologia_estadisticas solicitudCitologia) {
        this.solicitudCitologia = solicitudCitologia;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "id_medico", nullable = false)

    public Medico_estadisticas getMedico() {
        return this.medico;
    }

    public void setMedico(Medico_estadisticas medico) {
        this.medico = medico;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "id_sol_analisis_lab")
    public SolicitudAnalisisLab_estadisticas getSolicitudAnalisisLab() {
        return this.solicitudAnalisisLab;
    }

    public void setSolicitudAnalisisLab(
            SolicitudAnalisisLab_estadisticas solicitudAnalisisLab) {
        this.solicitudAnalisisLab = solicitudAnalisisLab;
    }


    @Column(name = "id_informe_reposo")
    public Long getIdInformeReposo() {
        return this.idInformeReposo;
    }

    public void setIdInformeReposo(Long idInformeReposo) {
        this.idInformeReposo = idInformeReposo;
    }

    @Column(name = "id_lactancia_materna")
    public Long getIdInformeLactanciaMat() {
        return this.idInformeLactanciaMat;
    }

    public void setIdInformeLactanciaMat(
            Long idInformeLactanciaMat) {
        this.idInformeLactanciaMat = idInformeLactanciaMat;
    }


    @Column(name = "id_orden_medica")
    public Long getIdOrdenMedica() {
        return this.idOrdenMedica;
    }

    public void setIdOrdenMedica(Long idOrdenMedica) {
        this.idOrdenMedica = idOrdenMedica;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "id_tecnico_codifica_diag_final")
    public Usuario_estadisticas getUsuario() {
        return this.usuario;
    }

    public void setUsuario(Usuario_estadisticas usuario) {
        this.usuario = usuario;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "id_diagnostico")
    public DiagnosticoMedico_estadisticas getDiagnosticoMedicoByIdDiagnostico() {
        return this.diagnosticoMedicoByIdDiagnostico;
    }

    public void setDiagnosticoMedicoByIdDiagnostico(
            DiagnosticoMedico_estadisticas diagnosticoMedicoByIdDiagnostico) {
        this.diagnosticoMedicoByIdDiagnostico = diagnosticoMedicoByIdDiagnostico;
    }


    @Column(name = "id_estado_evolucion_paciente")
    public Long getIdEstadoEvolucionPaciente() {
        return this.idEstadoEvolucionPaciente;
    }

    public void setIdEstadoEvolucionPaciente(
            Long idEstadoEvolucionPaciente) {
        this.idEstadoEvolucionPaciente = idEstadoEvolucionPaciente;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "id_solicitud_intervencion")
    public SolicitudIntervencion_estadisticas getSolicitudIntervencion() {
        return this.solicitudIntervencion;
    }

    public void setSolicitudIntervencion(
            SolicitudIntervencion_estadisticas solicitudIntervencion) {
        this.solicitudIntervencion = solicitudIntervencion;
    }

    @Column(name = "id_sol_exam_tipeaje")
    public Long getIdSolicitudTipiaje() {
        return this.idSolicitudTipiaje;
    }

    public void setIdSolicitudTipiaje(
            Long idSolicitudTipiaje) {
        this.idSolicitudTipiaje = idSolicitudTipiaje;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "id_diagnostico_princ_final")
    public DiagnosticoMedico_estadisticas getDiagnosticoMedicoByIdDiagnosticoPrincFinal() {
        return this.diagnosticoMedicoByIdDiagnosticoPrincFinal;
    }

    public void setDiagnosticoMedicoByIdDiagnosticoPrincFinal(
            DiagnosticoMedico_estadisticas diagnosticoMedicoByIdDiagnosticoPrincFinal) {
        this.diagnosticoMedicoByIdDiagnosticoPrincFinal = diagnosticoMedicoByIdDiagnosticoPrincFinal;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "id_sol_biopsia")
    public SolicitudBiopsia_estadisticas getSolicitudBiopsia() {
        return this.solicitudBiopsia;
    }

    public void setSolicitudBiopsia(
            SolicitudBiopsia_estadisticas solicitudBiopsia) {
        this.solicitudBiopsia = solicitudBiopsia;
    }

    @Temporal(TemporalType.DATE)
    @Column(name = "fecha", nullable = false, length = 13)

    public Date getFecha() {
        return this.fecha;
    }

    public void setFecha(Date fecha) {
        this.fecha = fecha;
    }

    @Temporal(TemporalType.TIME)
    @Column(name = "hora", nullable = false, length = 15)

    public Date getHora() {
        return this.hora;
    }

    public void setHora(Date hora) {
        this.hora = hora;
    }

    @Column(name = "observaciones", nullable = false)

    public String getObservaciones() {
        return this.observaciones;
    }

    public void setObservaciones(String observaciones) {
        if (observaciones != null)
            observaciones = observaciones.trim();
        this.observaciones = observaciones;
    }

    @Column(name = "eliminado")
    public Boolean getEliminado() {
        return this.eliminado;
    }

    public void setEliminado(Boolean eliminado) {
        this.eliminado = eliminado;
    }

    @Column(name = "cid")
    public Long getCid() {
        return this.cid;
    }

    public void setCid(Long cid) {
        this.cid = cid;
    }

    @Column(name = "identificador_documento")
    public String getIdentificadorDocumento() {
        return this.identificadorDocumento;
    }

    public void setIdentificadorDocumento(String identificadorDocumento) {
        if (identificadorDocumento != null)
            identificadorDocumento = identificadorDocumento.trim();
        this.identificadorDocumento = identificadorDocumento;
    }

    @ManyToMany(fetch = FetchType.LAZY)
    @JoinTable(name = "evolucion_medica_in_cita", schema = "hc_local", joinColumns = {@JoinColumn(name = "id_evolucion_medica", nullable = false, updatable = false)}, inverseJoinColumns = {@JoinColumn(name = "id_cita_estudio", nullable = false, updatable = false)})
    public Set<Cita_estadisticas> getCitas() {
        return this.citas;
    }

    public void setCitas(Set<Cita_estadisticas> citas) {
        this.citas = citas;
    }

    @ManyToMany(fetch = FetchType.LAZY)
    @JoinTable(name = "registro_transf_in_evolucion_med", schema = "hc_local", joinColumns = {@JoinColumn(name = "id_evolucion_medica", nullable = false, updatable = false)}, inverseJoinColumns = {@JoinColumn(name = "id_registro_transfusion", nullable = false, updatable = false)})
    public Set<RegistroTransfusion_estadisticas> getRegistroTransfusions() {
        return this.registroTransfusions;
    }

    public void setRegistroTransfusions(
            Set<RegistroTransfusion_estadisticas> registroTransfusions) {
        this.registroTransfusions = registroTransfusions;
    }


    @ManyToMany(fetch = FetchType.LAZY)
    @JoinTable(name = "solic_interc_in_evolucion_med", schema = "hc_local", joinColumns = {@JoinColumn(name = "id_evolucion_medica", nullable = false, updatable = false)}, inverseJoinColumns = {@JoinColumn(name = "id_solicitud_interconsulta", nullable = false, updatable = false)})
    public Set<SolicitudInterconsulta_estadisticas> getSolicitudInterconsultas() {
        return this.solicitudInterconsultas;
    }

    public void setSolicitudInterconsultas(
            Set<SolicitudInterconsulta_estadisticas> solicitudInterconsultas) {
        this.solicitudInterconsultas = solicitudInterconsultas;
    }


    @ManyToMany(fetch = FetchType.LAZY)
    @JoinTable(name = "sol_transf_in_evolucion_med", schema = "hc_local", joinColumns = {@JoinColumn(name = "id_evolucion_medica", nullable = false, updatable = false)}, inverseJoinColumns = {@JoinColumn(name = "id_solic_transfusion", nullable = false, updatable = false)})
    public Set<SolicitudTransfusion_estadisticas> getSolicitudTransfusions() {
        return this.solicitudTransfusions;
    }

    public void setSolicitudTransfusions(
            Set<SolicitudTransfusion_estadisticas> solicitudTransfusions) {
        this.solicitudTransfusions = solicitudTransfusions;
    }


}
