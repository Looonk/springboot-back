package cu.uci.cesim.hce_back.estadisticas.model.entity.auto;

import com.fasterxml.jackson.annotation.JsonIdentityInfo;
import com.fasterxml.jackson.annotation.ObjectIdGenerators;
import org.hibernate.validator.constraints.Length;

import javax.persistence.*;
import java.util.HashSet;
import java.util.Set;

// Generated Jun 4, 2012 4:59:22 PM by Hibernate Tools 3.4.0.CR1


/**
 * TratamientoMedico generated by hbm2java
 */
@Entity
@Table(name = "tratamiento_medico", schema = "hc_local")
@JsonIdentityInfo(generator = ObjectIdGenerators.PropertyGenerator.class, property = "id")
public class TratamientoMedico_estadisticas implements java.io.Serializable {

    private long id;
    private Integer version;
    private String tratamiento;
    private String descripcion;
    private Long cid;
    private Boolean eliminado;
    private Set<IndicacionMedicaTratamiento_estadisticas> indicacionMedicaTratamientos = new HashSet<IndicacionMedicaTratamiento_estadisticas>(
            0);

    public TratamientoMedico_estadisticas() {
    }

    public TratamientoMedico_estadisticas(long id, String tratamiento) {
        this.id = id;
        this.tratamiento = tratamiento;
    }

    public TratamientoMedico_estadisticas(
            long id,
            String tratamiento,
            String descripcion,
            Long cid,
            Boolean eliminado,
            Set<IndicacionMedicaTratamiento_estadisticas> indicacionMedicaTratamientos) {
        this.id = id;
        this.tratamiento = tratamiento;
        this.descripcion = descripcion;
        this.cid = cid;
        this.eliminado = eliminado;
        this.indicacionMedicaTratamientos = indicacionMedicaTratamientos;
    }

    @Id
    @Column(name = "id", unique = true, nullable = false)

    @GeneratedValue(strategy = GenerationType.IDENTITY)
    public long getId() {
        return this.id;
    }

    public void setId(long id) {
        this.id = id;
    }

    @Version
    @Column(name = "version")
    public Integer getVersion() {
        return this.version;
    }

    public void setVersion(Integer version) {
        this.version = version;
    }

    @Column(name = "tratamiento", nullable = false, length = 100)

    @Length(max = 100)
    public String getTratamiento() {
        return this.tratamiento;
    }

    public void setTratamiento(String tratamiento) {
        if (tratamiento != null)
            tratamiento = tratamiento.trim();
        this.tratamiento = tratamiento;
    }

    @Column(name = "descripcion")
    public String getDescripcion() {
        return this.descripcion;
    }

    public void setDescripcion(String descripcion) {
        if (descripcion != null)
            descripcion = descripcion.trim();
        this.descripcion = descripcion;
    }

    @Column(name = "cid")
    public Long getCid() {
        return this.cid;
    }

    public void setCid(Long cid) {
        this.cid = cid;
    }

    @Column(name = "eliminado")
    public Boolean getEliminado() {
        return this.eliminado;
    }

    public void setEliminado(Boolean eliminado) {
        this.eliminado = eliminado;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "tratamientoMedico")
    public Set<IndicacionMedicaTratamiento_estadisticas> getIndicacionMedicaTratamientos() {
        return this.indicacionMedicaTratamientos;
    }

    public void setIndicacionMedicaTratamientos(
            Set<IndicacionMedicaTratamiento_estadisticas> indicacionMedicaTratamientos) {
        this.indicacionMedicaTratamientos = indicacionMedicaTratamientos;
    }

}
