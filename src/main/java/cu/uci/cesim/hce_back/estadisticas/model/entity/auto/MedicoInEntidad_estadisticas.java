package cu.uci.cesim.hce_back.estadisticas.model.entity.auto;

import com.fasterxml.jackson.annotation.JsonIdentityInfo;
import com.fasterxml.jackson.annotation.ObjectIdGenerators;

import javax.persistence.*;
import java.util.HashSet;
import java.util.Set;

// Generated Apr 18, 2012 10:46:48 AM by Hibernate Tools 3.4.0.CR1

/**
 * MedicoInEntidad generated by hbm2java
 */
@Entity
@Table(name = "medico_in_entidad", schema = "comun", uniqueConstraints = @UniqueConstraint(columnNames = {
        "id_entidad", "id_medico"}))
@JsonIdentityInfo(generator = ObjectIdGenerators.PropertyGenerator.class, property = "id")
public class MedicoInEntidad_estadisticas implements java.io.Serializable {

    private long id;
    private Integer version;
    private Entidad_estadisticas entidad;
    private Medico_estadisticas medico;
    private Long cid;
    private Boolean eliminado;

    private Set<EspecialidadInEntidad_estadisticas> especialidadInEntidads = new HashSet<EspecialidadInEntidad_estadisticas>(
            0);

//	private Set<EspecialidadInEntidad_consulta> especialidadInEntidads = new HashSet<EspecialidadInEntidad_consulta>(
//			0);

    public MedicoInEntidad_estadisticas() {
    }

    public MedicoInEntidad_estadisticas(long id) {
        this.id = id;
    }

    public MedicoInEntidad_estadisticas(long id, Entidad_estadisticas entidad,
                                        Medico_estadisticas medico, Long cid, Boolean eliminado) {
        this.id = id;
        this.entidad = entidad;
        this.medico = medico;
        this.cid = cid;
        this.eliminado = eliminado;
    }

    @Id
    @Column(name = "id", unique = true, nullable = false)
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    public long getId() {
        return this.id;
    }

    public void setId(long id) {
        this.id = id;
    }

    @Version
    @Column(name = "version")
    public Integer getVersion() {
        return this.version;
    }

    public void setVersion(Integer version) {
        this.version = version;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "id_entidad")
    public Entidad_estadisticas getEntidad() {
        return this.entidad;
    }

    public void setEntidad(Entidad_estadisticas entidad) {
        this.entidad = entidad;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "id_medico")
    public Medico_estadisticas getMedico() {
        return this.medico;
    }

    public void setMedico(Medico_estadisticas medico) {
        this.medico = medico;
    }

    @Column(name = "cid")
    public Long getCid() {
        return this.cid;
    }

    public void setCid(Long cid) {
        this.cid = cid;
    }

    @Column(name = "eliminado")
    public Boolean getEliminado() {
        return this.eliminado;
    }

    public void setEliminado(Boolean eliminado) {
        this.eliminado = eliminado;
    }

    @ManyToMany(fetch = FetchType.LAZY)
    @JoinTable(name = "medico_in_entidad_in_especialidads", schema = "comun", joinColumns = {@JoinColumn(name = "id_medico_in_entidad", nullable = false, updatable = false)}, inverseJoinColumns = {@JoinColumn(name = "id_especialidad_in_entidad", nullable = false, updatable = false)})
    public Set<EspecialidadInEntidad_estadisticas> getEspecialidadInEntidads() {
        return this.especialidadInEntidads;
    }

    public void setEspecialidadInEntidads(
            Set<EspecialidadInEntidad_estadisticas> especialidadInEntidads) {
        this.especialidadInEntidads = especialidadInEntidads;
    }

}
