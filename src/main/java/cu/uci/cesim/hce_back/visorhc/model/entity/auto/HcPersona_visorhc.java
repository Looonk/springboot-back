package cu.uci.cesim.hce_back.visorhc.model.entity.auto;

// Generated May 10, 2013 1:18:35 PM by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Version;

import com.fasterxml.jackson.annotation.JsonIdentityInfo;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.ObjectIdGenerators;
import org.hibernate.validator.constraints.Length;

/**
 * HcPersona generated by hbm2java
 */
@Entity
@Table(name = "hc_persona", schema = "hc")
@JsonIdentityInfo(generator = ObjectIdGenerators.PropertyGenerator.class, property = "id")
public class HcPersona_visorhc implements java.io.Serializable {

    private long id;
    private Integer version;
    private String numeroHc;
    private String cedula;
    private String nombre;
    private String apellido1;
    private String apellido2;
    private String sexo;
    private Date fechaNacimiento;
    private Long cid;
    @JsonIgnore
    private Set<HcDocumentoClinico_visorhc> hcDocumentoClinicos = new HashSet<HcDocumentoClinico_visorhc>(
            0);
    @JsonIgnore
    private Set<HcTrazaDocumento_visorhc> hcTrazaDocumentosForIdPersonaNueva = new HashSet<HcTrazaDocumento_visorhc>(
            0);
    @JsonIgnore
    private Set<HcTrazaDocumento_visorhc> hcTrazaDocumentosForIdPersonaVieja = new HashSet<HcTrazaDocumento_visorhc>(
            0);

    public HcPersona_visorhc() {
    }

    public HcPersona_visorhc(long id, String numeroHc) {
        this.id = id;
        this.numeroHc = numeroHc;
    }

    public HcPersona_visorhc(long id, String numeroHc, String cedula,
                             String nombre, String apellido1, String apellido2, String sexo,
                             Date fechaNacimiento, Long cid,
                             Set<HcDocumentoClinico_visorhc> hcDocumentoClinicos,
                             Set<HcTrazaDocumento_visorhc> hcTrazaDocumentosForIdPersonaNueva,
                             Set<HcTrazaDocumento_visorhc> hcTrazaDocumentosForIdPersonaVieja) {
        this.id = id;
        this.numeroHc = numeroHc;
        this.cedula = cedula;
        this.nombre = nombre;
        this.apellido1 = apellido1;
        this.apellido2 = apellido2;
        this.sexo = sexo;
        this.fechaNacimiento = fechaNacimiento;
        this.cid = cid;
        this.hcDocumentoClinicos = hcDocumentoClinicos;
        this.hcTrazaDocumentosForIdPersonaNueva = hcTrazaDocumentosForIdPersonaNueva;
        this.hcTrazaDocumentosForIdPersonaVieja = hcTrazaDocumentosForIdPersonaVieja;
    }

    @Id
    @Column(name = "id", unique = true, nullable = false)
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    public long getId() {
        return this.id;
    }

    public void setId(long id) {
        this.id = id;
    }

    @Version
    @Column(name = "version")
    public Integer getVersion() {
        return this.version;
    }

    public void setVersion(Integer version) {
        this.version = version;
    }

    @Column(name = "numero_hc", nullable = false)
    public String getNumeroHc() {
        return this.numeroHc;
    }

    public void setNumeroHc(String numeroHc) {
        if (numeroHc != null)
            numeroHc = numeroHc.trim();
        this.numeroHc = numeroHc;
    }

    @Column(name = "cedula")
    public String getCedula() {
        return this.cedula;
    }

    public void setCedula(String cedula) {
        if (cedula != null)
            cedula = cedula.trim();
        this.cedula = cedula;
    }

    @Column(name = "nombre")
    public String getNombre() {
        return this.nombre;
    }

    public void setNombre(String nombre) {
        if (nombre != null)
            nombre = nombre.trim();
        this.nombre = nombre;
    }

    @Column(name = "apellido1")
    public String getApellido1() {
        return this.apellido1;
    }

    public void setApellido1(String apellido1) {
        if (apellido1 != null)
            apellido1 = apellido1.trim();
        this.apellido1 = apellido1;
    }

    @Column(name = "apellido2", length = 20)
    @Length(max = 20)
    public String getApellido2() {
        return this.apellido2;
    }

    public void setApellido2(String apellido2) {
        if (apellido2 != null)
            apellido2 = apellido2.trim();
        this.apellido2 = apellido2;
    }

    @Column(name = "sexo")
    public String getSexo() {
        return this.sexo;
    }

    public void setSexo(String sexo) {
        if (sexo != null)
            sexo = sexo.trim();
        this.sexo = sexo;
    }

    @Temporal(TemporalType.DATE)
    @Column(name = "fecha_nacimiento", length = 13)
    public Date getFechaNacimiento() {
        return this.fechaNacimiento;
    }

    public void setFechaNacimiento(Date fechaNacimiento) {
        this.fechaNacimiento = fechaNacimiento;
    }

    @Column(name = "cid")
    public Long getCid() {
        return this.cid;
    }

    public void setCid(Long cid) {
        this.cid = cid;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "hcPersona")
    public Set<HcDocumentoClinico_visorhc> getHcDocumentoClinicos() {
        return this.hcDocumentoClinicos;
    }

    public void setHcDocumentoClinicos(
            Set<HcDocumentoClinico_visorhc> hcDocumentoClinicos) {
        this.hcDocumentoClinicos = hcDocumentoClinicos;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "hcPersonaByIdPersonaNueva")
    public Set<HcTrazaDocumento_visorhc> getHcTrazaDocumentosForIdPersonaNueva() {
        return this.hcTrazaDocumentosForIdPersonaNueva;
    }

    public void setHcTrazaDocumentosForIdPersonaNueva(
            Set<HcTrazaDocumento_visorhc> hcTrazaDocumentosForIdPersonaNueva) {
        this.hcTrazaDocumentosForIdPersonaNueva = hcTrazaDocumentosForIdPersonaNueva;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "hcPersonaByIdPersonaVieja")
    public Set<HcTrazaDocumento_visorhc> getHcTrazaDocumentosForIdPersonaVieja() {
        return this.hcTrazaDocumentosForIdPersonaVieja;
    }

    public void setHcTrazaDocumentosForIdPersonaVieja(
            Set<HcTrazaDocumento_visorhc> hcTrazaDocumentosForIdPersonaVieja) {
        this.hcTrazaDocumentosForIdPersonaVieja = hcTrazaDocumentosForIdPersonaVieja;
    }

}
